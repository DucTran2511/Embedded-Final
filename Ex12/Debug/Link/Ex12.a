;/*
; * Ex12.c
; *
; * Created: 12/21/2024 10:27:19 PM
; * Author: ADMIN
; */
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;#include <stdint.h>
;#include <stdio.h>
;#include <eeprom.h>
;
;int keypad[3][3] = {0, 1, 2, 3, 4, 5, 6, 7, 8}; // ma tran ban phim

	.DSEG
;char input_password[4]; // Luu mat khau nhap tu ban phim
;char correct_password[4]; // Mat khau dung (luu EEPROM)
;int remaining_attempts = 2; // So lan nhap sai con lai
;volatile int lock_triggered = 0; // Bien xac dinh trang thai khoa
;
;// Timer0 ngat tran
;interrupt [TIM0_OVF] void timer0_ovf_isr(void) {
; 0000 0015 interrupt [17] void timer0_ovf_isr(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0016     static int dem = 0;
; 0000 0017     TCNT0 = 0x06;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0018 
; 0000 0019     if (lock_triggered) {
;PCODE: $00000011 VOL: 1
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 001A         dem += 1;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 001B         if (dem % 2000 == 1000) {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001C             PORTD.4 = 1;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001D             PORTD.6 = 0;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001E         }
; 0000 001F         if (dem % 2000 == 0) {
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0020             PORTD.4 = 0;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0021             PORTD.6 = 1;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0022         }
; 0000 0023     }
;PCODE: $0000002A VOL: 0
; 0000 0024 }
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;
;void BUTTON() {
; 0000 0026 void BUTTON() {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0027     int i;
; 0000 0028     int j;
; 0000 0029     int index;
; 0000 002A     char buffer[2];
; 0000 002B 
; 0000 002C     index = 0;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;	i -> R16,R17
;	j -> R18,R19
;	index -> R20,R21
;	buffer -> Y+6
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 002D     lcd_gotoxy(0, 1);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 002E     while (index < 3) { // Nhap 3 ki tu
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002F         for (j = 0; j < 3; j++) {
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0030             if (j == 0) PORTF = 0b11111101;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0031             if (j == 1) PORTF = 0b11110111;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0032             if (j == 2) PORTF = 0b11011111;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0033             for (i = 0; i < 3; i++) {
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0034                 if ((i == 0 && PINF.2 == 0) ||
; 0000 0035                     (i == 1 && PINF.4 == 0) ||
; 0000 0036                     (i == 2 && PINF.0 == 0)) {
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0037                     input_password[index] = keypad[i][j] + '0'; // Luu ki tu nhap vao
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0038                     buffer[0] = input_password[index];
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0039                     buffer[1] = '\0';
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 003A                     lcd_putchar(buffer[0]);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 003B                     delay_ms(300);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 003C                     lcd_gotoxy(index, 1);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 003D                     lcd_putchar('*'); // Hien thi dau *
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 003E                     delay_ms(500);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 003F                     index++;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0040                     break;
;PCODE: $0000009A VOL: 0
; 0000 0041                 }
; 0000 0042             }
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0043         }
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0044         // Xu ly BT2 la so 9
; 0000 0045         if (PINB.3 == 0) {
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0046             input_password[index] = '9';
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0047             buffer[0] = input_password[index];
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0048             buffer[1] = '\0';
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0049             lcd_putchar(buffer[0]);
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 004A             delay_ms(300);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 004B             lcd_gotoxy(index, 1);
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 004C             lcd_putchar('*');
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 004D             delay_ms(500);
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 004E             index++;
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 004F         }
; 0000 0050     }
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 0051     input_password[3] = '\0'; // Ket thuc chuoi
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0052 }
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;
;void handle_correct_password() {
; 0000 0054 void handle_correct_password() {
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0055     lcd_clear();
;PCODE: $000000CC VOL: 0
; 0000 0056     lcd_puts("Mat khau dung!");
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 0057     delay_ms(2000);
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0058     remaining_attempts = 2; // Reset lai so lan nhap sai
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 0059 
; 0000 005A     lcd_clear();
;PCODE: $000000D4 VOL: 0
; 0000 005B     lcd_puts("Doi mat khau:");
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 005C     lcd_gotoxy(0,1);
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 005D     lcd_puts("Y/N");
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 005E     delay_ms(2000);
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 005F 
; 0000 0060     // Kiem tra lua chon cua nguoi dung
; 0000 0061     while (1) {
;PCODE: $000000E1 VOL: 0
; 0000 0062         if (PINB.2 == 0) { // BT1: Y (Yes)
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0063             lcd_clear();
;PCODE: $000000E5 VOL: 0
; 0000 0064             lcd_puts("Nhap MK moi:");
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 0065             BUTTON(); // Nhan mat khau moi
;PCODE: $000000E9 VOL: 0
; 0000 0066 
; 0000 0067             // Luu mat khau moi vao EEPROM
; 0000 0068             eeprom_write_block((void *)input_password, (void *)0, 4);
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 0069             lcd_clear();
;PCODE: $000000F1 VOL: 0
; 0000 006A             lcd_puts("Mat khau da luu!");
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 006B             delay_ms(2000);
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 006C             eeprom_read_block((void *)correct_password, (const void *)0, sizeof(correct_password));
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 006D             break;
;PCODE: $000000FE VOL: 0
; 0000 006E         }
; 0000 006F         if (PINB.0 == 0) { // BT3: N (No)
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0070             lcd_clear();
;PCODE: $00000103 VOL: 0
; 0000 0071             lcd_puts("Su dung MK cu!");
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 0072             delay_ms(2000);
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0073             break;
;PCODE: $00000109 VOL: 0
; 0000 0074         }
; 0000 0075     }
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0076 
; 0000 0077     // Sau khi xu ly, quay lai hien thi nhap mat khau
; 0000 0078     lcd_clear();
;PCODE: $0000010D VOL: 0
; 0000 0079     lcd_puts("Nhap mat khau:");
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 007A }
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0

	.DSEG
_0x25:
	.BYTE 0x5D
;
;void handle_wrong_password() {
; 0000 007C void handle_wrong_password() {

	.CSEG
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 007D     char buffer[20];
; 0000 007E 
; 0000 007F     lcd_clear();
;PCODE: $00000115 VOL: 0
;	buffer -> Y+0
;PCODE: $00000116 VOL: 0
; 0000 0080     remaining_attempts--;
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 0081     sprintf(buffer, "Sai! Con %d lan", remaining_attempts);
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 0082     lcd_puts(buffer);
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 0083     delay_ms(2000);
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 0084 
; 0000 0085     if (remaining_attempts <= 0) {
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 0086         lcd_clear();
;PCODE: $0000012C VOL: 0
; 0000 0087         lcd_puts("Bi khoa!");
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 0088         PORTC |= (1 << 3); // Bat RELAY1
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 0089         lock_triggered = 1; // Kich hoat che do khoa
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 1
; 0000 008A         ASSR = 0 << AS0;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 008B         TCCR0 = 0x03;
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 008C         TCNT0 = 0x06;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 008D         OCR0 = 0x00; // Thuong giu nguyen o cac bai
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 008E         TIMSK = 0x01; // Thuong giu nguyen o cac bai
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 008F         ETIMSK = 0x00; // Thuong giu nguyen o cac bai
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 0090         #asm("sei")
;PCODE: $00000140 VOL: 0
	sei
;PCODE: $00000141 VOL: 0
; 0000 0091 
; 0000 0092         while (1) {
;PCODE: $00000142 VOL: 0
; 0000 0093             // LED nhap nhay duoc dieu khien boi timer0
; 0000 0094         }
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 0095     } else {
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 0096         // Hien thi lai nhap mat khau
; 0000 0097         lcd_clear();
;PCODE: $00000147 VOL: 0
; 0000 0098         lcd_puts("Nhap mat khau:");
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 0099     }
;PCODE: $0000014B VOL: 0
; 0000 009A }
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0

	.DSEG
_0x2C:
	.BYTE 0x18
;
;int my_strcmp(const char *str1, const char *str2) {
; 0000 009C int my_strcmp(const char *str1, const char *str2) {

	.CSEG
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 009D     while (*str1 && (*str1 == *str2)) {
;PCODE: $00000151 VOL: 0
;	*str1 -> Y+2
;	*str2 -> Y+0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 009E         str1++;
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 009F         str2++;
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00A0     }
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00A1     return *(unsigned char *)str1 - *(unsigned char *)str2;
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00A2 }
;PCODE: $00000173 VOL: 0
;
;void main() {
; 0000 00A4 void main() {
;PCODE: $00000174 VOL: 0
; 0000 00A5     const char *password_to_write = "108";
; 0000 00A6     DDRF = 0b11101010; // Cai dat huong nhap xuat cho ban phim ma tran
;	*password_to_write -> R16,R17
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 00A7     PORTF = 0b00010101; // Keo len muc cao cho cac hang
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 00A8     DDRB &= ~(1 << 3); // BT2 la dau vao (PB3)
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00A9     DDRB &= ~(1 << 2); // BT1 la dau vao (PB2)
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 00AA     DDRB &= ~(1 << 0); // BT3 la dau vao (PB0)
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 00AB     PORTB |= (1 << 3) | (1 << 2) | (1 << 0); // Keo len muc cao cho PB3, PB2, PB0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00AC     DDRC |= (1 << 3); // RELAY1 PC3 la dau ra
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 00AD     DDRD |= (1 << 4) | (1 << 6); // LED do (PD4), LED xanh nuoc bien (PD6)
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 00AE 
; 0000 00AF     lcd_init(16); // Khoi tao LCD
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 00B0 
; 0000 00B1     // Khoi tao EEPROM mat khau dung
; 0000 00B2     eeprom_write_block(password_to_write, (void *)0, 4);
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00B3     eeprom_read_block((void *)correct_password, (const void *)0, sizeof(correct_password));
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 00B4 
; 0000 00B5     // Khoi tao timer0
; 0000 00B6     TCCR0 = (1 << CS02) | (1 << CS00); // Prescaler = 1024
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 00B7     TCNT0 = 6; // Gia tri khoi tao cho chu ky 1 giay
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00B8 
; 0000 00B9     while (1) {
;PCODE: $0000019D VOL: 0
; 0000 00BA         lcd_clear(); // Xoa man hinh hoan toan truoc khi hien thi lai
;PCODE: $0000019E VOL: 0
; 0000 00BB         lcd_puts("Nhap mat khau:");
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 00BC         BUTTON(); // Nhan mat khau
;PCODE: $000001A2 VOL: 0
; 0000 00BD         if (my_strcmp(input_password, correct_password) == 0) {
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 00BE             handle_correct_password();
;PCODE: $000001A9 VOL: 0
; 0000 00BF         } else {
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 00C0             handle_wrong_password();
;PCODE: $000001AC VOL: 0
; 0000 00C1         }
;PCODE: $000001AD VOL: 0
; 0000 00C2     }
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 00C3 }
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0

	.DSEG
_0x36:
	.BYTE 0x13
;
