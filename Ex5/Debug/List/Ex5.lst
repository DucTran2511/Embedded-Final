
AVRASM ver. 2.1.30  C:\Code\Ex5\Debug\List\Ex5.asm Fri Dec 20 20:29:41 2024

C:\Code\Ex5\Debug\List\Ex5.asm(1090): warning: Register r4 already defined by the .DEF directive
C:\Code\Ex5\Debug\List\Ex5.asm(1091): warning: Register r5 already defined by the .DEF directive
C:\Code\Ex5\Debug\List\Ex5.asm(1092): warning: Register r7 already defined by the .DEF directive
C:\Code\Ex5\Debug\List\Ex5.asm(1093): warning: Register r6 already defined by the .DEF directive
C:\Code\Ex5\Debug\List\Ex5.asm(1094): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _curSpeed=R4
                 	.DEF _curSpeed_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 017f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 _tbl10_G100:
000138 2710
000139 03e8
00013a 0064
00013b 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00013c 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00013d 1000
00013e 0100
00013f 0010
000140 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 __glcd_mask:
000141 0100
000142 0703
000143 1f0f
000144 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
C:\Code\Ex5\Debug\List\Ex5.asm(1208): warning: .cseg .db misalignment - padding zero byte
000145 00ff      	.DB  0xFF
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000146 0000      	.DB  0x0,0x0
                 
                 _0x0:
000147 4156
000148 2054
000149 4f54
00014a 2043      	.DB  0x56,0x41,0x54,0x20,0x54,0x4F,0x43,0x20
00014b 4f44
00014c 4320
00014d 4f41
00014e 4800      	.DB  0x44,0x4F,0x20,0x43,0x41,0x4F,0x0,0x48
00014f 414f
000150 204e
000151 4854
000152 4e41      	.DB  0x4F,0x41,0x4E,0x20,0x54,0x48,0x41,0x4E
000153 2048
000154 4843
000155 0055
000156 5254      	.DB  0x48,0x20,0x43,0x48,0x55,0x0,0x54,0x52
000157 4e49
000158 2048
000159 4947
00015a 5441      	.DB  0x49,0x4E,0x48,0x20,0x47,0x49,0x41,0x54
C:\Code\Ex5\Debug\List\Ex5.asm(1220): warning: .cseg .db misalignment - padding zero byte
00015b 0000      	.DB  0x0
                 _0x2020003:
00015c c080      	.DB  0x80,0xC0
                 _0x2120060:
C:\Code\Ex5\Debug\List\Ex5.asm(1224): warning: .cseg .db misalignment - padding zero byte
00015d 0001      	.DB  0x1
                 _0x2120000:
00015e 4e2d
00015f 4e41
000160 4900
000161 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Code\Ex5\Debug\List\Ex5.asm(1227): warning: .cseg .db misalignment - padding zero byte
000162 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000163 0002      	.DW  0x02
000164 0004      	.DW  0x04
000165 028c      	.DW  __REG_VARS*2
                 
000166 000f      	.DW  0x0F
000167 0500      	.DW  _0x14
000168 028e      	.DW  _0x0*2
                 
000169 000f      	.DW  0x0F
00016a 050f      	.DW  _0x14+15
00016b 028e      	.DW  _0x0*2
                 
00016c 000f      	.DW  0x0F
00016d 051e      	.DW  _0x14+30
00016e 029d      	.DW  _0x0*2+15
                 
00016f 000b      	.DW  0x0B
000170 052d      	.DW  _0x14+45
000171 02ac      	.DW  _0x0*2+30
                 
000172 000f      	.DW  0x0F
000173 0538      	.DW  _0x14+56
000174 029d      	.DW  _0x0*2+15
                 
000175 000b      	.DW  0x0B
000176 0547      	.DW  _0x14+71
000177 02ac      	.DW  _0x0*2+30
                 
000178 0002      	.DW  0x02
000179 056f      	.DW  __base_y_G101
00017a 02b8      	.DW  _0x2020003*2
                 
00017b 0001      	.DW  0x01
00017c 076d      	.DW  __seed_G109
00017d 02ba      	.DW  _0x2120060*2
                 
                 _0xFFFFFFFF:
00017e 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00017f 94f8      	CLI
000180 27ee      	CLR  R30
000181 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000182 e0f1      	LDI  R31,1
000183 bff5      	OUT  MCUCR,R31
000184 bfe5      	OUT  MCUCR,R30
000185 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000187 e08d      	LDI  R24,(14-2)+1
000188 e0a2      	LDI  R26,2
000189 27bb      	CLR  R27
                 __CLEAR_REG:
00018a 93ed      	ST   X+,R30
00018b 958a      	DEC  R24
00018c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00018d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00018e e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00018f e0a0      	LDI  R26,LOW(__SRAM_START)
000190 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000191 93ed      	ST   X+,R30
000192 9701      	SBIW R24,1
000193 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000194 ece6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000195 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000196 9185      	LPM  R24,Z+
000197 9195      	LPM  R25,Z+
000198 9700      	SBIW R24,0
000199 f061      	BREQ __GLOBAL_INI_END
00019a 91a5      	LPM  R26,Z+
00019b 91b5      	LPM  R27,Z+
00019c 9005      	LPM  R0,Z+
00019d 9015      	LPM  R1,Z+
00019e 01bf      	MOVW R22,R30
00019f 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001a0 9005      	LPM  R0,Z+
0001a1 920d      	ST   X+,R0
0001a2 9701      	SBIW R24,1
0001a3 f7e1      	BRNE __GLOBAL_INI_LOOP
0001a4 01fb      	MOVW R30,R22
0001a5 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001a6 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001a7 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001a8 bfed      	OUT  SPL,R30
0001a9 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001aa bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001ab e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001ac e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001ad 940c 0202 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * Ex5.c
                 ; *
                 ; * Created: 12/20/2024 5:45:36 PM
                 ; * Author: ADMIN
                 ; */
                 ;
                 ;#include <stdio.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdbool.h>
                 ;#include <stdio.h>
                 ;#include <alcd.h>
                 ;#include <stdint.h>
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;
                 ;int curSpeed = 0;
                 ;void init_glcd(){
                 ; 0000 0012 void init_glcd(){
                 
                 	.CSEG
                 _init_glcd:
                 ; .FSTART _init_glcd
                 ; 0000 0013     GLCDINIT_t glcd_init_data;
                 ; 0000 0014     glcd_init_data.font=font5x7;
0001af 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
0001b0 e8ec      	LDI  R30,LOW(_font5x7*2)
0001b1 e0f0      	LDI  R31,HIGH(_font5x7*2)
0001b2 83e8      	ST   Y,R30
0001b3 83f9      	STD  Y+1,R31
                 ; 0000 0015     glcd_init_data.temp_coef=140;
0001b4 81ee      	LDD  R30,Y+6
0001b5 7fec      	ANDI R30,LOW(0xFC)
0001b6 83ee      	STD  Y+6,R30
                 ; 0000 0016     glcd_init_data.bias=4;
0001b7 7ee3      	ANDI R30,LOW(0xE3)
0001b8 61e0      	ORI  R30,0x10
0001b9 83ee      	STD  Y+6,R30
                 ; 0000 0017     glcd_init_data.vlcd=66;
0001ba 81ef      	LDD  R30,Y+7
0001bb 78e0      	ANDI R30,LOW(0x80)
0001bc 64e2      	ORI  R30,LOW(0x42)
0001bd 83ef      	STD  Y+7,R30
                 ; 0000 0018     glcd_init(&glcd_init_data);
0001be 01de      	MOVW R26,R28
0001bf 940e 0367 	CALL _glcd_init
                 ; 0000 0019 }
0001c1 940c 074b 	JMP  _0x2140006
                 ; .FEND
                 ;
                 ;void init_alcd(){
                 ; 0000 001B void init_alcd(){
                 _init_alcd:
                 ; .FSTART _init_alcd
                 ; 0000 001C     lcd_init(20);
0001c3 e1a4      	LDI  R26,LOW(20)
0001c4 940e 02be 	CALL _lcd_init
                 ; 0000 001D     lcd_clear();
0001c6 940e 0291 	CALL _lcd_clear
                 ; 0000 001E }
0001c8 9508      	RET
                 ; .FEND
                 ;void adjustSpeed(int speed) {
                 ; 0000 001F void adjustSpeed(int speed) {
                 _adjustSpeed:
                 ; .FSTART _adjustSpeed
                 ; 0000 0020     OCR0 = 255 - speed;
0001c9 93ba      	ST   -Y,R27
0001ca 93aa      	ST   -Y,R26
                 ;	speed -> Y+0
0001cb 81a8      	LD   R26,Y
0001cc efef      	LDI  R30,LOW(255)
0001cd 1bea      	SUB  R30,R26
0001ce bfe1      	OUT  0x31,R30
                 ; 0000 0021 }
0001cf 940c 0781 	JMP  _0x2140003
                 ; .FEND
                 ;
                 ;int speedUpdater(int option) {
                 ; 0000 0023 int speedUpdater(int option) {
                 _speedUpdater:
                 ; .FSTART _speedUpdater
                 ; 0000 0024     int newSpeed;
                 ; 0000 0025     if (curSpeed == 0) {
0001d1 93ba      	ST   -Y,R27
0001d2 93aa      	ST   -Y,R26
0001d3 931a      	ST   -Y,R17
0001d4 930a      	ST   -Y,R16
                 ;	option -> Y+2
                 ;	newSpeed -> R16,R17
0001d5 2c04      	MOV  R0,R4
0001d6 2805      	OR   R0,R5
0001d7 f421      	BRNE _0x3
                 ; 0000 0026         curSpeed = 63;
0001d8 e3ef      	LDI  R30,LOW(63)
0001d9 e0f0      	LDI  R31,HIGH(63)
0001da 012f      	MOVW R4,R30
                 ; 0000 0027     }
                 ; 0000 0028     else {
0001db c01f      	RJMP _0x4
                 _0x3:
                 ; 0000 0029         if (option == 20)
0001dc 81aa      	LDD  R26,Y+2
0001dd 81bb      	LDD  R27,Y+2+1
0001de 9754      	SBIW R26,20
0001df f441      	BRNE _0x5
                 ; 0000 002A             newSpeed = curSpeed + curSpeed / 5;
0001e0 01d2      	MOVW R26,R4
0001e1 e0e5      	LDI  R30,LOW(5)
0001e2 e0f0      	LDI  R31,HIGH(5)
0001e3 940e 08bc 	CALL __DIVW21
0001e5 0de4      	ADD  R30,R4
0001e6 1df5      	ADC  R31,R5
0001e7 c009      	RJMP _0x16
                 ; 0000 002B         else if (option == 100)
                 _0x5:
0001e8 81aa      	LDD  R26,Y+2
0001e9 81bb      	LDD  R27,Y+2+1
0001ea 36a4      	CPI  R26,LOW(0x64)
0001eb e0e0      	LDI  R30,HIGH(0x64)
0001ec 07be      	CPC  R27,R30
0001ed f421      	BRNE _0x7
                 ; 0000 002C             newSpeed = curSpeed * 2;
0001ee 01f2      	MOVW R30,R4
0001ef 0fee      	LSL  R30
0001f0 1fff      	ROL  R31
                 _0x16:
0001f1 018f      	MOVW R16,R30
                 ; 0000 002D 
                 ; 0000 002E         if (newSpeed > 255){
                 _0x7:
                +
0001f2 3000     +CPI R16 , LOW ( 256 )
0001f3 e0e1     +LDI R30 , HIGH ( 256 )
0001f4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,256
0001f5 f024      	BRLT _0x8
                 ; 0000 002F             curSpeed = 255;
0001f6 efef      	LDI  R30,LOW(255)
0001f7 e0f0      	LDI  R31,HIGH(255)
0001f8 012f      	MOVW R4,R30
                 ; 0000 0030         }else{
0001f9 c001      	RJMP _0x9
                 _0x8:
                 ; 0000 0031             curSpeed = newSpeed;
0001fa 0128      	MOVW R4,R16
                 ; 0000 0032         }
                 _0x9:
                 ; 0000 0033     }
                 _0x4:
                 ; 0000 0034     adjustSpeed(curSpeed);
0001fb 01d2      	MOVW R26,R4
0001fc dfcc      	RCALL _adjustSpeed
                 ; 0000 0035     return curSpeed;
0001fd 01f2      	MOVW R30,R4
0001fe 8119      	LDD  R17,Y+1
0001ff 8108      	LDD  R16,Y+0
000200 9624      	ADIW R28,4
000201 9508      	RET
                 ; 0000 0036 }
                 ; .FEND
                 ;void main(void)
                 ; 0000 0038 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0039 int speed = 0;
                 ; 0000 003A init_glcd();
                 ;	speed -> R16,R17
                +
000202 e000     +LDI R16 , LOW ( 0 )
000203 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
000204 dfaa      	RCALL _init_glcd
                 ; 0000 003B init_alcd();
000205 dfbd      	RCALL _init_alcd
                 ; 0000 003C DDRD.7 = 1;
000206 9a8f      	SBI  0x11,7
                 ; 0000 003D DDRB.4 = 1;
000207 9abc      	SBI  0x17,4
                 ; 0000 003E PORTD.7 = 1;
000208 9a97      	SBI  0x12,7
                 ; 0000 003F // khoi tao timer 0 cho dong co
                 ; 0000 0040 ASSR=0<<AS0;
000209 e0e0      	LDI  R30,LOW(0)
00020a bfe0      	OUT  0x30,R30
                 ; 0000 0041 TCCR0=(1<<WGM00) | (1<<COM01) | (1<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
00020b e7e4      	LDI  R30,LOW(116)
00020c bfe3      	OUT  0x33,R30
                 ; 0000 0042 TCNT0=0x00;
00020d e0e0      	LDI  R30,LOW(0)
00020e bfe2      	OUT  0x32,R30
                 ; 0000 0043 adjustSpeed(0);
00020f e0a0      	LDI  R26,LOW(0)
000210 e0b0      	LDI  R27,0
000211 dfb7      	RCALL _adjustSpeed
                 ; 0000 0044 while (1)
                 _0x10:
                 ; 0000 0045     {
                 ; 0000 0046         speed = speedUpdater(20);
000212 e1a4      	LDI  R26,LOW(20)
000213 e0b0      	LDI  R27,0
000214 dfbc      	RCALL _speedUpdater
000215 018f      	MOVW R16,R30
                 ; 0000 0047         if(speed == 255){
000216 efef      	LDI  R30,LOW(255)
000217 e0f0      	LDI  R31,HIGH(255)
000218 17e0      	CP   R30,R16
000219 07f1      	CPC  R31,R17
00021a f5a9      	BRNE _0x13
                 ; 0000 0048             // Graphic LCD
                 ; 0000 0049             glcd_clear();
00021b 940e 040e 	CALL _glcd_clear
                 ; 0000 004A             glcd_outtextxy(0, 20, "VAT TOC DO CAO");
00021d e0e0      	LDI  R30,LOW(0)
00021e 93ea      	ST   -Y,R30
00021f e1e4      	LDI  R30,LOW(20)
000220 93ea      	ST   -Y,R30
                +
000221 e0a0     +LDI R26 , LOW ( _0x14 + ( 0 ) )
000222 e0b5     +LDI R27 , HIGH ( _0x14 + ( 0 ) )
                 	__POINTW2MN _0x14,0
000223 940e 07e9 	CALL SUBOPT_0x0
                 ; 0000 004B             // LCD
                 ; 0000 004C             lcd_clear();
                 ; 0000 004D             lcd_gotoxy(0, 0);
                 ; 0000 004E             lcd_puts("VAT TOC DO CAO");
                +
000225 e0af     +LDI R26 , LOW ( _0x14 + ( 15 ) )
000226 e0b5     +LDI R27 , HIGH ( _0x14 + ( 15 ) )
                 	__POINTW2MN _0x14,15
000227 940e 02b2 	CALL _lcd_puts
                 ; 0000 004F 
                 ; 0000 0050             // Ending the wash cycle
                 ; 0000 0051             delay_ms(2000);
000229 eda0      	LDI  R26,LOW(2000)
00022a e0b7      	LDI  R27,HIGH(2000)
00022b 940e 0883 	CALL _delay_ms
                 ; 0000 0052             adjustSpeed(0);
00022d e0a0      	LDI  R26,LOW(0)
00022e e0b0      	LDI  R27,0
00022f df99      	RCALL _adjustSpeed
                 ; 0000 0053             // Graphic LCD
                 ; 0000 0054             glcd_clear();
000230 940e 040e 	CALL _glcd_clear
                 ; 0000 0055             glcd_outtextxy(0, 10, "HOAN THANH CHU");
000232 e0e0      	LDI  R30,LOW(0)
000233 93ea      	ST   -Y,R30
000234 e0ea      	LDI  R30,LOW(10)
000235 93ea      	ST   -Y,R30
                +
000236 e1ae     +LDI R26 , LOW ( _0x14 + ( 30 ) )
000237 e0b5     +LDI R27 , HIGH ( _0x14 + ( 30 ) )
                 	__POINTW2MN _0x14,30
000238 940e 074d 	CALL _glcd_outtextxy
                 ; 0000 0056             glcd_outtextxy(10, 30, "TRINH GIAT");
00023a e0ea      	LDI  R30,LOW(10)
00023b 93ea      	ST   -Y,R30
00023c e1ee      	LDI  R30,LOW(30)
00023d 93ea      	ST   -Y,R30
                +
00023e e2ad     +LDI R26 , LOW ( _0x14 + ( 45 ) )
00023f e0b5     +LDI R27 , HIGH ( _0x14 + ( 45 ) )
                 	__POINTW2MN _0x14,45
000240 940e 07e9 	CALL SUBOPT_0x0
                 ; 0000 0057             // LCD
                 ; 0000 0058             lcd_clear();
                 ; 0000 0059             lcd_gotoxy(0, 0);
                 ; 0000 005A             lcd_puts("HOAN THANH CHU");
                +
000242 e3a8     +LDI R26 , LOW ( _0x14 + ( 56 ) )
000243 e0b5     +LDI R27 , HIGH ( _0x14 + ( 56 ) )
                 	__POINTW2MN _0x14,56
000244 940e 02b2 	CALL _lcd_puts
                 ; 0000 005B             lcd_gotoxy(0, 1);
000246 e0e0      	LDI  R30,LOW(0)
000247 93ea      	ST   -Y,R30
000248 e0a1      	LDI  R26,LOW(1)
000249 940e 0284 	CALL _lcd_gotoxy
                 ; 0000 005C             lcd_puts("TRINH GIAT");
                +
00024b e4a7     +LDI R26 , LOW ( _0x14 + ( 71 ) )
00024c e0b5     +LDI R27 , HIGH ( _0x14 + ( 71 ) )
                 	__POINTW2MN _0x14,71
00024d 940e 02b2 	CALL _lcd_puts
                 ; 0000 005D             break;
00024f c001      	RJMP _0x12
                 ; 0000 005E         }
                 ; 0000 005F 
                 ; 0000 0060     }
                 _0x13:
000250 cfc1      	RJMP _0x10
                 _0x12:
                 ; 0000 0061 }
                 _0x15:
000251 cfff      	RJMP _0x15
                 ; .FEND
                 
                 	.DSEG
                 _0x14:
000500           	.BYTE 0x52
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
000252 93aa      	ST   -Y,R26
000253 81e8      	LD   R30,Y
000254 71e0      	ANDI R30,LOW(0x10)
000255 f011      	BREQ _0x2020004
000256 9adb      	SBI  0x1B,3
000257 c001      	RJMP _0x2020005
                 _0x2020004:
000258 98db      	CBI  0x1B,3
                 _0x2020005:
000259 81e8      	LD   R30,Y
00025a 72e0      	ANDI R30,LOW(0x20)
00025b f011      	BREQ _0x2020006
00025c 9adc      	SBI  0x1B,4
00025d c001      	RJMP _0x2020007
                 _0x2020006:
00025e 98dc      	CBI  0x1B,4
                 _0x2020007:
00025f 81e8      	LD   R30,Y
000260 74e0      	ANDI R30,LOW(0x40)
000261 f011      	BREQ _0x2020008
000262 9add      	SBI  0x1B,5
000263 c001      	RJMP _0x2020009
                 _0x2020008:
000264 98dd      	CBI  0x1B,5
                 _0x2020009:
000265 81e8      	LD   R30,Y
000266 78e0      	ANDI R30,LOW(0x80)
000267 f011      	BREQ _0x202000A
000268 9ade      	SBI  0x1B,6
000269 c001      	RJMP _0x202000B
                 _0x202000A:
00026a 98de      	CBI  0x1B,6
                 _0x202000B:
                +
00026b e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00026c 958a     +DEC R24
00026d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00026e 9ada      	SBI  0x1B,2
                +
00026f e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000270 958a     +DEC R24
000271 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000272 98da      	CBI  0x1B,2
                +
000273 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000274 958a     +DEC R24
000275 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000276 940c 040c 	JMP  _0x214000A
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000278 93aa      	ST   -Y,R26
000279 81a8      	LD   R26,Y
00027a dfd7      	RCALL __lcd_write_nibble_G101
00027b 81e8          ld    r30,y
00027c 95e2          swap  r30
00027d 83e8          st    y,r30
00027e 81a8      	LD   R26,Y
00027f dfd2      	RCALL __lcd_write_nibble_G101
                +
000280 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000281 958a     +DEC R24
000282 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000283 c188      	RJMP _0x214000A
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000284 93aa      	ST   -Y,R26
000285 81e8      	LD   R30,Y
000286 e0f0      	LDI  R31,0
000287 59e1      	SUBI R30,LOW(-__base_y_G101)
000288 4ffa      	SBCI R31,HIGH(-__base_y_G101)
000289 81e0      	LD   R30,Z
00028a 81a9      	LDD  R26,Y+1
00028b 0fae      	ADD  R26,R30
00028c dfeb      	RCALL __lcd_write_data
00028d 8079      	LDD  R7,Y+1
00028e 8068      	LDD  R6,Y+0
00028f 940c 0781 	JMP  _0x2140003
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000291 e0a2      	LDI  R26,LOW(2)
000292 940e 07f2 	CALL SUBOPT_0x1
000294 e0ac      	LDI  R26,LOW(12)
000295 dfe2      	RCALL __lcd_write_data
000296 e0a1      	LDI  R26,LOW(1)
000297 940e 07f2 	CALL SUBOPT_0x1
000299 e0e0      	LDI  R30,LOW(0)
00029a 2e6e      	MOV  R6,R30
00029b 2e7e      	MOV  R7,R30
00029c 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00029d 93aa      	ST   -Y,R26
00029e 81a8      	LD   R26,Y
00029f 30aa      	CPI  R26,LOW(0xA)
0002a0 f011      	BREQ _0x2020011
0002a1 1479      	CP   R7,R9
0002a2 f048      	BRLO _0x2020010
                 _0x2020011:
0002a3 e0e0      	LDI  R30,LOW(0)
0002a4 93ea      	ST   -Y,R30
0002a5 9463      	INC  R6
0002a6 2da6      	MOV  R26,R6
0002a7 dfdc      	RCALL _lcd_gotoxy
0002a8 81a8      	LD   R26,Y
0002a9 30aa      	CPI  R26,LOW(0xA)
0002aa f409      	BRNE _0x2020013
0002ab c160      	RJMP _0x214000A
                 _0x2020013:
                 _0x2020010:
0002ac 9473      	INC  R7
0002ad 9ad8      	SBI  0x1B,0
0002ae 81a8      	LD   R26,Y
0002af dfc8      	RCALL __lcd_write_data
0002b0 98d8      	CBI  0x1B,0
0002b1 c15a      	RJMP _0x214000A
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0002b2 93ba      	ST   -Y,R27
0002b3 93aa      	ST   -Y,R26
0002b4 931a      	ST   -Y,R17
                 _0x2020014:
0002b5 940e 07f8 	CALL SUBOPT_0x2
0002b7 f019      	BREQ _0x2020016
0002b8 2fa1      	MOV  R26,R17
0002b9 dfe3      	RCALL _lcd_putchar
0002ba cffa      	RJMP _0x2020014
                 _0x2020016:
0002bb 8118      	LDD  R17,Y+0
0002bc 940c 07c8 	JMP  _0x2140002
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0002be 93aa      	ST   -Y,R26
0002bf 9ad3      	SBI  0x1A,3
0002c0 9ad4      	SBI  0x1A,4
0002c1 9ad5      	SBI  0x1A,5
0002c2 9ad6      	SBI  0x1A,6
0002c3 9ad2      	SBI  0x1A,2
0002c4 9ad0      	SBI  0x1A,0
0002c5 9ad1      	SBI  0x1A,1
0002c6 98da      	CBI  0x1B,2
0002c7 98d8      	CBI  0x1B,0
0002c8 98d9      	CBI  0x1B,1
0002c9 8098      	LDD  R9,Y+0
0002ca 81e8      	LD   R30,Y
0002cb 58e0      	SUBI R30,-LOW(128)
                +
0002cc 93e0 0571+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0002ce 81e8      	LD   R30,Y
0002cf 54e0      	SUBI R30,-LOW(192)
                +
0002d0 93e0 0572+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
0002d2 e1a4      	LDI  R26,LOW(20)
0002d3 e0b0      	LDI  R27,0
0002d4 940e 0883 	CALL _delay_ms
0002d6 940e 0800 	CALL SUBOPT_0x3
0002d8 940e 0800 	CALL SUBOPT_0x3
0002da 940e 0800 	CALL SUBOPT_0x3
0002dc e2a0      	LDI  R26,LOW(32)
0002dd df74      	RCALL __lcd_write_nibble_G101
                +
0002de ec88     +LDI R24 , LOW ( 200 )
0002df e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0002e0 9701     +SBIW R24 , 1
0002e1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0002e2 e2a8      	LDI  R26,LOW(40)
0002e3 df94      	RCALL __lcd_write_data
0002e4 e0a4      	LDI  R26,LOW(4)
0002e5 df92      	RCALL __lcd_write_data
0002e6 e8a5      	LDI  R26,LOW(133)
0002e7 df90      	RCALL __lcd_write_data
0002e8 e0a6      	LDI  R26,LOW(6)
0002e9 df8e      	RCALL __lcd_write_data
0002ea dfa6      	RCALL _lcd_clear
0002eb c120      	RJMP _0x214000A
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G102:
                 ; .FSTART _pcd8544_delay_G102
0002ec 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G102:
                 ; .FSTART _pcd8544_wrbus_G102
0002ed 93aa      	ST   -Y,R26
0002ee 931a      	ST   -Y,R17
0002ef 91e0 0065 	LDS  R30,101
0002f1 7eef      	ANDI R30,0xEF
0002f2 93e0 0065 	STS  101,R30
0002f4 e018      	LDI  R17,LOW(8)
                 _0x2040004:
0002f5 dff6      	RCALL _pcd8544_delay_G102
0002f6 81e9      	LDD  R30,Y+1
0002f7 78e0      	ANDI R30,LOW(0x80)
0002f8 f021      	BREQ _0x2040006
0002f9 91e0 0065 	LDS  R30,101
0002fb 60e2      	ORI  R30,2
0002fc c003      	RJMP _0x20400A0
                 _0x2040006:
0002fd 91e0 0065 	LDS  R30,101
0002ff 7fed      	ANDI R30,0xFD
                 _0x20400A0:
000300 93e0 0065 	STS  101,R30
000302 81e9      	LDD  R30,Y+1
000303 0fee      	LSL  R30
000304 83e9      	STD  Y+1,R30
000305 dfe6      	RCALL _pcd8544_delay_G102
000306 91e0 0065 	LDS  R30,101
000308 60e4      	ORI  R30,4
000309 93e0 0065 	STS  101,R30
00030b dfe0      	RCALL _pcd8544_delay_G102
00030c 91e0 0065 	LDS  R30,101
00030e 7feb      	ANDI R30,0xFB
00030f 93e0 0065 	STS  101,R30
000311 5011      	SUBI R17,LOW(1)
000312 f711      	BRNE _0x2040004
000313 91e0 0065 	LDS  R30,101
000315 61e0      	ORI  R30,0x10
000316 93e0 0065 	STS  101,R30
000318 8118      	LDD  R17,Y+0
000319 940c 0781 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
00031b 93aa      	ST   -Y,R26
00031c 91e0 0065 	LDS  R30,101
00031e 7fee      	ANDI R30,0xFE
00031f 93e0 0065 	STS  101,R30
000321 81a8      	LD   R26,Y
000322 dfca      	RCALL _pcd8544_wrbus_G102
000323 c0e8      	RJMP _0x214000A
                 ; .FEND
                 _pcd8544_wrdata_G102:
                 ; .FSTART _pcd8544_wrdata_G102
000324 93aa      	ST   -Y,R26
000325 91e0 0065 	LDS  R30,101
000327 60e1      	ORI  R30,1
000328 93e0 0065 	STS  101,R30
00032a 81a8      	LD   R26,Y
00032b dfc1      	RCALL _pcd8544_wrbus_G102
00032c c0df      	RJMP _0x214000A
                 ; .FEND
                 _pcd8544_setaddr_G102:
                 ; .FSTART _pcd8544_setaddr_G102
00032d 93aa      	ST   -Y,R26
00032e 931a      	ST   -Y,R17
00032f 81e9      	LDD  R30,Y+1
000330 95e6      	LSR  R30
000331 95e6      	LSR  R30
000332 95e6      	LSR  R30
000333 2f1e      	MOV  R17,R30
000334 e5e4      	LDI  R30,LOW(84)
000335 9fe1      	MUL  R30,R17
000336 01f0      	MOVW R30,R0
000337 01df      	MOVW R26,R30
000338 81ea      	LDD  R30,Y+2
000339 e0f0      	LDI  R31,0
00033a 0fea      	ADD  R30,R26
00033b 1ffb      	ADC  R31,R27
00033c 93e0 0573 	STS  _gfx_addr_G102,R30
00033e 93f0 0574 	STS  _gfx_addr_G102+1,R31
000340 2fe1      	MOV  R30,R17
000341 8118      	LDD  R17,Y+0
000342 940c 07c8 	JMP  _0x2140002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000344 93aa      	ST   -Y,R26
000345 81e9      	LDD  R30,Y+1
000346 68e0      	ORI  R30,0x80
000347 2fae      	MOV  R26,R30
000348 dfd2      	RCALL _pcd8544_wrcmd
000349 81e9      	LDD  R30,Y+1
00034a 93ea      	ST   -Y,R30
00034b 81a9      	LDD  R26,Y+1
00034c dfe0      	RCALL _pcd8544_setaddr_G102
00034d 64e0      	ORI  R30,0x40
00034e 2fae      	MOV  R26,R30
00034f dfcb      	RCALL _pcd8544_wrcmd
000350 940c 0781 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
000352 93aa      	ST   -Y,R26
000353 81e9      	LDD  R30,Y+1
000354 93ea      	ST   -Y,R30
000355 81a9      	LDD  R26,Y+1
000356 dfed      	RCALL _pcd8544_gotoxy
000357 91e0 0573 	LDS  R30,_gfx_addr_G102
000359 91f0 0574 	LDS  R31,_gfx_addr_G102+1
00035b 58eb      	SUBI R30,LOW(-_gfx_buffer_G102)
00035c 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G102)
00035d 81e0      	LD   R30,Z
00035e 940c 0781 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
000360 93aa      	ST   -Y,R26
000361 940e 0808 	CALL SUBOPT_0x4
000363 81a8      	LD   R26,Y
000364 83a0      	STD  Z+0,R26
000365 dfbe      	RCALL _pcd8544_wrdata_G102
000366 c0a5      	RJMP _0x214000A
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000367 93ba      	ST   -Y,R27
000368 93aa      	ST   -Y,R26
000369 940e 08f6 	CALL __SAVELOCR4
00036b 91e0 0064 	LDS  R30,100
00036d 61e0      	ORI  R30,0x10
00036e 940e 0813 	CALL SUBOPT_0x5
000370 61e0      	ORI  R30,0x10
000371 93e0 0065 	STS  101,R30
000373 91e0 0064 	LDS  R30,100
000375 60e4      	ORI  R30,4
000376 940e 0813 	CALL SUBOPT_0x5
000378 7feb      	ANDI R30,0xFB
000379 93e0 0065 	STS  101,R30
00037b 91e0 0064 	LDS  R30,100
00037d 60e2      	ORI  R30,2
00037e 93e0 0064 	STS  100,R30
000380 91e0 0064 	LDS  R30,100
000382 60e1      	ORI  R30,1
000383 93e0 0064 	STS  100,R30
000385 91e0 0064 	LDS  R30,100
000387 60e8      	ORI  R30,8
000388 940e 0813 	CALL SUBOPT_0x5
00038a 7fe7      	ANDI R30,0XF7
00038b 93e0 0065 	STS  101,R30
00038d e0aa      	LDI  R26,LOW(10)
00038e e0b0      	LDI  R27,0
00038f 940e 0883 	CALL _delay_ms
000391 91e0 0065 	LDS  R30,101
000393 60e8      	ORI  R30,8
000394 93e0 0065 	STS  101,R30
000396 81ec      	LDD  R30,Y+4
000397 81fd      	LDD  R31,Y+4+1
000398 9730      	SBIW R30,0
000399 f121      	BREQ _0x2040008
00039a 81e6      	LDD  R30,Z+6
00039b 70e3      	ANDI R30,LOW(0x3)
00039c 2f1e      	MOV  R17,R30
00039d 81ec      	LDD  R30,Y+4
00039e 81fd      	LDD  R31,Y+4+1
00039f 81e6      	LDD  R30,Z+6
0003a0 95e6      	LSR  R30
0003a1 95e6      	LSR  R30
0003a2 70e7      	ANDI R30,LOW(0x7)
0003a3 2f0e      	MOV  R16,R30
0003a4 81ec      	LDD  R30,Y+4
0003a5 81fd      	LDD  R31,Y+4+1
0003a6 81e7      	LDD  R30,Z+7
0003a7 77ef      	ANDI R30,0x7F
0003a8 2f3e      	MOV  R19,R30
0003a9 81ac      	LDD  R26,Y+4
0003aa 81bd      	LDD  R27,Y+4+1
0003ab 940e 08cf 	CALL __GETW1P
                +
0003ad 93e0 0556+STS _glcd_state + ( 4 ) , R30
0003af 93f0 0557+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0003b1 9612      	ADIW R26,2
0003b2 940e 08cf 	CALL __GETW1P
                +
0003b4 93e0 056b+STS _glcd_state + ( 25 ) , R30
0003b6 93f0 056c+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0003b8 81ac      	LDD  R26,Y+4
0003b9 81bd      	LDD  R27,Y+4+1
0003ba 9614      	ADIW R26,4
0003bb 940e 08cf 	CALL __GETW1P
0003bd c00d      	RJMP _0x20400A1
                 _0x2040008:
0003be e010      	LDI  R17,LOW(0)
0003bf e003      	LDI  R16,LOW(3)
0003c0 e332      	LDI  R19,LOW(50)
0003c1 e0e0      	LDI  R30,LOW(0)
0003c2 e0f0      	LDI  R31,HIGH(0)
                +
0003c3 93e0 0556+STS _glcd_state + ( 4 ) , R30
0003c5 93f0 0557+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
0003c7 93e0 056b+STS _glcd_state + ( 25 ) , R30
0003c9 93f0 056c+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20400A1:
                +
0003cb 93e0 056d+STS _glcd_state + ( 27 ) , R30
0003cd 93f0 056e+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0003cf e2a1      	LDI  R26,LOW(33)
0003d0 df4a      	RCALL _pcd8544_wrcmd
0003d1 2fe1      	MOV  R30,R17
0003d2 60e4      	ORI  R30,4
0003d3 2fae      	MOV  R26,R30
0003d4 df46      	RCALL _pcd8544_wrcmd
0003d5 2fe0      	MOV  R30,R16
0003d6 61e0      	ORI  R30,0x10
0003d7 2fae      	MOV  R26,R30
0003d8 df42      	RCALL _pcd8544_wrcmd
0003d9 2fe3      	MOV  R30,R19
0003da 68e0      	ORI  R30,0x80
0003db 2fae      	MOV  R26,R30
0003dc df3e      	RCALL _pcd8544_wrcmd
0003dd e2a0      	LDI  R26,LOW(32)
0003de df3c      	RCALL _pcd8544_wrcmd
0003df e0a1      	LDI  R26,LOW(1)
0003e0 d022      	RCALL _glcd_display
0003e1 e0e1      	LDI  R30,LOW(1)
0003e2 93e0 0552 	STS  _glcd_state,R30
0003e4 e0e0      	LDI  R30,LOW(0)
                +
0003e5 93e0 0553+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0003e7 e0e1      	LDI  R30,LOW(1)
                +
0003e8 93e0 0558+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0003ea 93e0 0559+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0003ec 93e0 055a+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0003ee efef      	LDI  R30,LOW(255)
                +
0003ef 93e0 055b+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0003f1 e0e1      	LDI  R30,LOW(1)
                +
0003f2 93e0 0562+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0003f4 e6e3     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0003f5 e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0003f6 93fa      	ST   -Y,R31
0003f7 93ea      	ST   -Y,R30
0003f8 efef      	LDI  R30,LOW(255)
0003f9 93ea      	ST   -Y,R30
0003fa e0a8      	LDI  R26,LOW(8)
0003fb e0b0      	LDI  R27,0
0003fc 940e 0768 	CALL _memset
0003fe d00f      	RCALL _glcd_clear
0003ff e0e1      	LDI  R30,LOW(1)
000400 940e 08fd 	CALL __LOADLOCR4
000402 c060      	RJMP _0x2140009
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
000403 93aa      	ST   -Y,R26
000404 81e8      	LD   R30,Y
000405 30e0      	CPI  R30,0
000406 f011      	BREQ _0x204000A
000407 e0ec      	LDI  R30,LOW(12)
000408 c001      	RJMP _0x204000B
                 _0x204000A:
000409 e0e8      	LDI  R30,LOW(8)
                 _0x204000B:
00040a 2fae      	MOV  R26,R30
00040b df0f      	RCALL _pcd8544_wrcmd
                 _0x214000A:
00040c 9621      	ADIW R28,1
00040d 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
00040e 940e 08f6 	CALL __SAVELOCR4
000410 e030      	LDI  R19,0
                +
000411 91e0 0553+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000413 30e0      	CPI  R30,0
000414 f009      	BREQ _0x204000D
000415 ef3f      	LDI  R19,LOW(255)
                 _0x204000D:
000416 e0e0      	LDI  R30,LOW(0)
000417 93ea      	ST   -Y,R30
000418 e0a0      	LDI  R26,LOW(0)
000419 df2a      	RCALL _pcd8544_gotoxy
                +
00041a ef08     +LDI R16 , LOW ( 504 )
00041b e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x204000E:
00041c 01f8      	MOVW R30,R16
                +
00041d 5001     +SUBI R16 , LOW ( 1 )
00041e 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
00041f 9730      	SBIW R30,0
000420 f019      	BREQ _0x2040010
000421 2fa3      	MOV  R26,R19
000422 df3d      	RCALL _pcd8544_wrbyte
000423 cff8      	RJMP _0x204000E
                 _0x2040010:
000424 e0e0      	LDI  R30,LOW(0)
000425 93ea      	ST   -Y,R30
000426 e0a0      	LDI  R26,LOW(0)
000427 d334      	RCALL _glcd_moveto
000428 940e 08fd 	CALL __LOADLOCR4
00042a 940c 07e7 	JMP  _0x2140001
                 ; .FEND
                 _pcd8544_wrmasked_G102:
                 ; .FSTART _pcd8544_wrmasked_G102
00042c 93aa      	ST   -Y,R26
00042d 931a      	ST   -Y,R17
00042e 81ed      	LDD  R30,Y+5
00042f 93ea      	ST   -Y,R30
000430 81ad      	LDD  R26,Y+5
000431 df20      	RCALL _pcd8544_rdbyte
000432 2f1e      	MOV  R17,R30
000433 81e9      	LDD  R30,Y+1
000434 30e7      	CPI  R30,LOW(0x7)
000435 f011      	BREQ _0x2040020
000436 30e8      	CPI  R30,LOW(0x8)
000437 f439      	BRNE _0x2040021
                 _0x2040020:
000438 81eb      	LDD  R30,Y+3
000439 93ea      	ST   -Y,R30
00043a 81aa      	LDD  R26,Y+2
00043b 940e 0783 	CALL _glcd_mappixcolor1bit
00043d 83eb      	STD  Y+3,R30
00043e c008      	RJMP _0x2040022
                 _0x2040021:
00043f 30e3      	CPI  R30,LOW(0x3)
000440 f421      	BRNE _0x2040024
000441 81eb      	LDD  R30,Y+3
000442 95e0      	COM  R30
000443 83eb      	STD  Y+3,R30
000444 c002      	RJMP _0x2040025
                 _0x2040024:
000445 30e0      	CPI  R30,0
000446 f421      	BRNE _0x2040026
                 _0x2040025:
                 _0x2040022:
000447 81ea      	LDD  R30,Y+2
000448 95e0      	COM  R30
000449 231e      	AND  R17,R30
00044a c002      	RJMP _0x2040027
                 _0x2040026:
00044b 30e2      	CPI  R30,LOW(0x2)
00044c f429      	BRNE _0x2040028
                 _0x2040027:
00044d 81ea      	LDD  R30,Y+2
00044e 81ab      	LDD  R26,Y+3
00044f 23ea      	AND  R30,R26
000450 2b1e      	OR   R17,R30
000451 c00e      	RJMP _0x204001E
                 _0x2040028:
000452 30e1      	CPI  R30,LOW(0x1)
000453 f429      	BRNE _0x2040029
000454 81ea      	LDD  R30,Y+2
000455 81ab      	LDD  R26,Y+3
000456 23ea      	AND  R30,R26
000457 271e      	EOR  R17,R30
000458 c007      	RJMP _0x204001E
                 _0x2040029:
000459 30e4      	CPI  R30,LOW(0x4)
00045a f429      	BRNE _0x204001E
00045b 81ea      	LDD  R30,Y+2
00045c 95e0      	COM  R30
00045d 81ab      	LDD  R26,Y+3
00045e 2bea      	OR   R30,R26
00045f 231e      	AND  R17,R30
                 _0x204001E:
000460 2fa1      	MOV  R26,R17
000461 defe      	RCALL _pcd8544_wrbyte
000462 8118      	LDD  R17,Y+0
                 _0x2140009:
000463 9626      	ADIW R28,6
000464 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000465 93aa      	ST   -Y,R26
000466 9723      	SBIW R28,3
000467 940e 08f4 	CALL __SAVELOCR6
000469 89a8      	LDD  R26,Y+16
00046a 35a4      	CPI  R26,LOW(0x54)
00046b f448      	BRSH _0x204002C
00046c 85af      	LDD  R26,Y+15
00046d 33a0      	CPI  R26,LOW(0x30)
00046e f430      	BRSH _0x204002C
00046f 85ae      	LDD  R26,Y+14
000470 30a0      	CPI  R26,LOW(0x0)
000471 f019      	BREQ _0x204002C
000472 85ad      	LDD  R26,Y+13
000473 30a0      	CPI  R26,LOW(0x0)
000474 f409      	BRNE _0x204002B
                 _0x204002C:
000475 c1cc      	RJMP _0x2140008
                 _0x204002B:
000476 85ee      	LDD  R30,Y+14
000477 87e8      	STD  Y+8,R30
000478 89a8      	LDD  R26,Y+16
000479 27bb      	CLR  R27
00047a 85ee      	LDD  R30,Y+14
00047b e0f0      	LDI  R31,0
00047c 0fae      	ADD  R26,R30
00047d 1fbf      	ADC  R27,R31
00047e 35a5      	CPI  R26,LOW(0x55)
00047f e0e0      	LDI  R30,HIGH(0x55)
000480 07be      	CPC  R27,R30
000481 f020      	BRLO _0x204002E
000482 89a8      	LDD  R26,Y+16
000483 e5e4      	LDI  R30,LOW(84)
000484 1bea      	SUB  R30,R26
000485 87ee      	STD  Y+14,R30
                 _0x204002E:
000486 852d      	LDD  R18,Y+13
000487 85af      	LDD  R26,Y+15
000488 27bb      	CLR  R27
000489 85ed      	LDD  R30,Y+13
00048a e0f0      	LDI  R31,0
00048b 0fae      	ADD  R26,R30
00048c 1fbf      	ADC  R27,R31
00048d 97d1      	SBIW R26,49
00048e f020      	BRLO _0x204002F
00048f 85af      	LDD  R26,Y+15
000490 e3e0      	LDI  R30,LOW(48)
000491 1bea      	SUB  R30,R26
000492 87ed      	STD  Y+13,R30
                 _0x204002F:
000493 85a9      	LDD  R26,Y+9
000494 30a6      	CPI  R26,LOW(0x6)
000495 f009      	BREQ PC+2
000496 c05b      	RJMP _0x2040030
000497 85ec      	LDD  R30,Y+12
000498 30e1      	CPI  R30,LOW(0x1)
000499 f409      	BRNE _0x2040034
00049a c1a7      	RJMP _0x2140008
                 _0x2040034:
00049b 30e3      	CPI  R30,LOW(0x3)
00049c f439      	BRNE _0x2040037
                +
00049d 91e0 056d+LDS R30 , _glcd_state + ( 27 )
00049f 91f0 056e+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0004a1 9730      	SBIW R30,0
0004a2 f409      	BRNE _0x2040036
0004a3 c19e      	RJMP _0x2140008
                 _0x2040036:
                 _0x2040037:
0004a4 8508      	LDD  R16,Y+8
0004a5 85ed      	LDD  R30,Y+13
0004a6 95e6      	LSR  R30
0004a7 95e6      	LSR  R30
0004a8 95e6      	LSR  R30
0004a9 2f3e      	MOV  R19,R30
0004aa 2fe2      	MOV  R30,R18
0004ab 70e7      	ANDI R30,LOW(0x7)
0004ac f419      	BRNE _0x2040039
0004ad 85ad      	LDD  R26,Y+13
0004ae 172a      	CP   R18,R26
0004af f0e9      	BREQ _0x2040038
                 _0x2040039:
0004b0 2fa0      	MOV  R26,R16
0004b1 27bb      	CLR  R27
0004b2 2fe3      	MOV  R30,R19
0004b3 e0f0      	LDI  R31,0
0004b4 940e 08a1 	CALL __MULW12U
0004b6 85aa      	LDD  R26,Y+10
0004b7 85bb      	LDD  R27,Y+10+1
0004b8 940e 0818 	CALL SUBOPT_0x6
0004ba 9526      	LSR  R18
0004bb 9526      	LSR  R18
0004bc 9526      	LSR  R18
0004bd 2f53      	MOV  R21,R19
                 _0x204003B:
0004be 935f      	PUSH R21
0004bf 5f5f      	SUBI R21,-1
0004c0 2fe2      	MOV  R30,R18
0004c1 91af      	POP  R26
0004c2 17ea      	CP   R30,R26
0004c3 f048      	BRLO _0x204003D
0004c4 2f10      	MOV  R17,R16
                 _0x204003E:
0004c5 2fe1      	MOV  R30,R17
0004c6 5011      	SUBI R17,1
0004c7 30e0      	CPI  R30,0
0004c8 f019      	BREQ _0x2040040
0004c9 940e 081d 	CALL SUBOPT_0x7
0004cb cff9      	RJMP _0x204003E
                 _0x2040040:
0004cc cff1      	RJMP _0x204003B
                 _0x204003D:
                 _0x2040038:
0004cd 85ae      	LDD  R26,Y+14
0004ce 170a      	CP   R16,R26
0004cf f111      	BREQ _0x2040041
0004d0 85ee      	LDD  R30,Y+14
0004d1 85aa      	LDD  R26,Y+10
0004d2 85bb      	LDD  R27,Y+10+1
0004d3 e0f0      	LDI  R31,0
0004d4 940e 0818 	CALL SUBOPT_0x6
0004d6 85ed      	LDD  R30,Y+13
0004d7 70e7      	ANDI R30,LOW(0x7)
0004d8 f009      	BREQ _0x2040042
0004d9 5f3f      	SUBI R19,-LOW(1)
                 _0x2040042:
0004da e020      	LDI  R18,LOW(0)
                 _0x2040043:
0004db 932f      	PUSH R18
0004dc 5f2f      	SUBI R18,-1
0004dd 2fe3      	MOV  R30,R19
0004de 91af      	POP  R26
0004df 17ae      	CP   R26,R30
0004e0 f488      	BRSH _0x2040045
0004e1 851e      	LDD  R17,Y+14
                 _0x2040046:
0004e2 931f      	PUSH R17
0004e3 5f1f      	SUBI R17,-1
0004e4 2fe0      	MOV  R30,R16
0004e5 91af      	POP  R26
0004e6 17ae      	CP   R26,R30
0004e7 f418      	BRSH _0x2040048
0004e8 940e 081d 	CALL SUBOPT_0x7
0004ea cff7      	RJMP _0x2040046
                 _0x2040048:
0004eb 85ee      	LDD  R30,Y+14
0004ec 81ae      	LDD  R26,Y+6
0004ed 81bf      	LDD  R27,Y+6+1
0004ee e0f0      	LDI  R31,0
0004ef 940e 0818 	CALL SUBOPT_0x6
0004f1 cfe9      	RJMP _0x2040043
                 _0x2040045:
                 _0x2040041:
                 _0x2040030:
0004f2 85ef      	LDD  R30,Y+15
0004f3 70e7      	ANDI R30,LOW(0x7)
0004f4 2f3e      	MOV  R19,R30
                 _0x2040049:
0004f5 85ed      	LDD  R30,Y+13
0004f6 30e0      	CPI  R30,0
0004f7 f409      	BRNE PC+2
0004f8 c149      	RJMP _0x204004B
0004f9 85ea      	LDD  R30,Y+10
0004fa 85fb      	LDD  R31,Y+10+1
0004fb 83ee      	STD  Y+6,R30
0004fc 83ff      	STD  Y+6+1,R31
0004fd e010      	LDI  R17,LOW(0)
0004fe 8908      	LDD  R16,Y+16
0004ff 3030      	CPI  R19,0
000500 f009      	BREQ PC+2
000501 c063      	RJMP _0x204004C
000502 85ad      	LDD  R26,Y+13
000503 30a8      	CPI  R26,LOW(0x8)
000504 f408      	BRSH PC+2
000505 c05a      	RJMP _0x204004D
000506 85e9      	LDD  R30,Y+9
000507 30e0      	CPI  R30,0
000508 f011      	BREQ _0x2040052
000509 30e3      	CPI  R30,LOW(0x3)
00050a f409      	BRNE _0x2040053
                 _0x2040052:
00050b c002      	RJMP _0x2040054
                 _0x2040053:
00050c 30e7      	CPI  R30,LOW(0x7)
00050d f409      	BRNE _0x2040055
                 _0x2040054:
00050e c002      	RJMP _0x2040056
                 _0x2040055:
00050f 30e8      	CPI  R30,LOW(0x8)
000510 f409      	BRNE _0x2040057
                 _0x2040056:
000511 c002      	RJMP _0x2040058
                 _0x2040057:
000512 30e9      	CPI  R30,LOW(0x9)
000513 f409      	BRNE _0x2040059
                 _0x2040058:
000514 c002      	RJMP _0x204005A
                 _0x2040059:
000515 30ea      	CPI  R30,LOW(0xA)
000516 f421      	BRNE _0x204005B
                 _0x204005A:
000517 930a      	ST   -Y,R16
000518 89a8      	LDD  R26,Y+16
000519 de2a      	RCALL _pcd8544_gotoxy
00051a c004      	RJMP _0x2040050
                 _0x204005B:
00051b 30e6      	CPI  R30,LOW(0x6)
00051c f411      	BRNE _0x2040050
00051d 940e 082a 	CALL SUBOPT_0x8
                 _0x2040050:
                 _0x204005D:
00051f 931f      	PUSH R17
000520 5f1f      	SUBI R17,-1
000521 85ee      	LDD  R30,Y+14
000522 91af      	POP  R26
000523 17ae      	CP   R26,R30
000524 f5a0      	BRSH _0x204005F
000525 85a9      	LDD  R26,Y+9
000526 30a6      	CPI  R26,LOW(0x6)
000527 f451      	BRNE _0x2040060
000528 940e 082e 	CALL SUBOPT_0x9
00052a 93fa      	ST   -Y,R31
00052b 93ea      	ST   -Y,R30
00052c 940e 0808 	CALL SUBOPT_0x4
00052e 81a0      	LD   R26,Z
00052f 940e 07ca 	CALL _glcd_writemem
000531 c026      	RJMP _0x2040061
                 _0x2040060:
000532 85e9      	LDD  R30,Y+9
000533 30e9      	CPI  R30,LOW(0x9)
000534 f411      	BRNE _0x2040065
000535 e050      	LDI  R21,LOW(0)
000536 c00e      	RJMP _0x2040066
                 _0x2040065:
000537 30ea      	CPI  R30,LOW(0xA)
000538 f411      	BRNE _0x2040064
000539 ef5f      	LDI  R21,LOW(255)
00053a c00a      	RJMP _0x2040066
                 _0x2040064:
00053b 940e 082e 	CALL SUBOPT_0x9
00053d 940e 0837 	CALL SUBOPT_0xA
00053f 2f5e      	MOV  R21,R30
000540 85e9      	LDD  R30,Y+9
000541 30e7      	CPI  R30,LOW(0x7)
000542 f011      	BREQ _0x204006D
000543 30e8      	CPI  R30,LOW(0x8)
000544 f421      	BRNE _0x204006E
                 _0x204006D:
                 _0x2040066:
000545 940e 083d 	CALL SUBOPT_0xB
000547 2f5e      	MOV  R21,R30
000548 c006      	RJMP _0x204006F
                 _0x204006E:
000549 30e3      	CPI  R30,LOW(0x3)
00054a f411      	BRNE _0x2040071
00054b 9550      	COM  R21
00054c c002      	RJMP _0x2040072
                 _0x2040071:
00054d 30e0      	CPI  R30,0
00054e f419      	BRNE _0x2040074
                 _0x2040072:
                 _0x204006F:
00054f 2fa5      	MOV  R26,R21
000550 ddd3      	RCALL _pcd8544_wrdata_G102
000551 c006      	RJMP _0x204006B
                 _0x2040074:
000552 940e 0841 	CALL SUBOPT_0xC
000554 efef      	LDI  R30,LOW(255)
000555 93ea      	ST   -Y,R30
000556 85ad      	LDD  R26,Y+13
000557 ded4      	RCALL _pcd8544_wrmasked_G102
                 _0x204006B:
                 _0x2040061:
000558 cfc6      	RJMP _0x204005D
                 _0x204005F:
000559 85ef      	LDD  R30,Y+15
00055a 5fe8      	SUBI R30,-LOW(8)
00055b 87ef      	STD  Y+15,R30
00055c 85ed      	LDD  R30,Y+13
00055d 50e8      	SUBI R30,LOW(8)
00055e 87ed      	STD  Y+13,R30
00055f c0d9      	RJMP _0x2040075
                 _0x204004D:
000560 855d      	LDD  R21,Y+13
000561 e020      	LDI  R18,LOW(0)
000562 e0e0      	LDI  R30,LOW(0)
000563 87ed      	STD  Y+13,R30
000564 c07e      	RJMP _0x2040076
                 _0x204004C:
000565 2fe3      	MOV  R30,R19
000566 85ad      	LDD  R26,Y+13
000567 0fae      	ADD  R26,R30
000568 30a9      	CPI  R26,LOW(0x9)
000569 f420      	BRSH _0x2040077
00056a 852d      	LDD  R18,Y+13
00056b e0e0      	LDI  R30,LOW(0)
00056c 87ed      	STD  Y+13,R30
00056d c003      	RJMP _0x2040078
                 _0x2040077:
00056e e0e8      	LDI  R30,LOW(8)
00056f 1be3      	SUB  R30,R19
000570 2f2e      	MOV  R18,R30
                 _0x2040078:
000571 933a      	ST   -Y,R19
000572 2fa2      	MOV  R26,R18
000573 940e 0778 	CALL _glcd_getmask
000575 2f4e      	MOV  R20,R30
000576 85e9      	LDD  R30,Y+9
000577 30e6      	CPI  R30,LOW(0x6)
000578 f511      	BRNE _0x204007C
000579 940e 082a 	CALL SUBOPT_0x8
                 _0x204007D:
00057b 931f      	PUSH R17
00057c 5f1f      	SUBI R17,-1
00057d 85ee      	LDD  R30,Y+14
00057e 91af      	POP  R26
00057f 17ae      	CP   R26,R30
000580 f4c8      	BRSH _0x204007F
000581 940e 0808 	CALL SUBOPT_0x4
000583 81e0      	LD   R30,Z
000584 23e4      	AND  R30,R20
000585 2fae      	MOV  R26,R30
000586 2fe3      	MOV  R30,R19
000587 940e 0899 	CALL __LSRB12
000589 940e 0847 	CALL SUBOPT_0xD
00058b 2fe3      	MOV  R30,R19
00058c 2fa4      	MOV  R26,R20
00058d 940e 0899 	CALL __LSRB12
00058f 95e0      	COM  R30
000590 21e1      	AND  R30,R1
000591 2b5e      	OR   R21,R30
000592 940e 082e 	CALL SUBOPT_0x9
000594 93fa      	ST   -Y,R31
000595 93ea      	ST   -Y,R30
000596 2fa5      	MOV  R26,R21
000597 940e 07ca 	CALL _glcd_writemem
000599 cfe1      	RJMP _0x204007D
                 _0x204007F:
00059a c02c      	RJMP _0x204007B
                 _0x204007C:
00059b 30e9      	CPI  R30,LOW(0x9)
00059c f411      	BRNE _0x2040080
00059d e050      	LDI  R21,LOW(0)
00059e c003      	RJMP _0x2040081
                 _0x2040080:
00059f 30ea      	CPI  R30,LOW(0xA)
0005a0 f4a9      	BRNE _0x2040087
0005a1 ef5f      	LDI  R21,LOW(255)
                 _0x2040081:
0005a2 940e 083d 	CALL SUBOPT_0xB
0005a4 2fae      	MOV  R26,R30
0005a5 2fe3      	MOV  R30,R19
0005a6 940e 0891 	CALL __LSLB12
0005a8 2f5e      	MOV  R21,R30
                 _0x2040084:
0005a9 931f      	PUSH R17
0005aa 5f1f      	SUBI R17,-1
0005ab 85ee      	LDD  R30,Y+14
0005ac 91af      	POP  R26
0005ad 17ae      	CP   R26,R30
0005ae f430      	BRSH _0x2040086
0005af 940e 0841 	CALL SUBOPT_0xC
0005b1 934a      	ST   -Y,R20
0005b2 e0a0      	LDI  R26,LOW(0)
0005b3 de78      	RCALL _pcd8544_wrmasked_G102
0005b4 cff4      	RJMP _0x2040084
                 _0x2040086:
0005b5 c011      	RJMP _0x204007B
                 _0x2040087:
                 _0x2040088:
0005b6 931f      	PUSH R17
0005b7 5f1f      	SUBI R17,-1
0005b8 85ee      	LDD  R30,Y+14
0005b9 91af      	POP  R26
0005ba 17ae      	CP   R26,R30
0005bb f458      	BRSH _0x204008A
0005bc 940e 0852 	CALL SUBOPT_0xE
0005be 2fae      	MOV  R26,R30
0005bf 2fe3      	MOV  R30,R19
0005c0 940e 0891 	CALL __LSLB12
0005c2 93ea      	ST   -Y,R30
0005c3 934a      	ST   -Y,R20
0005c4 85ad      	LDD  R26,Y+13
0005c5 de66      	RCALL _pcd8544_wrmasked_G102
0005c6 cfef      	RJMP _0x2040088
                 _0x204008A:
                 _0x204007B:
0005c7 85ed      	LDD  R30,Y+13
0005c8 30e0      	CPI  R30,0
0005c9 f409      	BRNE _0x204008B
0005ca c077      	RJMP _0x204004B
                 _0x204008B:
0005cb 85ad      	LDD  R26,Y+13
0005cc 30a8      	CPI  R26,LOW(0x8)
0005cd f428      	BRSH _0x204008C
0005ce 85ed      	LDD  R30,Y+13
0005cf 1be2      	SUB  R30,R18
0005d0 2f5e      	MOV  R21,R30
0005d1 e0e0      	LDI  R30,LOW(0)
0005d2 c003      	RJMP _0x20400A2
                 _0x204008C:
0005d3 2f53      	MOV  R21,R19
0005d4 85ed      	LDD  R30,Y+13
0005d5 50e8      	SUBI R30,LOW(8)
                 _0x20400A2:
0005d6 87ed      	STD  Y+13,R30
0005d7 e010      	LDI  R17,LOW(0)
0005d8 85ef      	LDD  R30,Y+15
0005d9 5fe8      	SUBI R30,-LOW(8)
0005da 87ef      	STD  Y+15,R30
0005db e0e8      	LDI  R30,LOW(8)
0005dc 1be3      	SUB  R30,R19
0005dd 2f2e      	MOV  R18,R30
0005de 8908      	LDD  R16,Y+16
0005df 85ea      	LDD  R30,Y+10
0005e0 85fb      	LDD  R31,Y+10+1
0005e1 83ee      	STD  Y+6,R30
0005e2 83ff      	STD  Y+6+1,R31
                 _0x2040076:
0005e3 2fe5      	MOV  R30,R21
0005e4 e0f0      	LDI  R31,0
0005e5 57ee      	SUBI R30,LOW(-__glcd_mask*2)
0005e6 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0005e7 9144      	LPM  R20,Z
0005e8 85e9      	LDD  R30,Y+9
0005e9 30e6      	CPI  R30,LOW(0x6)
0005ea f511      	BRNE _0x2040091
0005eb 940e 082a 	CALL SUBOPT_0x8
                 _0x2040092:
0005ed 931f      	PUSH R17
0005ee 5f1f      	SUBI R17,-1
0005ef 85ee      	LDD  R30,Y+14
0005f0 91af      	POP  R26
0005f1 17ae      	CP   R26,R30
0005f2 f4c8      	BRSH _0x2040094
0005f3 940e 0808 	CALL SUBOPT_0x4
0005f5 81e0      	LD   R30,Z
0005f6 23e4      	AND  R30,R20
0005f7 2fae      	MOV  R26,R30
0005f8 2fe2      	MOV  R30,R18
0005f9 940e 0891 	CALL __LSLB12
0005fb 940e 0847 	CALL SUBOPT_0xD
0005fd 2fe2      	MOV  R30,R18
0005fe 2fa4      	MOV  R26,R20
0005ff 940e 0891 	CALL __LSLB12
000601 95e0      	COM  R30
000602 21e1      	AND  R30,R1
000603 2b5e      	OR   R21,R30
000604 940e 082e 	CALL SUBOPT_0x9
000606 93fa      	ST   -Y,R31
000607 93ea      	ST   -Y,R30
000608 2fa5      	MOV  R26,R21
000609 940e 07ca 	CALL _glcd_writemem
00060b cfe1      	RJMP _0x2040092
                 _0x2040094:
00060c c02c      	RJMP _0x2040090
                 _0x2040091:
00060d 30e9      	CPI  R30,LOW(0x9)
00060e f411      	BRNE _0x2040095
00060f e050      	LDI  R21,LOW(0)
000610 c003      	RJMP _0x2040096
                 _0x2040095:
000611 30ea      	CPI  R30,LOW(0xA)
000612 f4a9      	BRNE _0x204009C
000613 ef5f      	LDI  R21,LOW(255)
                 _0x2040096:
000614 940e 083d 	CALL SUBOPT_0xB
000616 2fae      	MOV  R26,R30
000617 2fe2      	MOV  R30,R18
000618 940e 0899 	CALL __LSRB12
00061a 2f5e      	MOV  R21,R30
                 _0x2040099:
00061b 931f      	PUSH R17
00061c 5f1f      	SUBI R17,-1
00061d 85ee      	LDD  R30,Y+14
00061e 91af      	POP  R26
00061f 17ae      	CP   R26,R30
000620 f430      	BRSH _0x204009B
000621 940e 0841 	CALL SUBOPT_0xC
000623 934a      	ST   -Y,R20
000624 e0a0      	LDI  R26,LOW(0)
000625 de06      	RCALL _pcd8544_wrmasked_G102
000626 cff4      	RJMP _0x2040099
                 _0x204009B:
000627 c011      	RJMP _0x2040090
                 _0x204009C:
                 _0x204009D:
000628 931f      	PUSH R17
000629 5f1f      	SUBI R17,-1
00062a 85ee      	LDD  R30,Y+14
00062b 91af      	POP  R26
00062c 17ae      	CP   R26,R30
00062d f458      	BRSH _0x204009F
00062e 940e 0852 	CALL SUBOPT_0xE
000630 2fae      	MOV  R26,R30
000631 2fe2      	MOV  R30,R18
000632 940e 0899 	CALL __LSRB12
000634 93ea      	ST   -Y,R30
000635 934a      	ST   -Y,R20
000636 85ad      	LDD  R26,Y+13
000637 ddf4      	RCALL _pcd8544_wrmasked_G102
000638 cfef      	RJMP _0x204009D
                 _0x204009F:
                 _0x2040090:
                 _0x2040075:
000639 85e8      	LDD  R30,Y+8
00063a 85aa      	LDD  R26,Y+10
00063b 85bb      	LDD  R27,Y+10+1
00063c e0f0      	LDI  R31,0
00063d 0fea      	ADD  R30,R26
00063e 1ffb      	ADC  R31,R27
00063f 87ea      	STD  Y+10,R30
000640 87fb      	STD  Y+10+1,R31
000641 ceb3      	RJMP _0x2040049
                 _0x204004B:
                 _0x2140008:
000642 940e 08fb 	CALL __LOADLOCR6
000644 9661      	ADIW R28,17
000645 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000646 940e 085f 	CALL SUBOPT_0xF
000648 f01c      	BRLT _0x2060003
000649 e0e0      	LDI  R30,LOW(0)
00064a e0f0      	LDI  R31,HIGH(0)
00064b c135      	RJMP _0x2140003
                 _0x2060003:
00064c 81a8      	LD   R26,Y
00064d 81b9      	LDD  R27,Y+1
00064e 35a4      	CPI  R26,LOW(0x54)
00064f e0e0      	LDI  R30,HIGH(0x54)
000650 07be      	CPC  R27,R30
000651 f01c      	BRLT _0x2060004
000652 e5e3      	LDI  R30,LOW(83)
000653 e0f0      	LDI  R31,HIGH(83)
000654 c12c      	RJMP _0x2140003
                 _0x2060004:
000655 81e8      	LD   R30,Y
000656 81f9      	LDD  R31,Y+1
000657 c129      	RJMP _0x2140003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000658 940e 085f 	CALL SUBOPT_0xF
00065a f01c      	BRLT _0x2060005
00065b e0e0      	LDI  R30,LOW(0)
00065c e0f0      	LDI  R31,HIGH(0)
00065d c123      	RJMP _0x2140003
                 _0x2060005:
00065e 81a8      	LD   R26,Y
00065f 81b9      	LDD  R27,Y+1
000660 97d0      	SBIW R26,48
000661 f01c      	BRLT _0x2060006
000662 e2ef      	LDI  R30,LOW(47)
000663 e0f0      	LDI  R31,HIGH(47)
000664 c11c      	RJMP _0x2140003
                 _0x2060006:
000665 81e8      	LD   R30,Y
000666 81f9      	LDD  R31,Y+1
000667 c119      	RJMP _0x2140003
                 ; .FEND
                 _glcd_getcharw_G103:
                 ; .FSTART _glcd_getcharw_G103
000668 93ba      	ST   -Y,R27
000669 93aa      	ST   -Y,R26
00066a 9723      	SBIW R28,3
00066b 940e 0866 	CALL SUBOPT_0x10
00066d 018f      	MOVW R16,R30
00066e 2e00      	MOV  R0,R16
00066f 2a01      	OR   R0,R17
000670 f419      	BRNE _0x206000B
000671 e0e0      	LDI  R30,LOW(0)
000672 e0f0      	LDI  R31,HIGH(0)
000673 c05f      	RJMP _0x2140007
                 _0x206000B:
000674 940e 086d 	CALL SUBOPT_0x11
000676 820f      	STD  Y+7,R0
000677 940e 086d 	CALL SUBOPT_0x11
000679 820e      	STD  Y+6,R0
00067a 940e 086d 	CALL SUBOPT_0x11
00067c 8608      	STD  Y+8,R0
00067d 85eb      	LDD  R30,Y+11
00067e 85a8      	LDD  R26,Y+8
00067f 17ea      	CP   R30,R26
000680 f418      	BRSH _0x206000C
000681 e0e0      	LDI  R30,LOW(0)
000682 e0f0      	LDI  R31,HIGH(0)
000683 c04f      	RJMP _0x2140007
                 _0x206000C:
000684 01f8      	MOVW R30,R16
                +
000685 5f0f     +SUBI R16 , LOW ( - 1 )
000686 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000687 9154      	LPM  R21,Z
000688 85a8      	LDD  R26,Y+8
000689 27bb      	CLR  R27
00068a 27ee      	CLR  R30
00068b 0fa5      	ADD  R26,R21
00068c 1fbe      	ADC  R27,R30
00068d 85eb      	LDD  R30,Y+11
00068e e0f0      	LDI  R31,0
00068f 17ea      	CP   R30,R26
000690 07fb      	CPC  R31,R27
000691 f018      	BRLO _0x206000D
000692 e0e0      	LDI  R30,LOW(0)
000693 e0f0      	LDI  R31,HIGH(0)
000694 c03e      	RJMP _0x2140007
                 _0x206000D:
000695 81ee      	LDD  R30,Y+6
000696 95e6      	LSR  R30
000697 95e6      	LSR  R30
000698 95e6      	LSR  R30
000699 2f4e      	MOV  R20,R30
00069a 81ee      	LDD  R30,Y+6
00069b 70e7      	ANDI R30,LOW(0x7)
00069c f009      	BREQ _0x206000E
00069d 5f4f      	SUBI R20,-LOW(1)
                 _0x206000E:
00069e 81ef      	LDD  R30,Y+7
00069f 30e0      	CPI  R30,0
0006a0 f0a1      	BREQ _0x206000F
0006a1 85a9      	LDD  R26,Y+9
0006a2 85ba      	LDD  R27,Y+9+1
0006a3 93ec      	ST   X,R30
0006a4 85a8      	LDD  R26,Y+8
0006a5 85eb      	LDD  R30,Y+11
0006a6 1bea      	SUB  R30,R26
0006a7 e0f0      	LDI  R31,0
0006a8 01df      	MOVW R26,R30
0006a9 81ef      	LDD  R30,Y+7
0006aa e0f0      	LDI  R31,0
0006ab 940e 08a1 	CALL __MULW12U
0006ad 01df      	MOVW R26,R30
0006ae 2fe4      	MOV  R30,R20
0006af e0f0      	LDI  R31,0
0006b0 940e 08a1 	CALL __MULW12U
0006b2 0fe0      	ADD  R30,R16
0006b3 1ff1      	ADC  R31,R17
0006b4 c01e      	RJMP _0x2140007
                 _0x206000F:
0006b5 0198      	MOVW R18,R16
0006b6 2fe5      	MOV  R30,R21
0006b7 e0f0      	LDI  R31,0
                +
0006b8 0f0e     +ADD R16 , R30
0006b9 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2060010:
0006ba 85a8      	LDD  R26,Y+8
0006bb 5faf      	SUBI R26,-LOW(1)
0006bc 87a8      	STD  Y+8,R26
0006bd 50a1      	SUBI R26,LOW(1)
0006be 85eb      	LDD  R30,Y+11
0006bf 17ae      	CP   R26,R30
0006c0 f460      	BRSH _0x2060012
0006c1 01f9      	MOVW R30,R18
                +
0006c2 5f2f     +SUBI R18 , LOW ( - 1 )
0006c3 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0006c4 91a4      	LPM  R26,Z
0006c5 e0b0      	LDI  R27,0
0006c6 2fe4      	MOV  R30,R20
0006c7 e0f0      	LDI  R31,0
0006c8 940e 08a1 	CALL __MULW12U
                +
0006ca 0f0e     +ADD R16 , R30
0006cb 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
0006cc cfed      	RJMP _0x2060010
                 _0x2060012:
0006cd 01f9      	MOVW R30,R18
0006ce 91e4      	LPM  R30,Z
0006cf 85a9      	LDD  R26,Y+9
0006d0 85ba      	LDD  R27,Y+9+1
0006d1 93ec      	ST   X,R30
0006d2 01f8      	MOVW R30,R16
                 _0x2140007:
0006d3 940e 08fb 	CALL __LOADLOCR6
0006d5 962c      	ADIW R28,12
0006d6 9508      	RET
                 ; .FEND
                 _glcd_new_line_G103:
                 ; .FSTART _glcd_new_line_G103
0006d7 e0e0      	LDI  R30,LOW(0)
                +
0006d8 93e0 0554+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
0006da 91a0 0555+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0006dc 27bb      	CLR  R27
0006dd 940e 0872 	CALL SUBOPT_0x12
0006df e0f0      	LDI  R31,0
0006e0 0fae      	ADD  R26,R30
0006e1 1fbf      	ADC  R27,R31
                +
0006e2 91e0 0559+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0006e4 e0f0      	LDI  R31,0
0006e5 0fae      	ADD  R26,R30
0006e6 1fbf      	ADC  R27,R31
0006e7 df70      	RCALL _glcd_clipy
                +
0006e8 93e0 0555+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0006ea 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
0006eb 93aa      	ST   -Y,R26
0006ec 9721      	SBIW R28,1
0006ed 940e 0866 	CALL SUBOPT_0x10
0006ef 9730      	SBIW R30,0
0006f0 f409      	BRNE PC+2
0006f1 c055      	RJMP _0x206001F
0006f2 81af      	LDD  R26,Y+7
0006f3 30aa      	CPI  R26,LOW(0xA)
0006f4 f409      	BRNE _0x2060020
0006f5 c04f      	RJMP _0x2060021
                 _0x2060020:
0006f6 81ef      	LDD  R30,Y+7
0006f7 93ea      	ST   -Y,R30
0006f8 01de      	MOVW R26,R28
0006f9 9617      	ADIW R26,7
0006fa df6d      	RCALL _glcd_getcharw_G103
0006fb 01af      	MOVW R20,R30
0006fc 9730      	SBIW R30,0
0006fd f409      	BRNE _0x2060022
0006fe c04a      	RJMP _0x2140005
                 _0x2060022:
                +
0006ff 91e0 0558+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000701 81ae      	LDD  R26,Y+6
000702 0fea      	ADD  R30,R26
000703 2f3e      	MOV  R19,R30
                +
000704 91a0 0554+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000706 27bb      	CLR  R27
000707 e0f0      	LDI  R31,0
000708 0fea      	ADD  R30,R26
000709 1ffb      	ADC  R31,R27
00070a 018f      	MOVW R16,R30
                +
00070b 3505     +CPI R16 , LOW ( 85 )
00070c e0e0     +LDI R30 , HIGH ( 85 )
00070d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
00070e f018      	BRLO _0x2060023
00070f 2f03      	MOV  R16,R19
000710 2711      	CLR  R17
000711 dfc5      	RCALL _glcd_new_line_G103
                 _0x2060023:
                +
000712 91e0 0554+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000714 93ea      	ST   -Y,R30
                +
000715 91e0 0555+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000717 93ea      	ST   -Y,R30
000718 85e8      	LDD  R30,Y+8
000719 93ea      	ST   -Y,R30
00071a 940e 0872 	CALL SUBOPT_0x12
00071c 93ea      	ST   -Y,R30
00071d e0e1      	LDI  R30,LOW(1)
00071e 93ea      	ST   -Y,R30
00071f 935a      	ST   -Y,R21
000720 934a      	ST   -Y,R20
000721 e0a7      	LDI  R26,LOW(7)
000722 dd42      	RCALL _glcd_block
                +
000723 91e0 0554+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000725 81ae      	LDD  R26,Y+6
000726 0fea      	ADD  R30,R26
000727 93ea      	ST   -Y,R30
                +
000728 91e0 0555+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
00072a 93ea      	ST   -Y,R30
                +
00072b 91e0 0558+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00072d 93ea      	ST   -Y,R30
00072e 940e 0872 	CALL SUBOPT_0x12
000730 940e 0879 	CALL SUBOPT_0x13
                +
000732 91e0 0554+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000734 93ea      	ST   -Y,R30
                +
000735 91a0 0555+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000737 940e 0872 	CALL SUBOPT_0x12
000739 0fea      	ADD  R30,R26
00073a 93ea      	ST   -Y,R30
00073b 933a      	ST   -Y,R19
                +
00073c 91e0 0559+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
00073e 940e 0879 	CALL SUBOPT_0x13
000740 e5e4      	LDI  R30,LOW(84)
000741 e0f0      	LDI  R31,HIGH(84)
000742 17e0      	CP   R30,R16
000743 07f1      	CPC  R31,R17
000744 f411      	BRNE _0x2060024
                 _0x2060021:
000745 df91      	RCALL _glcd_new_line_G103
000746 c002      	RJMP _0x2140005
                 _0x2060024:
                 _0x206001F:
                +
000747 9300 0554+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2140005:
000749 940e 08fb 	CALL __LOADLOCR6
                 _0x2140006:
00074b 9628      	ADIW R28,8
00074c 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
00074d 93ba      	ST   -Y,R27
00074e 93aa      	ST   -Y,R26
00074f 931a      	ST   -Y,R17
000750 81ec      	LDD  R30,Y+4
000751 93ea      	ST   -Y,R30
000752 81ac      	LDD  R26,Y+4
000753 d008      	RCALL _glcd_moveto
                 _0x2060025:
000754 940e 07f8 	CALL SUBOPT_0x2
000756 f019      	BREQ _0x2060027
000757 2fa1      	MOV  R26,R17
000758 df92      	RCALL _glcd_putchar
000759 cffa      	RJMP _0x2060025
                 _0x2060027:
00075a 8118      	LDD  R17,Y+0
00075b c01a      	RJMP _0x2140004
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
00075c 93aa      	ST   -Y,R26
00075d 81a9      	LDD  R26,Y+1
00075e 27bb      	CLR  R27
00075f dee6      	RCALL _glcd_clipx
                +
000760 93e0 0554+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000762 81a8      	LD   R26,Y
000763 27bb      	CLR  R27
000764 def3      	RCALL _glcd_clipy
                +
000765 93e0 0555+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000767 c019      	RJMP _0x2140003
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000768 93ba      	ST   -Y,R27
000769 93aa      	ST   -Y,R26
00076a 81b9          ldd  r27,y+1
00076b 81a8          ld   r26,y
00076c 9610          adiw r26,0
00076d f031          breq memset1
00076e 81fc          ldd  r31,y+4
00076f 81eb          ldd  r30,y+3
000770 816a          ldd  r22,y+2
                 memset0:
000771 9361          st   z+,r22
000772 9711          sbiw r26,1
000773 f7e9          brne memset0
                 memset1:
000774 81eb          ldd  r30,y+3
000775 81fc          ldd  r31,y+4
                 _0x2140004:
000776 9625      	ADIW R28,5
000777 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000778 93aa      	ST   -Y,R26
000779 81e8      	LD   R30,Y
00077a e0f0      	LDI  R31,0
00077b 57ee      	SUBI R30,LOW(-__glcd_mask*2)
00077c 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
00077d 91a4      	LPM  R26,Z
00077e 81e9      	LDD  R30,Y+1
00077f 940e 0891 	CALL __LSLB12
                 _0x2140003:
000781 9622      	ADIW R28,2
000782 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000783 93aa      	ST   -Y,R26
000784 931a      	ST   -Y,R17
000785 81e9      	LDD  R30,Y+1
000786 30e7      	CPI  R30,LOW(0x7)
000787 f011      	BREQ _0x20E0007
000788 30ea      	CPI  R30,LOW(0xA)
000789 f419      	BRNE _0x20E0008
                 _0x20E0007:
00078a 9110 0552 	LDS  R17,_glcd_state
00078c c009      	RJMP _0x20E0009
                 _0x20E0008:
00078d 30e9      	CPI  R30,LOW(0x9)
00078e f419      	BRNE _0x20E000B
                +
00078f 9110 0553+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000791 c004      	RJMP _0x20E0009
                 _0x20E000B:
000792 30e8      	CPI  R30,LOW(0x8)
000793 f4a1      	BRNE _0x20E0005
                +
000794 9110 0562+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20E0009:
                +
000796 91e0 0553+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000798 30e0      	CPI  R30,0
000799 f049      	BREQ _0x20E000E
00079a 3010      	CPI  R17,0
00079b f019      	BREQ _0x20E000F
00079c efef      	LDI  R30,LOW(255)
00079d 8118      	LDD  R17,Y+0
00079e c029      	RJMP _0x2140002
                 _0x20E000F:
00079f 81ea      	LDD  R30,Y+2
0007a0 95e0      	COM  R30
0007a1 8118      	LDD  R17,Y+0
0007a2 c025      	RJMP _0x2140002
                 _0x20E000E:
0007a3 3010      	CPI  R17,0
0007a4 f419      	BRNE _0x20E0011
0007a5 e0e0      	LDI  R30,LOW(0)
0007a6 8118      	LDD  R17,Y+0
0007a7 c020      	RJMP _0x2140002
                 _0x20E0011:
                 _0x20E0005:
0007a8 81ea      	LDD  R30,Y+2
0007a9 8118      	LDD  R17,Y+0
0007aa c01d      	RJMP _0x2140002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
0007ab 93ba      	ST   -Y,R27
0007ac 93aa      	ST   -Y,R26
0007ad 81ea      	LDD  R30,Y+2
0007ae 30e1      	CPI  R30,LOW(0x1)
0007af f421      	BRNE _0x20E0015
0007b0 81e8      	LD   R30,Y
0007b1 81f9      	LDD  R31,Y+1
0007b2 91e4      	LPM  R30,Z
0007b3 c014      	RJMP _0x2140002
                 _0x20E0015:
0007b4 30e2      	CPI  R30,LOW(0x2)
0007b5 f429      	BRNE _0x20E0016
0007b6 81a8      	LD   R26,Y
0007b7 81b9      	LDD  R27,Y+1
0007b8 940e 08d3 	CALL __EEPROMRDB
0007ba c00d      	RJMP _0x2140002
                 _0x20E0016:
0007bb 30e3      	CPI  R30,LOW(0x3)
0007bc f441      	BRNE _0x20E0018
0007bd 81a8      	LD   R26,Y
0007be 81b9      	LDD  R27,Y+1
                +
0007bf 91e0 056b+LDS R30 , _glcd_state + ( 25 )
0007c1 91f0 056c+LDS R31 , _glcd_state + ( 25 ) + 1
0007c3 9509     +ICALL
                 	__CALL1MN _glcd_state,25
0007c4 c003      	RJMP _0x2140002
                 _0x20E0018:
0007c5 81a8      	LD   R26,Y
0007c6 81b9      	LDD  R27,Y+1
0007c7 91ec      	LD   R30,X
                 _0x2140002:
0007c8 9623      	ADIW R28,3
0007c9 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
0007ca 93aa      	ST   -Y,R26
0007cb 81eb      	LDD  R30,Y+3
0007cc 30e0      	CPI  R30,0
0007cd f429      	BRNE _0x20E001C
0007ce 81e8      	LD   R30,Y
0007cf 81a9      	LDD  R26,Y+1
0007d0 81ba      	LDD  R27,Y+1+1
0007d1 93ec      	ST   X,R30
0007d2 c014      	RJMP _0x20E001B
                 _0x20E001C:
0007d3 30e2      	CPI  R30,LOW(0x2)
0007d4 f431      	BRNE _0x20E001D
0007d5 81e8      	LD   R30,Y
0007d6 81a9      	LDD  R26,Y+1
0007d7 81ba      	LDD  R27,Y+1+1
0007d8 940e 08df 	CALL __EEPROMWRB
0007da c00c      	RJMP _0x20E001B
                 _0x20E001D:
0007db 30e3      	CPI  R30,LOW(0x3)
0007dc f451      	BRNE _0x20E001B
0007dd 81e9      	LDD  R30,Y+1
0007de 81fa      	LDD  R31,Y+1+1
0007df 93fa      	ST   -Y,R31
0007e0 93ea      	ST   -Y,R30
0007e1 81aa      	LDD  R26,Y+2
                +
0007e2 91e0 056d+LDS R30 , _glcd_state + ( 27 )
0007e4 91f0 056e+LDS R31 , _glcd_state + ( 27 ) + 1
0007e6 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20E001B:
                 _0x2140001:
0007e7 9624      	ADIW R28,4
0007e8 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000552           	.BYTE 0x1D
                 __base_y_G101:
00056f           	.BYTE 0x4
                 _gfx_addr_G102:
000573           	.BYTE 0x2
                 _gfx_buffer_G102:
000575           	.BYTE 0x1F8
                 __seed_G109:
00076d           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x0:
0007e9 940e 074d 	CALL _glcd_outtextxy
0007eb 940e 0291 	CALL _lcd_clear
0007ed e0e0      	LDI  R30,LOW(0)
0007ee 93ea      	ST   -Y,R30
0007ef e0a0      	LDI  R26,LOW(0)
0007f0 940c 0284 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0007f2 940e 0278 	CALL __lcd_write_data
0007f4 e0a3      	LDI  R26,LOW(3)
0007f5 e0b0      	LDI  R27,0
0007f6 940c 0883 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
0007f8 81a9      	LDD  R26,Y+1
0007f9 81ba      	LDD  R27,Y+1+1
0007fa 91ed      	LD   R30,X+
0007fb 83a9      	STD  Y+1,R26
0007fc 83ba      	STD  Y+1+1,R27
0007fd 2f1e      	MOV  R17,R30
0007fe 30e0      	CPI  R30,0
0007ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
000800 e3a0      	LDI  R26,LOW(48)
000801 940e 0252 	CALL __lcd_write_nibble_G101
                +
000803 ec88     +LDI R24 , LOW ( 200 )
000804 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000805 9701     +SBIW R24 , 1
000806 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000807 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x4:
000808 e7a3      	LDI  R26,LOW(_gfx_addr_G102)
000809 e0b5      	LDI  R27,HIGH(_gfx_addr_G102)
00080a 91ed      	LD   R30,X+
00080b 91fd      	LD   R31,X+
00080c 9631      	ADIW R30,1
00080d 93fe      	ST   -X,R31
00080e 93ee      	ST   -X,R30
00080f 9731      	SBIW R30,1
000810 58eb      	SUBI R30,LOW(-_gfx_buffer_G102)
000811 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G102)
000812 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000813 93e0 0064 	STS  100,R30
000815 91e0 0065 	LDS  R30,101
000817 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000818 0fea      	ADD  R30,R26
000819 1ffb      	ADC  R31,R27
00081a 83ee      	STD  Y+6,R30
00081b 83ff      	STD  Y+6+1,R31
00081c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x7:
00081d 85ec      	LDD  R30,Y+12
00081e 93ea      	ST   -Y,R30
00081f 81ef      	LDD  R30,Y+7
000820 85f8      	LDD  R31,Y+7+1
000821 9631      	ADIW R30,1
000822 83ef      	STD  Y+7,R30
000823 87f8      	STD  Y+7+1,R31
000824 9731      	SBIW R30,1
000825 93fa      	ST   -Y,R31
000826 93ea      	ST   -Y,R30
000827 e0a0      	LDI  R26,LOW(0)
000828 940c 07ca 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
00082a 930a      	ST   -Y,R16
00082b 89a8      	LDD  R26,Y+16
00082c 940c 032d 	JMP  _pcd8544_setaddr_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x9:
00082e 85ec      	LDD  R30,Y+12
00082f 93ea      	ST   -Y,R30
000830 81ef      	LDD  R30,Y+7
000831 85f8      	LDD  R31,Y+7+1
000832 9631      	ADIW R30,1
000833 83ef      	STD  Y+7,R30
000834 87f8      	STD  Y+7+1,R31
000835 9731      	SBIW R30,1
000836 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
000837 2766      	CLR  R22
000838 2777      	CLR  R23
000839 01df      	MOVW R26,R30
00083a 01cb      	MOVW R24,R22
00083b 940c 07ab 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
00083d 935a      	ST   -Y,R21
00083e 85aa      	LDD  R26,Y+10
00083f 940c 0783 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000841 930a      	ST   -Y,R16
000842 9503      	INC  R16
000843 89e8      	LDD  R30,Y+16
000844 93ea      	ST   -Y,R30
000845 935a      	ST   -Y,R21
000846 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
000847 2f5e      	MOV  R21,R30
000848 85ec      	LDD  R30,Y+12
000849 93ea      	ST   -Y,R30
00084a 81af      	LDD  R26,Y+7
00084b 85b8      	LDD  R27,Y+7+1
00084c 2788      	CLR  R24
00084d 2799      	CLR  R25
00084e 940e 07ab 	CALL _glcd_readmem
000850 2e1e      	MOV  R1,R30
000851 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE:
000852 930a      	ST   -Y,R16
000853 9503      	INC  R16
000854 89e8      	LDD  R30,Y+16
000855 93ea      	ST   -Y,R30
000856 85ee      	LDD  R30,Y+14
000857 93ea      	ST   -Y,R30
000858 85e9      	LDD  R30,Y+9
000859 85fa      	LDD  R31,Y+9+1
00085a 9631      	ADIW R30,1
00085b 87e9      	STD  Y+9,R30
00085c 87fa      	STD  Y+9+1,R31
00085d 9731      	SBIW R30,1
00085e cfd8      	RJMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
00085f 93ba      	ST   -Y,R27
000860 93aa      	ST   -Y,R26
000861 81a8      	LD   R26,Y
000862 81b9      	LDD  R27,Y+1
000863 940e 08f0 	CALL __CPW02
000865 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000866 940e 08f4 	CALL __SAVELOCR6
                +
000868 91e0 0556+LDS R30 , _glcd_state + ( 4 )
00086a 91f0 0557+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
00086c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
00086d 01f8      	MOVW R30,R16
                +
00086e 5f0f     +SUBI R16 , LOW ( - 1 )
00086f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000870 9004      	LPM  R0,Z
000871 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x12:
                +
000872 91e0 0556+LDS R30 , _glcd_state + ( 4 )
000874 91f0 0557+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000876 9631      	ADIW R30,1
000877 91e4      	LPM  R30,Z
000878 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13:
000879 93ea      	ST   -Y,R30
00087a e0e0      	LDI  R30,LOW(0)
00087b 93ea      	ST   -Y,R30
00087c e0e0      	LDI  R30,LOW(0)
00087d e0f0      	LDI  R31,HIGH(0)
00087e 93fa      	ST   -Y,R31
00087f 93ea      	ST   -Y,R30
000880 e0a9      	LDI  R26,LOW(9)
000881 940c 0465 	JMP  _glcd_block
                 
                 
                 	.CSEG
                 _delay_ms:
000883 9610      	adiw r26,0
000884 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000885 ed80     +LDI R24 , LOW ( 0x7D0 )
000886 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000887 9701     +SBIW R24 , 1
000888 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000889 95a8      	wdr
00088a 9711      	sbiw r26,1
00088b f7c9      	brne __delay_ms0
                 __delay_ms1:
00088c 9508      	ret
                 
                 __ANEGW1:
00088d 95f1      	NEG  R31
00088e 95e1      	NEG  R30
00088f 40f0      	SBCI R31,0
000890 9508      	RET
                 
                 __LSLB12:
000891 23ee      	TST  R30
000892 2e0e      	MOV  R0,R30
000893 2fea      	MOV  R30,R26
000894 f019      	BREQ __LSLB12R
                 __LSLB12L:
000895 0fee      	LSL  R30
000896 940a      	DEC  R0
000897 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000898 9508      	RET
                 
                 __LSRB12:
000899 23ee      	TST  R30
00089a 2e0e      	MOV  R0,R30
00089b 2fea      	MOV  R30,R26
00089c f019      	BREQ __LSRB12R
                 __LSRB12L:
00089d 95e6      	LSR  R30
00089e 940a      	DEC  R0
00089f f7e9      	BRNE __LSRB12L
                 __LSRB12R:
0008a0 9508      	RET
                 
                 __MULW12U:
0008a1 9ffa      	MUL  R31,R26
0008a2 2df0      	MOV  R31,R0
0008a3 9feb      	MUL  R30,R27
0008a4 0df0      	ADD  R31,R0
0008a5 9fea      	MUL  R30,R26
0008a6 2de0      	MOV  R30,R0
0008a7 0df1      	ADD  R31,R1
0008a8 9508      	RET
                 
                 __DIVW21U:
0008a9 2400      	CLR  R0
0008aa 2411      	CLR  R1
0008ab e190      	LDI  R25,16
                 __DIVW21U1:
0008ac 0faa      	LSL  R26
0008ad 1fbb      	ROL  R27
0008ae 1c00      	ROL  R0
0008af 1c11      	ROL  R1
0008b0 1a0e      	SUB  R0,R30
0008b1 0a1f      	SBC  R1,R31
0008b2 f418      	BRCC __DIVW21U2
0008b3 0e0e      	ADD  R0,R30
0008b4 1e1f      	ADC  R1,R31
0008b5 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0008b6 60a1      	SBR  R26,1
                 __DIVW21U3:
0008b7 959a      	DEC  R25
0008b8 f799      	BRNE __DIVW21U1
0008b9 01fd      	MOVW R30,R26
0008ba 01d0      	MOVW R26,R0
0008bb 9508      	RET
                 
                 __DIVW21:
0008bc d004      	RCALL __CHKSIGNW
0008bd dfeb      	RCALL __DIVW21U
0008be f40e      	BRTC __DIVW211
0008bf dfcd      	RCALL __ANEGW1
                 __DIVW211:
0008c0 9508      	RET
                 
                 __CHKSIGNW:
0008c1 94e8      	CLT
0008c2 fff7      	SBRS R31,7
0008c3 c002      	RJMP __CHKSW1
0008c4 dfc8      	RCALL __ANEGW1
0008c5 9468      	SET
                 __CHKSW1:
0008c6 ffb7      	SBRS R27,7
0008c7 c006      	RJMP __CHKSW2
0008c8 95a0      	COM  R26
0008c9 95b0      	COM  R27
0008ca 9611      	ADIW R26,1
0008cb f800      	BLD  R0,0
0008cc 9403      	INC  R0
0008cd fa00      	BST  R0,0
                 __CHKSW2:
0008ce 9508      	RET
                 
                 __GETW1P:
0008cf 91ed      	LD   R30,X+
0008d0 91fc      	LD   R31,X
0008d1 9711      	SBIW R26,1
0008d2 9508      	RET
                 
                 __EEPROMRDB:
0008d3 99e1      	SBIC EECR,EEWE
0008d4 cffe      	RJMP __EEPROMRDB
0008d5 93ff      	PUSH R31
0008d6 b7ff      	IN   R31,SREG
0008d7 94f8      	CLI
0008d8 bbae      	OUT  EEARL,R26
0008d9 bbbf      	OUT  EEARH,R27
0008da 9ae0      	SBI  EECR,EERE
0008db b3ed      	IN   R30,EEDR
0008dc bfff      	OUT  SREG,R31
0008dd 91ff      	POP  R31
0008de 9508      	RET
                 
                 __EEPROMWRB:
0008df 9be1      	SBIS EECR,EEWE
0008e0 c002      	RJMP __EEPROMWRB1
0008e1 95a8      	WDR
0008e2 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
0008e3 b79f      	IN   R25,SREG
0008e4 94f8      	CLI
0008e5 bbae      	OUT  EEARL,R26
0008e6 bbbf      	OUT  EEARH,R27
0008e7 9ae0      	SBI  EECR,EERE
0008e8 b38d      	IN   R24,EEDR
0008e9 17e8      	CP   R30,R24
0008ea f019      	BREQ __EEPROMWRB0
0008eb bbed      	OUT  EEDR,R30
0008ec 9ae2      	SBI  EECR,EEMWE
0008ed 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
0008ee bf9f      	OUT  SREG,R25
0008ef 9508      	RET
                 
                 __CPW02:
0008f0 2400      	CLR  R0
0008f1 160a      	CP   R0,R26
0008f2 060b      	CPC  R0,R27
0008f3 9508      	RET
                 
                 __SAVELOCR6:
0008f4 935a      	ST   -Y,R21
                 __SAVELOCR5:
0008f5 934a      	ST   -Y,R20
                 __SAVELOCR4:
0008f6 933a      	ST   -Y,R19
                 __SAVELOCR3:
0008f7 932a      	ST   -Y,R18
                 __SAVELOCR2:
0008f8 931a      	ST   -Y,R17
0008f9 930a      	ST   -Y,R16
0008fa 9508      	RET
                 
                 __LOADLOCR6:
0008fb 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0008fc 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0008fd 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0008fe 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0008ff 8119      	LDD  R17,Y+1
000900 8108      	LD   R16,Y
000901 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  31 r1 :   9 r2 :   0 r3 :   0 r4 :   9 r5 :   2 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  45 r17:  77 r18:  26 r19:  28 r20:  18 r21:  32 r22:   6 r23:   1 
r24:  26 r25:  10 r26: 267 r27:  78 r28:  17 r29:   1 r30: 611 r31: 116 
x  :  14 y  : 385 z  :  25 
Registers used: 26 out of 35 (74.3%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  14 add   :  21 
adiw  :  21 and   :   8 andi  :  21 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  33 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   5 brmi  :   0 brne  :  67 brpl  :   0 brsh  :  16 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  : 105 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  19 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   9 
cp    :  20 cpc   :   9 cpi   :  66 cpse  :   0 dec   :   8 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   4 inc   :   5 jmp   :  53 ld    :  44 ldd   : 198 
ldi   : 192 lds   :  44 lpm   :  23 lsl   :   4 lsr   :  15 mov   :  81 
movw  :  32 mul   :   4 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   6 ori   :  18 out   :  17 pop   :  11 push  :  11 rcall :  62 
ret   :  40 reti  :   0 rjmp  : 106 rol   :   4 ror   :   0 sbc   :   1 
sbci  :  10 sbi   :  20 sbic  :   1 sbis  :   1 sbiw  :  25 sbr   :   1 
sbrc  :   0 sbrs  :   2 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 130 std   :  37 sts   :  41 sub   :   8 subi  :  31 
swap  :   1 tst   :   2 wdr   :   2 
Instructions used: 66 out of 117 (56.4%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001204   3986    626   4612  131072   3.5%
[.dseg] 0x000100 0x000771      0    625    625    4096  15.3%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 9 warnings
