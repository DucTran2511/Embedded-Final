
AVRASM ver. 2.1.30  C:\Code\Ex11 glcd\Debug\List\Ex11 glcd.asm Sat Dec 21 22:26:49 2024

C:\Code\Ex11 glcd\Debug\List\Ex11 glcd.asm(1090): warning: Register r4 already defined by the .DEF directive
C:\Code\Ex11 glcd\Debug\List\Ex11 glcd.asm(1091): warning: Register r5 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _remaining_attempts=R4
                 	.DEF _remaining_attempts_msb=R5
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 019e 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 01ce 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
C:\Code\Ex11 glcd\Debug\List\Ex11 glcd.asm(1200): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G102:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G102:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000146 0002      	.DB  0x2,0x0
                 
                 _0x3:
000147 0000
000148 0001
000149 0002
00014a 0003      	.DB  0x0,0x0,0x1,0x0,0x2,0x0,0x3,0x0
00014b 0004
00014c 0005
00014d 0006
00014e 0007      	.DB  0x4,0x0,0x5,0x0,0x6,0x0,0x7,0x0
C:\Code\Ex11 glcd\Debug\List\Ex11 glcd.asm(1214): warning: .cseg .db misalignment - padding zero byte
00014f 0008      	.DB  0x8
                 _0x0:
000150 2020
000151 2020
000152 2020
000153 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000154 2020
000155 2020
000156 2020
000157 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000158 2020
000159 2020
00015a 2a00
00015b 4d00      	.DB  0x20,0x20,0x20,0x20,0x0,0x2A,0x0,0x4D
00015c 7461
00015d 6b20
00015e 6168
00015f 2075      	.DB  0x61,0x74,0x20,0x6B,0x68,0x61,0x75,0x20
000160 7564
000161 676e
000162 0021
000163 6153      	.DB  0x64,0x75,0x6E,0x67,0x21,0x0,0x53,0x61
000164 2169
000165 4320
000166 6e6f
000167 2520      	.DB  0x69,0x21,0x20,0x43,0x6F,0x6E,0x20,0x25
000168 2064
000169 616c
00016a 006e
00016b 6942      	.DB  0x64,0x20,0x6C,0x61,0x6E,0x0,0x42,0x69
00016c 6b20
00016d 6f68
00016e 2161
00016f 3100      	.DB  0x20,0x6B,0x68,0x6F,0x61,0x21,0x0,0x31
000170 3830
000171 4e00
000172 6168
000173 2070      	.DB  0x30,0x38,0x0,0x4E,0x68,0x61,0x70,0x20
000174 616d
000175 2074
000176 686b
000177 7561      	.DB  0x6D,0x61,0x74,0x20,0x6B,0x68,0x61,0x75
000178 003a      	.DB  0x3A,0x0
                 _0x2120060:
C:\Code\Ex11 glcd\Debug\List\Ex11 glcd.asm(1228): warning: .cseg .db misalignment - padding zero byte
000179 0001      	.DB  0x1
                 _0x2120000:
00017a 4e2d
00017b 4e41
00017c 4900
00017d 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Code\Ex11 glcd\Debug\List\Ex11 glcd.asm(1231): warning: .cseg .db misalignment - padding zero byte
00017e 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00017f 0002      	.DW  0x02
000180 0004      	.DW  0x04
000181 028c      	.DW  __REG_VARS*2
                 
000182 0011      	.DW  0x11
000183 0561      	.DW  _keypad
000184 028e      	.DW  _0x3*2
                 
000185 0015      	.DW  0x15
000186 0500      	.DW  _0xF
000187 02a0      	.DW  _0x0*2
                 
000188 0002      	.DW  0x02
000189 0515      	.DW  _0xF+21
00018a 02b5      	.DW  _0x0*2+21
                 
00018b 0002      	.DW  0x02
00018c 0517      	.DW  _0xF+23
00018d 02b5      	.DW  _0x0*2+21
                 
00018e 000f      	.DW  0x0F
00018f 0519      	.DW  _0x26
000190 02b7      	.DW  _0x0*2+23
                 
000191 0009      	.DW  0x09
000192 0528      	.DW  _0x28
000193 02d6      	.DW  _0x0*2+54
                 
000194 0004      	.DW  0x04
000195 0531      	.DW  _0x33
000196 02df      	.DW  _0x0*2+63
                 
000197 000f      	.DW  0x0F
000198 0535      	.DW  _0x33+4
000199 02e3      	.DW  _0x0*2+67
                 
00019a 0001      	.DW  0x01
00019b 0779      	.DW  __seed_G109
00019c 02f2      	.DW  _0x2120060*2
                 
                 _0xFFFFFFFF:
00019d 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00019e 94f8      	CLI
00019f 27ee      	CLR  R30
0001a0 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001a1 e0f1      	LDI  R31,1
0001a2 bff5      	OUT  MCUCR,R31
0001a3 bfe5      	OUT  MCUCR,R30
0001a4 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
0001a6 e08d      	LDI  R24,(14-2)+1
0001a7 e0a2      	LDI  R26,2
0001a8 27bb      	CLR  R27
                 __CLEAR_REG:
0001a9 93ed      	ST   X+,R30
0001aa 958a      	DEC  R24
0001ab f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001ac e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001ad e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001ae e0a0      	LDI  R26,LOW(__SRAM_START)
0001af e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001b0 93ed      	ST   X+,R30
0001b1 9701      	SBIW R24,1
0001b2 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001b3 efee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001b4 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001b5 9185      	LPM  R24,Z+
0001b6 9195      	LPM  R25,Z+
0001b7 9700      	SBIW R24,0
0001b8 f061      	BREQ __GLOBAL_INI_END
0001b9 91a5      	LPM  R26,Z+
0001ba 91b5      	LPM  R27,Z+
0001bb 9005      	LPM  R0,Z+
0001bc 9015      	LPM  R1,Z+
0001bd 01bf      	MOVW R22,R30
0001be 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001bf 9005      	LPM  R0,Z+
0001c0 920d      	ST   X+,R0
0001c1 9701      	SBIW R24,1
0001c2 f7e1      	BRNE __GLOBAL_INI_LOOP
0001c3 01fb      	MOVW R30,R22
0001c4 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001c5 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001c6 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001c7 bfed      	OUT  SPL,R30
0001c8 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001c9 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001ca e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001cb e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001cc 940c 02f2 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * Ex11 glcd.c
                 ; *
                 ; * Created: 12/21/2024 10:24:45 PM
                 ; * Author: ADMIN
                 ; */
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <glcd.h>
                 ;#include <delay.h>
                 ;#include <stdint.h>
                 ;#include <stdio.h>
                 ;#include <font5x7.h>
                 ;#include <eeprom.h>
                 ;
                 ;int keypad[3][3] = {0, 1, 2, 3, 4, 5, 6, 7, 8}; // ma tran ban phim
                 
                 	.DSEG
                 ;char input_password[4]; // Luu mat khau nhap tu ban phim
                 ;char correct_password[4]; // Mat khau dung (luu EEPROM)
                 ;int remaining_attempts = 2; // So lan nhap sai con lai
                 ;volatile int lock_triggered = 0; // Bien xac dinh trang thai khoa
                 ;
                 ;// Timer0 ngat tran
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void) {
                 ; 0000 0016 interrupt [17] void timer0_ovf_isr(void) {
                 
                 	.CSEG
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
0001ce 920a      	ST   -Y,R0
0001cf 921a      	ST   -Y,R1
0001d0 939a      	ST   -Y,R25
0001d1 93aa      	ST   -Y,R26
0001d2 93ba      	ST   -Y,R27
0001d3 93ea      	ST   -Y,R30
0001d4 93fa      	ST   -Y,R31
0001d5 b7ef      	IN   R30,SREG
0001d6 93ea      	ST   -Y,R30
                 ; 0000 0017     static int dem = 0;
                 ; 0000 0018     TCNT0 = 0x06;
0001d7 e0e6      	LDI  R30,LOW(6)
0001d8 bfe2      	OUT  0x32,R30
                 ; 0000 0019 
                 ; 0000 001A     if (lock_triggered) {
0001d9 91e0 057b 	LDS  R30,_lock_triggered
0001db 91f0 057c 	LDS  R31,_lock_triggered+1
0001dd 9730      	SBIW R30,0
0001de f0b9      	BREQ _0x4
                 ; 0000 001B         dem += 1;
0001df 91e0 057d 	LDS  R30,_dem_S0000000000
0001e1 91f0 057e 	LDS  R31,_dem_S0000000000+1
0001e3 9631      	ADIW R30,1
0001e4 93e0 057d 	STS  _dem_S0000000000,R30
0001e6 93f0 057e 	STS  _dem_S0000000000+1,R31
                 ; 0000 001C          if (dem % 2000 == 1000){
0001e8 940e 0a31 	CALL SUBOPT_0x0
0001ea 3ee8      	CPI  R30,LOW(0x3E8)
0001eb e0a3      	LDI  R26,HIGH(0x3E8)
0001ec 07fa      	CPC  R31,R26
0001ed f411      	BRNE _0x5
                 ; 0000 001D             PORTD.4 = 1;
0001ee 9a94      	SBI  0x12,4
                 ; 0000 001E             PORTD.6 = 0;
0001ef 9896      	CBI  0x12,6
                 ; 0000 001F         }
                 ; 0000 0020         if(dem % 2000 == 0){
                 _0x5:
0001f0 940e 0a31 	CALL SUBOPT_0x0
0001f2 9730      	SBIW R30,0
0001f3 f411      	BRNE _0xA
                 ; 0000 0021             PORTD.4 = 0;
0001f4 9894      	CBI  0x12,4
                 ; 0000 0022             PORTD.6 = 1;
0001f5 9a96      	SBI  0x12,6
                 ; 0000 0023         }
                 ; 0000 0024     }
                 _0xA:
                 ; 0000 0025 }
                 _0x4:
0001f6 91e9      	LD   R30,Y+
0001f7 bfef      	OUT  SREG,R30
0001f8 91f9      	LD   R31,Y+
0001f9 91e9      	LD   R30,Y+
0001fa 91b9      	LD   R27,Y+
0001fb 91a9      	LD   R26,Y+
0001fc 9199      	LD   R25,Y+
0001fd 9019      	LD   R1,Y+
0001fe 9009      	LD   R0,Y+
0001ff 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;void BUTTON() {
                 ; 0000 0028 void BUTTON() {
                 _BUTTON:
                 ; .FSTART _BUTTON
                 ; 0000 0029     int i, j, index;
                 ; 0000 002A     char buffer[2];
                 ; 0000 002B 
                 ; 0000 002C     index = 0;
000200 9722      	SBIW R28,2
000201 940e 0b9d 	CALL __SAVELOCR6
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	index -> R20,R21
                 ;	buffer -> Y+6
                +
000203 e040     +LDI R20 , LOW ( 0 )
000204 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 ; 0000 002D     glcd_outtextxy(10, 20, "                    "); // Xoa mat khau cu
000205 e0ea      	LDI  R30,LOW(10)
000206 93ea      	ST   -Y,R30
000207 e1e4      	LDI  R30,LOW(20)
000208 93ea      	ST   -Y,R30
                +
000209 e0a0     +LDI R26 , LOW ( _0xF + ( 0 ) )
00020a e0b5     +LDI R27 , HIGH ( _0xF + ( 0 ) )
                 	__POINTW2MN _0xF,0
00020b 940e 079d 	CALL _glcd_outtextxy
                 ; 0000 002E     while (index < 3) { // Nhap 3 ki tu
                 _0x10:
                +
00020d 3043     +CPI R20 , LOW ( 3 )
00020e e0e0     +LDI R30 , HIGH ( 3 )
00020f 075e     +CPC R21 , R30
                 	__CPWRN 20,21,3
000210 f00c      	BRLT PC+2
000211 c067      	RJMP _0x12
                 ; 0000 002F         for (j = 0; j < 3; j++) {
                +
000212 e020     +LDI R18 , LOW ( 0 )
000213 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x14:
                +
000214 3023     +CPI R18 , LOW ( 3 )
000215 e0e0     +LDI R30 , HIGH ( 3 )
000216 073e     +CPC R19 , R30
                 	__CPWRN 18,19,3
000217 f00c      	BRLT PC+2
000218 c052      	RJMP _0x15
                 ; 0000 0030             if (j == 0) PORTF = 0b11111101;
000219 2e02      	MOV  R0,R18
00021a 2a03      	OR   R0,R19
00021b f419      	BRNE _0x16
00021c efed      	LDI  R30,LOW(253)
00021d 93e0 0062 	STS  98,R30
                 ; 0000 0031             if (j == 1) PORTF = 0b11110111;
                 _0x16:
00021f e0e1      	LDI  R30,LOW(1)
000220 e0f0      	LDI  R31,HIGH(1)
000221 17e2      	CP   R30,R18
000222 07f3      	CPC  R31,R19
000223 f419      	BRNE _0x17
000224 efe7      	LDI  R30,LOW(247)
000225 93e0 0062 	STS  98,R30
                 ; 0000 0032             if (j == 2) PORTF = 0b11011111;
                 _0x17:
000227 e0e2      	LDI  R30,LOW(2)
000228 e0f0      	LDI  R31,HIGH(2)
000229 17e2      	CP   R30,R18
00022a 07f3      	CPC  R31,R19
00022b f419      	BRNE _0x18
00022c edef      	LDI  R30,LOW(223)
00022d 93e0 0062 	STS  98,R30
                 ; 0000 0033             for (i = 0; i < 3; i++) {
                 _0x18:
                +
00022f e000     +LDI R16 , LOW ( 0 )
000230 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1A:
                +
000231 3003     +CPI R16 , LOW ( 3 )
000232 e0e0     +LDI R30 , HIGH ( 3 )
000233 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
000234 f59c      	BRGE _0x1B
                 ; 0000 0034                 if ((i == 0 && PINF.2 == 0) ||
                 ; 0000 0035                     (i == 1 && PINF.4 == 0) ||
                 ; 0000 0036                     (i == 2 && PINF.0 == 0)) {
000235 2400      	CLR  R0
000236 1600      	CP   R0,R16
000237 0601      	CPC  R0,R17
000238 f411      	BRNE _0x1D
000239 9b02      	SBIS 0x0,2
00023a c00f      	RJMP _0x1F
                 _0x1D:
00023b e0e1      	LDI  R30,LOW(1)
00023c e0f0      	LDI  R31,HIGH(1)
00023d 17e0      	CP   R30,R16
00023e 07f1      	CPC  R31,R17
00023f f411      	BRNE _0x20
000240 9b04      	SBIS 0x0,4
000241 c008      	RJMP _0x1F
                 _0x20:
000242 e0e2      	LDI  R30,LOW(2)
000243 e0f0      	LDI  R31,HIGH(2)
000244 17e0      	CP   R30,R16
000245 07f1      	CPC  R31,R17
000246 f411      	BRNE _0x22
000247 9b00      	SBIS 0x0,0
000248 c001      	RJMP _0x1F
                 _0x22:
000249 c01b      	RJMP _0x1C
                 _0x1F:
                 ; 0000 0037                     input_password[index] = keypad[i][j] + '0'; // Luu ki tu nhap vao
00024a 01fa      	MOVW R30,R20
00024b 58ed      	SUBI R30,LOW(-_input_password)
00024c 4ffa      	SBCI R31,HIGH(-_input_password)
00024d 01bf      	MOVW R22,R30
                +
00024e e0a6     +LDI R26 , 6
00024f 9fa0     +MUL R26 , R16
000250 01f0     +MOVW R30 , R0
000251 9fa1     +MUL R26 , R17
000252 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,6
000253 59ef      	SUBI R30,LOW(-_keypad)
000254 4ffa      	SBCI R31,HIGH(-_keypad)
000255 01df      	MOVW R26,R30
000256 01f9      	MOVW R30,R18
000257 0fee      	LSL  R30
000258 1fff      	ROL  R31
000259 0fae      	ADD  R26,R30
00025a 1fbf      	ADC  R27,R31
00025b 91ec      	LD   R30,X
00025c 5de0      	SUBI R30,-LOW(48)
00025d 01db      	MOVW R26,R22
00025e 940e 0a3a 	CALL SUBOPT_0x1
                 ; 0000 0038                     buffer[0] = input_password[index];
                 ; 0000 0039                     buffer[1] = '\0';
                 ; 0000 003A                     glcd_outtextxy(index * 10, 20, buffer);
                 ; 0000 003B                     delay_ms(300);
                 ; 0000 003C                     glcd_outtextxy(index * 10, 20, "*"); // Hien thi dau *
                +
000260 e1a5     +LDI R26 , LOW ( _0xF + ( 21 ) )
000261 e0b5     +LDI R27 , HIGH ( _0xF + ( 21 ) )
                 	__POINTW2MN _0xF,21
000262 940e 0a56 	CALL SUBOPT_0x2
                 ; 0000 003D                     delay_ms(500);
                 ; 0000 003E                     index++;
                 ; 0000 003F                     break;
000264 c003      	RJMP _0x1B
                 ; 0000 0040                 }
                 ; 0000 0041             }
                 _0x1C:
                +
000265 5f0f     +SUBI R16 , LOW ( - 1 )
000266 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000267 cfc9      	RJMP _0x1A
                 _0x1B:
                 ; 0000 0042         }
                +
000268 5f2f     +SUBI R18 , LOW ( - 1 )
000269 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00026a cfa9      	RJMP _0x14
                 _0x15:
                 ; 0000 0043         // Xu ly BT2 la so 9
                 ; 0000 0044         if (PINB.3 == 0) {
00026b 99b3      	SBIC 0x16,3
00026c c00b      	RJMP _0x25
                 ; 0000 0045             input_password[index] = '9';
00026d e7a3      	LDI  R26,LOW(_input_password)
00026e e0b5      	LDI  R27,HIGH(_input_password)
00026f 0fa4      	ADD  R26,R20
000270 1fb5      	ADC  R27,R21
000271 e3e9      	LDI  R30,LOW(57)
000272 940e 0a3a 	CALL SUBOPT_0x1
                 ; 0000 0046             buffer[0] = input_password[index];
                 ; 0000 0047             buffer[1] = '\0';
                 ; 0000 0048             glcd_outtextxy(index * 10, 20, buffer);
                 ; 0000 0049             delay_ms(300);
                 ; 0000 004A             glcd_outtextxy(index * 10, 20, "*");
                +
000274 e1a7     +LDI R26 , LOW ( _0xF + ( 23 ) )
000275 e0b5     +LDI R27 , HIGH ( _0xF + ( 23 ) )
                 	__POINTW2MN _0xF,23
000276 940e 0a56 	CALL SUBOPT_0x2
                 ; 0000 004B             delay_ms(500);
                 ; 0000 004C             index++;
                 ; 0000 004D         }
                 ; 0000 004E     }
                 _0x25:
000278 cf94      	RJMP _0x10
                 _0x12:
                 ; 0000 004F     input_password[3] = '\0'; // Ket thuc chuoi
000279 e0e0      	LDI  R30,LOW(0)
                +
00027a 93e0 0576+STS _input_password + ( 3 ) , R30
                 	__PUTB1MN _input_password,3
                 ; 0000 0050 }
00027c 940c 0799 	JMP  _0x2140006
                 ; .FEND
                 
                 	.DSEG
                 _0xF:
000500           	.BYTE 0x19
                 ;
                 ;void handle_correct_password() {
                 ; 0000 0052 void handle_correct_password() {
                 
                 	.CSEG
                 _handle_correct_password:
                 ; .FSTART _handle_correct_password
                 ; 0000 0053     glcd_clear();
00027e d1d9      	RCALL _glcd_clear
                 ; 0000 0054     glcd_outtextxy(0, 30, "Mat khau dung!");
00027f e0e0      	LDI  R30,LOW(0)
000280 93ea      	ST   -Y,R30
000281 e1ee      	LDI  R30,LOW(30)
000282 93ea      	ST   -Y,R30
                +
000283 e1a9     +LDI R26 , LOW ( _0x26 + ( 0 ) )
000284 e0b5     +LDI R27 , HIGH ( _0x26 + ( 0 ) )
                 	__POINTW2MN _0x26,0
000285 940e 0a5f 	CALL SUBOPT_0x3
                 ; 0000 0055     delay_ms(2000);
                 ; 0000 0056     remaining_attempts = 2; // Reset lai so lan nhap sai
000287 e0e2      	LDI  R30,LOW(2)
000288 e0f0      	LDI  R31,HIGH(2)
000289 012f      	MOVW R4,R30
                 ; 0000 0057 }
00028a 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x26:
000519           	.BYTE 0xF
                 ;
                 ;void handle_wrong_password() {
                 ; 0000 0059 void handle_wrong_password() {
                 
                 	.CSEG
                 _handle_wrong_password:
                 ; .FSTART _handle_wrong_password
                 ; 0000 005A     char buffer[20];
                 ; 0000 005B 
                 ; 0000 005C     glcd_clear();
00028b 9764      	SBIW R28,20
                 ;	buffer -> Y+0
00028c d1cb      	RCALL _glcd_clear
                 ; 0000 005D     remaining_attempts--;
00028d 01f2      	MOVW R30,R4
00028e 9731      	SBIW R30,1
00028f 012f      	MOVW R4,R30
                 ; 0000 005E     sprintf(buffer, "Sai! Con %d lan", remaining_attempts);
000290 01fe      	MOVW R30,R28
000291 93fa      	ST   -Y,R31
000292 93ea      	ST   -Y,R30
                +
000293 ece6     +LDI R30 , LOW ( 2 * _0x0 + ( 38 ) )
000294 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 38 ) )
                 	__POINTW1FN _0x0,38
000295 93fa      	ST   -Y,R31
000296 93ea      	ST   -Y,R30
000297 01f2      	MOVW R30,R4
000298 940e 0b41 	CALL __CWD1
00029a 940e 0b77 	CALL __PUTPARD1
00029c e084      	LDI  R24,4
00029d 940e 0932 	CALL _sprintf
00029f 9628      	ADIW R28,8
                 ; 0000 005F     glcd_outtextxy(0, 30, buffer);
0002a0 e0e0      	LDI  R30,LOW(0)
0002a1 93ea      	ST   -Y,R30
0002a2 e1ee      	LDI  R30,LOW(30)
0002a3 93ea      	ST   -Y,R30
0002a4 01de      	MOVW R26,R28
0002a5 9612      	ADIW R26,2
0002a6 940e 0a5f 	CALL SUBOPT_0x3
                 ; 0000 0060     delay_ms(2000);
                 ; 0000 0061 
                 ; 0000 0062     if (remaining_attempts <= 0) {
0002a8 2400      	CLR  R0
0002a9 1404      	CP   R0,R4
0002aa 0405      	CPC  R0,R5
0002ab f0fc      	BRLT _0x27
                 ; 0000 0063         glcd_clear();
0002ac d1ab      	RCALL _glcd_clear
                 ; 0000 0064         glcd_outtextxy(10, 30, "Bi khoa!");
0002ad e0ea      	LDI  R30,LOW(10)
0002ae 93ea      	ST   -Y,R30
0002af e1ee      	LDI  R30,LOW(30)
0002b0 93ea      	ST   -Y,R30
                +
0002b1 e2a8     +LDI R26 , LOW ( _0x28 + ( 0 ) )
0002b2 e0b5     +LDI R27 , HIGH ( _0x28 + ( 0 ) )
                 	__POINTW2MN _0x28,0
0002b3 940e 079d 	CALL _glcd_outtextxy
                 ; 0000 0065         PORTC.3 = 1; // Bat RELAY1
0002b5 9aab      	SBI  0x15,3
                 ; 0000 0066         lock_triggered = 1; // Kich hoat che do khoa
0002b6 e0e1      	LDI  R30,LOW(1)
0002b7 e0f0      	LDI  R31,HIGH(1)
0002b8 93e0 057b 	STS  _lock_triggered,R30
0002ba 93f0 057c 	STS  _lock_triggered+1,R31
                 ; 0000 0067         ASSR = 0 << AS0;
0002bc e0e0      	LDI  R30,LOW(0)
0002bd bfe0      	OUT  0x30,R30
                 ; 0000 0068         TCCR0 = 0x03;
0002be e0e3      	LDI  R30,LOW(3)
0002bf bfe3      	OUT  0x33,R30
                 ; 0000 0069         TCNT0 = 0x06;
0002c0 e0e6      	LDI  R30,LOW(6)
0002c1 bfe2      	OUT  0x32,R30
                 ; 0000 006A         OCR0 = 0x00; // Thuong giu nguyen o cac bai
0002c2 e0e0      	LDI  R30,LOW(0)
0002c3 bfe1      	OUT  0x31,R30
                 ; 0000 006B         TIMSK =0x01; // Thuong giu nguyen o cac bai
0002c4 e0e1      	LDI  R30,LOW(1)
0002c5 bfe7      	OUT  0x37,R30
                 ; 0000 006C         ETIMSK = 0x00; // Thuong giu nguyen o cac bai
0002c6 e0e0      	LDI  R30,LOW(0)
0002c7 93e0 007d 	STS  125,R30
                 ; 0000 006D         #asm("sei")
0002c9 9478      	sei
                 ; 0000 006E 
                 ; 0000 006F         while (1) {
                 _0x2B:
                 ; 0000 0070             // LED nhap nhay duoc dieu khien boi timer0
                 ; 0000 0071         }
0002ca cfff      	RJMP _0x2B
                 ; 0000 0072     }
                 ; 0000 0073 }
                 _0x27:
0002cb 9664      	ADIW R28,20
0002cc 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x28:
000528           	.BYTE 0x9
                 ;
                 ;int my_strcmp(const char *str1, const char *str2) {
                 ; 0000 0075 int my_strcmp(const char *str1, const char *str2) {
                 
                 	.CSEG
                 _my_strcmp:
                 ; .FSTART _my_strcmp
                 ; 0000 0076     while (*str1 && (*str1 == *str2)) {
0002cd 93ba      	ST   -Y,R27
0002ce 93aa      	ST   -Y,R26
                 ;	*str1 -> Y+2
                 ;	*str2 -> Y+0
                 _0x2E:
0002cf 81aa      	LDD  R26,Y+2
0002d0 81bb      	LDD  R27,Y+2+1
0002d1 91ec      	LD   R30,X
0002d2 30e0      	CPI  R30,0
0002d3 f031      	BREQ _0x31
0002d4 900c      	LD   R0,X
0002d5 81a8      	LD   R26,Y
0002d6 81b9      	LDD  R27,Y+1
0002d7 91ec      	LD   R30,X
0002d8 15e0      	CP   R30,R0
0002d9 f009      	BREQ _0x32
                 _0x31:
0002da c00b      	RJMP _0x30
                 _0x32:
                 ; 0000 0077         str1++;
0002db 81ea      	LDD  R30,Y+2
0002dc 81fb      	LDD  R31,Y+2+1
0002dd 9631      	ADIW R30,1
0002de 83ea      	STD  Y+2,R30
0002df 83fb      	STD  Y+2+1,R31
                 ; 0000 0078         str2++;
0002e0 81e8      	LD   R30,Y
0002e1 81f9      	LDD  R31,Y+1
0002e2 9631      	ADIW R30,1
0002e3 83e8      	ST   Y,R30
0002e4 83f9      	STD  Y+1,R31
                 ; 0000 0079     }
0002e5 cfe9      	RJMP _0x2E
                 _0x30:
                 ; 0000 007A     return *(unsigned char *)str1 - *(unsigned char *)str2;
0002e6 81aa      	LDD  R26,Y+2
0002e7 81bb      	LDD  R27,Y+2+1
0002e8 900c      	LD   R0,X
0002e9 2411      	CLR  R1
0002ea 81a8      	LD   R26,Y
0002eb 81b9      	LDD  R27,Y+1
0002ec 91ac      	LD   R26,X
0002ed 27bb      	CLR  R27
0002ee 01f0      	MOVW R30,R0
0002ef 1bea      	SUB  R30,R26
0002f0 0bfb      	SBC  R31,R27
0002f1 c182      	RJMP _0x214000A
                 ; 0000 007B }
                 ; .FEND
                 ;
                 ;void main() {
                 ; 0000 007D void main() {
                 _main:
                 ; .FSTART _main
                 ; 0000 007E     const char *password_to_write = "108";
                 ; 0000 007F 
                 ; 0000 0080     GLCDINIT_t glcd_init_data;
                 ; 0000 0081 
                 ; 0000 0082     glcd_init_data.font = font5x7;
0002f2 9728      	SBIW R28,8
                 ;	*password_to_write -> R16,R17
                 ;	glcd_init_data -> Y+0
                +
0002f3 e301     +LDI R16 , LOW ( _0x33 + ( 0 ) )
0002f4 e015     +LDI R17 , HIGH ( _0x33 + ( 0 ) )
                 	__POINTWRMN 16,17,_0x33,0
0002f5 e8ec      	LDI  R30,LOW(_font5x7*2)
0002f6 e0f0      	LDI  R31,HIGH(_font5x7*2)
0002f7 83e8      	ST   Y,R30
0002f8 83f9      	STD  Y+1,R31
                 ; 0000 0083     glcd_init_data.temp_coef = 140;
0002f9 81ee      	LDD  R30,Y+6
0002fa 7fec      	ANDI R30,LOW(0xFC)
0002fb 83ee      	STD  Y+6,R30
                 ; 0000 0084     glcd_init_data.bias = 4;
0002fc 7ee3      	ANDI R30,LOW(0xE3)
0002fd 61e0      	ORI  R30,0x10
0002fe 83ee      	STD  Y+6,R30
                 ; 0000 0085     glcd_init_data.vlcd = 66;
0002ff 81ef      	LDD  R30,Y+7
000300 78e0      	ANDI R30,LOW(0x80)
000301 64e2      	ORI  R30,LOW(0x42)
000302 83ef      	STD  Y+7,R30
                 ; 0000 0086     glcd_init(&glcd_init_data);
000303 01de      	MOVW R26,R28
000304 d0ae      	RCALL _glcd_init
                 ; 0000 0087 
                 ; 0000 0088     DDRF = 0b11101010; // Cai dat huong nhap xuat cho ban phim ma tran
000305 eeea      	LDI  R30,LOW(234)
000306 93e0 0061 	STS  97,R30
                 ; 0000 0089     PORTF = 0b00010101; // Keo len muc cao cho cac hang
000308 e1e5      	LDI  R30,LOW(21)
000309 93e0 0062 	STS  98,R30
                 ; 0000 008A     DDRB.3 = 0;; // BT2 la dau vao (PB3)
00030b 98bb      	CBI  0x17,3
                 ; 0000 008B     PORTB.3 = 1; // Keo len muc cao cho PB3
00030c 9ac3      	SBI  0x18,3
                 ; 0000 008C     DDRC.3 = 1; // RELAY1 PC3 la dau ra
00030d 9aa3      	SBI  0x14,3
                 ; 0000 008D     DDRD.4 = 1; // LED do (PD4), LED xanh nuoc bien (PD6)
00030e 9a8c      	SBI  0x11,4
                 ; 0000 008E     DDRD.6 = 1;
00030f 9a8e      	SBI  0x11,6
                 ; 0000 008F 
                 ; 0000 0090     // Khoi tao EEPROM mat khau dung
                 ; 0000 0091     eeprom_write_block(password_to_write, (void *)0, 4);
000310 931a      	ST   -Y,R17
000311 930a      	ST   -Y,R16
000312 940e 0a65 	CALL SUBOPT_0x4
000314 940e 097d 	CALL _eeprom_write_block
                 ; 0000 0092     eeprom_read_block((void *)correct_password, (const void *)0, sizeof(correct_password));
000316 e7e7      	LDI  R30,LOW(_correct_password)
000317 e0f5      	LDI  R31,HIGH(_correct_password)
000318 93fa      	ST   -Y,R31
000319 93ea      	ST   -Y,R30
00031a 940e 0a65 	CALL SUBOPT_0x4
00031c 940e 0966 	CALL _eeprom_read_block
                 ; 0000 0093 
                 ; 0000 0094     // Khoi tao timer0
                 ; 0000 0095     TCCR0 = (1 << CS02) | (1 << CS00); // Prescaler = 1024
00031e e0e5      	LDI  R30,LOW(5)
00031f bfe3      	OUT  0x33,R30
                 ; 0000 0096     TCNT0 = 6; // Gia tri khoi tao cho chu ky 1 giay
000320 e0e6      	LDI  R30,LOW(6)
000321 bfe2      	OUT  0x32,R30
                 ; 0000 0097 
                 ; 0000 0098     while (1) {
                 _0x3E:
                 ; 0000 0099         glcd_clear(); // Xoa man hinh hoan toan truoc khi hien thi lai
000322 d135      	RCALL _glcd_clear
                 ; 0000 009A         glcd_outtextxy(0, 10, "Nhap mat khau:");
000323 e0e0      	LDI  R30,LOW(0)
000324 93ea      	ST   -Y,R30
000325 e0ea      	LDI  R30,LOW(10)
000326 93ea      	ST   -Y,R30
                +
000327 e3a5     +LDI R26 , LOW ( _0x33 + ( 4 ) )
000328 e0b5     +LDI R27 , HIGH ( _0x33 + ( 4 ) )
                 	__POINTW2MN _0x33,4
000329 940e 079d 	CALL _glcd_outtextxy
                 ; 0000 009B         BUTTON(); // Nhan mat khau
00032b ded4      	RCALL _BUTTON
                 ; 0000 009C         if (my_strcmp(input_password, correct_password) == 0) {
00032c e7e3      	LDI  R30,LOW(_input_password)
00032d e0f5      	LDI  R31,HIGH(_input_password)
00032e 93fa      	ST   -Y,R31
00032f 93ea      	ST   -Y,R30
000330 e7a7      	LDI  R26,LOW(_correct_password)
000331 e0b5      	LDI  R27,HIGH(_correct_password)
000332 df9a      	RCALL _my_strcmp
000333 9730      	SBIW R30,0
000334 f411      	BRNE _0x41
                 ; 0000 009D             handle_correct_password();
000335 df48      	RCALL _handle_correct_password
                 ; 0000 009E         } else {
000336 c001      	RJMP _0x42
                 _0x41:
                 ; 0000 009F             handle_wrong_password();
000337 df53      	RCALL _handle_wrong_password
                 ; 0000 00A0         }
                 _0x42:
                 ; 0000 00A1     }
000338 cfe9      	RJMP _0x3E
                 ; 0000 00A2 }
                 _0x43:
000339 cfff      	RJMP _0x43
                 ; .FEND
                 
                 	.DSEG
                 _0x33:
000531           	.BYTE 0x13
                 ;
                 ;
                 ;
                 ;
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
00033a 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
00033b 93aa      	ST   -Y,R26
00033c 931a      	ST   -Y,R17
00033d 91e0 0065 	LDS  R30,101
00033f 7eef      	ANDI R30,0xEF
000340 93e0 0065 	STS  101,R30
000342 e018      	LDI  R17,LOW(8)
                 _0x2000004:
000343 dff6      	RCALL _pcd8544_delay_G100
000344 81e9      	LDD  R30,Y+1
000345 78e0      	ANDI R30,LOW(0x80)
000346 f021      	BREQ _0x2000006
000347 91e0 0065 	LDS  R30,101
000349 60e2      	ORI  R30,2
00034a c003      	RJMP _0x20000A0
                 _0x2000006:
00034b 91e0 0065 	LDS  R30,101
00034d 7fed      	ANDI R30,0xFD
                 _0x20000A0:
00034e 93e0 0065 	STS  101,R30
000350 81e9      	LDD  R30,Y+1
000351 0fee      	LSL  R30
000352 83e9      	STD  Y+1,R30
000353 dfe6      	RCALL _pcd8544_delay_G100
000354 91e0 0065 	LDS  R30,101
000356 60e4      	ORI  R30,4
000357 93e0 0065 	STS  101,R30
000359 dfe0      	RCALL _pcd8544_delay_G100
00035a 91e0 0065 	LDS  R30,101
00035c 7feb      	ANDI R30,0xFB
00035d 93e0 0065 	STS  101,R30
00035f 5011      	SUBI R17,LOW(1)
000360 f711      	BRNE _0x2000004
000361 91e0 0065 	LDS  R30,101
000363 61e0      	ORI  R30,0x10
000364 93e0 0065 	STS  101,R30
000366 8118      	LDD  R17,Y+0
000367 c042      	RJMP _0x214000C
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000368 93aa      	ST   -Y,R26
000369 91e0 0065 	LDS  R30,101
00036b 7fee      	ANDI R30,0xFE
00036c 93e0 0065 	STS  101,R30
00036e 81a8      	LD   R26,Y
00036f dfcb      	RCALL _pcd8544_wrbus_G100
000370 c0e5      	RJMP _0x214000B
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
000371 93aa      	ST   -Y,R26
000372 91e0 0065 	LDS  R30,101
000374 60e1      	ORI  R30,1
000375 93e0 0065 	STS  101,R30
000377 81a8      	LD   R26,Y
000378 dfc2      	RCALL _pcd8544_wrbus_G100
000379 c0dc      	RJMP _0x214000B
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
00037a 93aa      	ST   -Y,R26
00037b 931a      	ST   -Y,R17
00037c 81e9      	LDD  R30,Y+1
00037d 95e6      	LSR  R30
00037e 95e6      	LSR  R30
00037f 95e6      	LSR  R30
000380 2f1e      	MOV  R17,R30
000381 e5e4      	LDI  R30,LOW(84)
000382 9fe1      	MUL  R30,R17
000383 01f0      	MOVW R30,R0
000384 01df      	MOVW R26,R30
000385 81ea      	LDD  R30,Y+2
000386 e0f0      	LDI  R31,0
000387 0fea      	ADD  R30,R26
000388 1ffb      	ADC  R31,R27
000389 93e0 057f 	STS  _gfx_addr_G100,R30
00038b 93f0 0580 	STS  _gfx_addr_G100+1,R31
00038d 2fe1      	MOV  R30,R17
00038e 8118      	LDD  R17,Y+0
00038f 9623      	ADIW R28,3
000390 9508      	RET
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000391 93aa      	ST   -Y,R26
000392 81e9      	LDD  R30,Y+1
000393 68e0      	ORI  R30,0x80
000394 2fae      	MOV  R26,R30
000395 dfd2      	RCALL _pcd8544_wrcmd
000396 81e9      	LDD  R30,Y+1
000397 93ea      	ST   -Y,R30
000398 81a9      	LDD  R26,Y+1
000399 dfe0      	RCALL _pcd8544_setaddr_G100
00039a 64e0      	ORI  R30,0x40
00039b 2fae      	MOV  R26,R30
00039c dfcb      	RCALL _pcd8544_wrcmd
00039d c00c      	RJMP _0x214000C
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
00039e 93aa      	ST   -Y,R26
00039f 81e9      	LDD  R30,Y+1
0003a0 93ea      	ST   -Y,R30
0003a1 81a9      	LDD  R26,Y+1
0003a2 dfee      	RCALL _pcd8544_gotoxy
0003a3 91e0 057f 	LDS  R30,_gfx_addr_G100
0003a5 91f0 0580 	LDS  R31,_gfx_addr_G100+1
0003a7 57ef      	SUBI R30,LOW(-_gfx_buffer_G100)
0003a8 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
0003a9 81e0      	LD   R30,Z
                 _0x214000C:
0003aa 9622      	ADIW R28,2
0003ab 9508      	RET
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
0003ac 93aa      	ST   -Y,R26
0003ad 940e 0a6c 	CALL SUBOPT_0x5
0003af 81a8      	LD   R26,Y
0003b0 83a0      	STD  Z+0,R26
0003b1 dfbf      	RCALL _pcd8544_wrdata_G100
0003b2 c0a3      	RJMP _0x214000B
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
0003b3 940e 0a77 	CALL SUBOPT_0x6
0003b5 91e0 0064 	LDS  R30,100
0003b7 61e0      	ORI  R30,0x10
0003b8 940e 0a7c 	CALL SUBOPT_0x7
0003ba 61e0      	ORI  R30,0x10
0003bb 93e0 0065 	STS  101,R30
0003bd 91e0 0064 	LDS  R30,100
0003bf 60e4      	ORI  R30,4
0003c0 940e 0a7c 	CALL SUBOPT_0x7
0003c2 7feb      	ANDI R30,0xFB
0003c3 93e0 0065 	STS  101,R30
0003c5 91e0 0064 	LDS  R30,100
0003c7 60e2      	ORI  R30,2
0003c8 93e0 0064 	STS  100,R30
0003ca 91e0 0064 	LDS  R30,100
0003cc 60e1      	ORI  R30,1
0003cd 93e0 0064 	STS  100,R30
0003cf 91e0 0064 	LDS  R30,100
0003d1 60e8      	ORI  R30,8
0003d2 940e 0a7c 	CALL SUBOPT_0x7
0003d4 7fe7      	ANDI R30,0XF7
0003d5 93e0 0065 	STS  101,R30
0003d7 e0aa      	LDI  R26,LOW(10)
0003d8 e0b0      	LDI  R27,0
0003d9 940e 0b1f 	CALL _delay_ms
0003db 91e0 0065 	LDS  R30,101
0003dd 60e8      	ORI  R30,8
0003de 93e0 0065 	STS  101,R30
0003e0 81ec      	LDD  R30,Y+4
0003e1 81fd      	LDD  R31,Y+4+1
0003e2 9730      	SBIW R30,0
0003e3 f121      	BREQ _0x2000008
0003e4 81e6      	LDD  R30,Z+6
0003e5 70e3      	ANDI R30,LOW(0x3)
0003e6 2f1e      	MOV  R17,R30
0003e7 81ec      	LDD  R30,Y+4
0003e8 81fd      	LDD  R31,Y+4+1
0003e9 81e6      	LDD  R30,Z+6
0003ea 95e6      	LSR  R30
0003eb 95e6      	LSR  R30
0003ec 70e7      	ANDI R30,LOW(0x7)
0003ed 2f0e      	MOV  R16,R30
0003ee 81ec      	LDD  R30,Y+4
0003ef 81fd      	LDD  R31,Y+4+1
0003f0 81e7      	LDD  R30,Z+7
0003f1 77ef      	ANDI R30,0x7F
0003f2 2f3e      	MOV  R19,R30
0003f3 81ac      	LDD  R26,Y+4
0003f4 81bd      	LDD  R27,Y+4+1
0003f5 940e 0b6f 	CALL __GETW1P
                +
0003f7 93e0 0548+STS _glcd_state + ( 4 ) , R30
0003f9 93f0 0549+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0003fb 9612      	ADIW R26,2
0003fc 940e 0b6f 	CALL __GETW1P
                +
0003fe 93e0 055d+STS _glcd_state + ( 25 ) , R30
000400 93f0 055e+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000402 81ac      	LDD  R26,Y+4
000403 81bd      	LDD  R27,Y+4+1
000404 9614      	ADIW R26,4
000405 940e 0b6f 	CALL __GETW1P
000407 c00d      	RJMP _0x20000A1
                 _0x2000008:
000408 e010      	LDI  R17,LOW(0)
000409 e003      	LDI  R16,LOW(3)
00040a e332      	LDI  R19,LOW(50)
00040b e0e0      	LDI  R30,LOW(0)
00040c e0f0      	LDI  R31,HIGH(0)
                +
00040d 93e0 0548+STS _glcd_state + ( 4 ) , R30
00040f 93f0 0549+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
000411 93e0 055d+STS _glcd_state + ( 25 ) , R30
000413 93f0 055e+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A1:
                +
000415 93e0 055f+STS _glcd_state + ( 27 ) , R30
000417 93f0 0560+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000419 e2a1      	LDI  R26,LOW(33)
00041a df4d      	RCALL _pcd8544_wrcmd
00041b 2fe1      	MOV  R30,R17
00041c 60e4      	ORI  R30,4
00041d 2fae      	MOV  R26,R30
00041e df49      	RCALL _pcd8544_wrcmd
00041f 2fe0      	MOV  R30,R16
000420 61e0      	ORI  R30,0x10
000421 2fae      	MOV  R26,R30
000422 df45      	RCALL _pcd8544_wrcmd
000423 2fe3      	MOV  R30,R19
000424 68e0      	ORI  R30,0x80
000425 2fae      	MOV  R26,R30
000426 df41      	RCALL _pcd8544_wrcmd
000427 e2a0      	LDI  R26,LOW(32)
000428 df3f      	RCALL _pcd8544_wrcmd
000429 e0a1      	LDI  R26,LOW(1)
00042a d022      	RCALL _glcd_display
00042b e0e1      	LDI  R30,LOW(1)
00042c 93e0 0544 	STS  _glcd_state,R30
00042e e0e0      	LDI  R30,LOW(0)
                +
00042f 93e0 0545+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
000431 e0e1      	LDI  R30,LOW(1)
                +
000432 93e0 054a+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
000434 93e0 054b+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
000436 93e0 054c+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
000438 efef      	LDI  R30,LOW(255)
                +
000439 93e0 054d+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
00043b e0e1      	LDI  R30,LOW(1)
                +
00043c 93e0 0554+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
00043e e5e5     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
00043f e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
000440 93fa      	ST   -Y,R31
000441 93ea      	ST   -Y,R30
000442 efef      	LDI  R30,LOW(255)
000443 93ea      	ST   -Y,R30
000444 e0a8      	LDI  R26,LOW(8)
000445 e0b0      	LDI  R27,0
000446 940e 0997 	CALL _memset
000448 d00f      	RCALL _glcd_clear
000449 e0e1      	LDI  R30,LOW(1)
00044a 940e 0ba6 	CALL __LOADLOCR4
00044c c060      	RJMP _0x2140009
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
00044d 93aa      	ST   -Y,R26
00044e 81e8      	LD   R30,Y
00044f 30e0      	CPI  R30,0
000450 f011      	BREQ _0x200000A
000451 e0ec      	LDI  R30,LOW(12)
000452 c001      	RJMP _0x200000B
                 _0x200000A:
000453 e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
000454 2fae      	MOV  R26,R30
000455 df12      	RCALL _pcd8544_wrcmd
                 _0x214000B:
000456 9621      	ADIW R28,1
000457 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000458 940e 0b9f 	CALL __SAVELOCR4
00045a e030      	LDI  R19,0
                +
00045b 91e0 0545+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
00045d 30e0      	CPI  R30,0
00045e f009      	BREQ _0x200000D
00045f ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
000460 e0e0      	LDI  R30,LOW(0)
000461 93ea      	ST   -Y,R30
000462 e0a0      	LDI  R26,LOW(0)
000463 df2d      	RCALL _pcd8544_gotoxy
                +
000464 ef08     +LDI R16 , LOW ( 504 )
000465 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
000466 01f8      	MOVW R30,R16
                +
000467 5001     +SUBI R16 , LOW ( 1 )
000468 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000469 9730      	SBIW R30,0
00046a f019      	BREQ _0x2000010
00046b 2fa3      	MOV  R26,R19
00046c df3f      	RCALL _pcd8544_wrbyte
00046d cff8      	RJMP _0x200000E
                 _0x2000010:
00046e e0e0      	LDI  R30,LOW(0)
00046f 93ea      	ST   -Y,R30
000470 e0a0      	LDI  R26,LOW(0)
000471 d340      	RCALL _glcd_moveto
000472 940e 0ba6 	CALL __LOADLOCR4
                 _0x214000A:
000474 9624      	ADIW R28,4
000475 9508      	RET
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
000476 93aa      	ST   -Y,R26
000477 931a      	ST   -Y,R17
000478 81ed      	LDD  R30,Y+5
000479 93ea      	ST   -Y,R30
00047a 81ad      	LDD  R26,Y+5
00047b df22      	RCALL _pcd8544_rdbyte
00047c 2f1e      	MOV  R17,R30
00047d 81e9      	LDD  R30,Y+1
00047e 30e7      	CPI  R30,LOW(0x7)
00047f f011      	BREQ _0x2000020
000480 30e8      	CPI  R30,LOW(0x8)
000481 f439      	BRNE _0x2000021
                 _0x2000020:
000482 81eb      	LDD  R30,Y+3
000483 93ea      	ST   -Y,R30
000484 81aa      	LDD  R26,Y+2
000485 940e 09cb 	CALL _glcd_mappixcolor1bit
000487 83eb      	STD  Y+3,R30
000488 c008      	RJMP _0x2000022
                 _0x2000021:
000489 30e3      	CPI  R30,LOW(0x3)
00048a f421      	BRNE _0x2000024
00048b 81eb      	LDD  R30,Y+3
00048c 95e0      	COM  R30
00048d 83eb      	STD  Y+3,R30
00048e c002      	RJMP _0x2000025
                 _0x2000024:
00048f 30e0      	CPI  R30,0
000490 f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
000491 81ea      	LDD  R30,Y+2
000492 95e0      	COM  R30
000493 231e      	AND  R17,R30
000494 c002      	RJMP _0x2000027
                 _0x2000026:
000495 30e2      	CPI  R30,LOW(0x2)
000496 f429      	BRNE _0x2000028
                 _0x2000027:
000497 81ea      	LDD  R30,Y+2
000498 81ab      	LDD  R26,Y+3
000499 23ea      	AND  R30,R26
00049a 2b1e      	OR   R17,R30
00049b c00e      	RJMP _0x200001E
                 _0x2000028:
00049c 30e1      	CPI  R30,LOW(0x1)
00049d f429      	BRNE _0x2000029
00049e 81ea      	LDD  R30,Y+2
00049f 81ab      	LDD  R26,Y+3
0004a0 23ea      	AND  R30,R26
0004a1 271e      	EOR  R17,R30
0004a2 c007      	RJMP _0x200001E
                 _0x2000029:
0004a3 30e4      	CPI  R30,LOW(0x4)
0004a4 f429      	BRNE _0x200001E
0004a5 81ea      	LDD  R30,Y+2
0004a6 95e0      	COM  R30
0004a7 81ab      	LDD  R26,Y+3
0004a8 2bea      	OR   R30,R26
0004a9 231e      	AND  R17,R30
                 _0x200001E:
0004aa 2fa1      	MOV  R26,R17
0004ab df00      	RCALL _pcd8544_wrbyte
0004ac 8118      	LDD  R17,Y+0
                 _0x2140009:
0004ad 9626      	ADIW R28,6
0004ae 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
0004af 93aa      	ST   -Y,R26
0004b0 9723      	SBIW R28,3
0004b1 940e 0b9d 	CALL __SAVELOCR6
0004b3 89a8      	LDD  R26,Y+16
0004b4 35a4      	CPI  R26,LOW(0x54)
0004b5 f448      	BRSH _0x200002C
0004b6 85af      	LDD  R26,Y+15
0004b7 33a0      	CPI  R26,LOW(0x30)
0004b8 f430      	BRSH _0x200002C
0004b9 85ae      	LDD  R26,Y+14
0004ba 30a0      	CPI  R26,LOW(0x0)
0004bb f019      	BREQ _0x200002C
0004bc 85ad      	LDD  R26,Y+13
0004bd 30a0      	CPI  R26,LOW(0x0)
0004be f409      	BRNE _0x200002B
                 _0x200002C:
0004bf c1cc      	RJMP _0x2140008
                 _0x200002B:
0004c0 85ee      	LDD  R30,Y+14
0004c1 87e8      	STD  Y+8,R30
0004c2 89a8      	LDD  R26,Y+16
0004c3 27bb      	CLR  R27
0004c4 85ee      	LDD  R30,Y+14
0004c5 e0f0      	LDI  R31,0
0004c6 0fae      	ADD  R26,R30
0004c7 1fbf      	ADC  R27,R31
0004c8 35a5      	CPI  R26,LOW(0x55)
0004c9 e0e0      	LDI  R30,HIGH(0x55)
0004ca 07be      	CPC  R27,R30
0004cb f020      	BRLO _0x200002E
0004cc 89a8      	LDD  R26,Y+16
0004cd e5e4      	LDI  R30,LOW(84)
0004ce 1bea      	SUB  R30,R26
0004cf 87ee      	STD  Y+14,R30
                 _0x200002E:
0004d0 852d      	LDD  R18,Y+13
0004d1 85af      	LDD  R26,Y+15
0004d2 27bb      	CLR  R27
0004d3 85ed      	LDD  R30,Y+13
0004d4 e0f0      	LDI  R31,0
0004d5 0fae      	ADD  R26,R30
0004d6 1fbf      	ADC  R27,R31
0004d7 97d1      	SBIW R26,49
0004d8 f020      	BRLO _0x200002F
0004d9 85af      	LDD  R26,Y+15
0004da e3e0      	LDI  R30,LOW(48)
0004db 1bea      	SUB  R30,R26
0004dc 87ed      	STD  Y+13,R30
                 _0x200002F:
0004dd 85a9      	LDD  R26,Y+9
0004de 30a6      	CPI  R26,LOW(0x6)
0004df f009      	BREQ PC+2
0004e0 c05b      	RJMP _0x2000030
0004e1 85ec      	LDD  R30,Y+12
0004e2 30e1      	CPI  R30,LOW(0x1)
0004e3 f409      	BRNE _0x2000034
0004e4 c1a7      	RJMP _0x2140008
                 _0x2000034:
0004e5 30e3      	CPI  R30,LOW(0x3)
0004e6 f439      	BRNE _0x2000037
                +
0004e7 91e0 055f+LDS R30 , _glcd_state + ( 27 )
0004e9 91f0 0560+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0004eb 9730      	SBIW R30,0
0004ec f409      	BRNE _0x2000036
0004ed c19e      	RJMP _0x2140008
                 _0x2000036:
                 _0x2000037:
0004ee 8508      	LDD  R16,Y+8
0004ef 85ed      	LDD  R30,Y+13
0004f0 95e6      	LSR  R30
0004f1 95e6      	LSR  R30
0004f2 95e6      	LSR  R30
0004f3 2f3e      	MOV  R19,R30
0004f4 2fe2      	MOV  R30,R18
0004f5 70e7      	ANDI R30,LOW(0x7)
0004f6 f419      	BRNE _0x2000039
0004f7 85ad      	LDD  R26,Y+13
0004f8 172a      	CP   R18,R26
0004f9 f0e9      	BREQ _0x2000038
                 _0x2000039:
0004fa 2fa0      	MOV  R26,R16
0004fb 27bb      	CLR  R27
0004fc 2fe3      	MOV  R30,R19
0004fd e0f0      	LDI  R31,0
0004fe 940e 0b46 	CALL __MULW12U
000500 85aa      	LDD  R26,Y+10
000501 85bb      	LDD  R27,Y+10+1
000502 940e 0a81 	CALL SUBOPT_0x8
000504 9526      	LSR  R18
000505 9526      	LSR  R18
000506 9526      	LSR  R18
000507 2f53      	MOV  R21,R19
                 _0x200003B:
000508 935f      	PUSH R21
000509 5f5f      	SUBI R21,-1
00050a 2fe2      	MOV  R30,R18
00050b 91af      	POP  R26
00050c 17ea      	CP   R30,R26
00050d f048      	BRLO _0x200003D
00050e 2f10      	MOV  R17,R16
                 _0x200003E:
00050f 2fe1      	MOV  R30,R17
000510 5011      	SUBI R17,1
000511 30e0      	CPI  R30,0
000512 f019      	BREQ _0x2000040
000513 940e 0a86 	CALL SUBOPT_0x9
000515 cff9      	RJMP _0x200003E
                 _0x2000040:
000516 cff1      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
000517 85ae      	LDD  R26,Y+14
000518 170a      	CP   R16,R26
000519 f111      	BREQ _0x2000041
00051a 85ee      	LDD  R30,Y+14
00051b 85aa      	LDD  R26,Y+10
00051c 85bb      	LDD  R27,Y+10+1
00051d e0f0      	LDI  R31,0
00051e 940e 0a81 	CALL SUBOPT_0x8
000520 85ed      	LDD  R30,Y+13
000521 70e7      	ANDI R30,LOW(0x7)
000522 f009      	BREQ _0x2000042
000523 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
000524 e020      	LDI  R18,LOW(0)
                 _0x2000043:
000525 932f      	PUSH R18
000526 5f2f      	SUBI R18,-1
000527 2fe3      	MOV  R30,R19
000528 91af      	POP  R26
000529 17ae      	CP   R26,R30
00052a f488      	BRSH _0x2000045
00052b 851e      	LDD  R17,Y+14
                 _0x2000046:
00052c 931f      	PUSH R17
00052d 5f1f      	SUBI R17,-1
00052e 2fe0      	MOV  R30,R16
00052f 91af      	POP  R26
000530 17ae      	CP   R26,R30
000531 f418      	BRSH _0x2000048
000532 940e 0a86 	CALL SUBOPT_0x9
000534 cff7      	RJMP _0x2000046
                 _0x2000048:
000535 85ee      	LDD  R30,Y+14
000536 81ae      	LDD  R26,Y+6
000537 81bf      	LDD  R27,Y+6+1
000538 e0f0      	LDI  R31,0
000539 940e 0a81 	CALL SUBOPT_0x8
00053b cfe9      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
00053c 85ef      	LDD  R30,Y+15
00053d 70e7      	ANDI R30,LOW(0x7)
00053e 2f3e      	MOV  R19,R30
                 _0x2000049:
00053f 85ed      	LDD  R30,Y+13
000540 30e0      	CPI  R30,0
000541 f409      	BRNE PC+2
000542 c149      	RJMP _0x200004B
000543 85ea      	LDD  R30,Y+10
000544 85fb      	LDD  R31,Y+10+1
000545 83ee      	STD  Y+6,R30
000546 83ff      	STD  Y+6+1,R31
000547 e010      	LDI  R17,LOW(0)
000548 8908      	LDD  R16,Y+16
000549 3030      	CPI  R19,0
00054a f009      	BREQ PC+2
00054b c063      	RJMP _0x200004C
00054c 85ad      	LDD  R26,Y+13
00054d 30a8      	CPI  R26,LOW(0x8)
00054e f408      	BRSH PC+2
00054f c05a      	RJMP _0x200004D
000550 85e9      	LDD  R30,Y+9
000551 30e0      	CPI  R30,0
000552 f011      	BREQ _0x2000052
000553 30e3      	CPI  R30,LOW(0x3)
000554 f409      	BRNE _0x2000053
                 _0x2000052:
000555 c002      	RJMP _0x2000054
                 _0x2000053:
000556 30e7      	CPI  R30,LOW(0x7)
000557 f409      	BRNE _0x2000055
                 _0x2000054:
000558 c002      	RJMP _0x2000056
                 _0x2000055:
000559 30e8      	CPI  R30,LOW(0x8)
00055a f409      	BRNE _0x2000057
                 _0x2000056:
00055b c002      	RJMP _0x2000058
                 _0x2000057:
00055c 30e9      	CPI  R30,LOW(0x9)
00055d f409      	BRNE _0x2000059
                 _0x2000058:
00055e c002      	RJMP _0x200005A
                 _0x2000059:
00055f 30ea      	CPI  R30,LOW(0xA)
000560 f421      	BRNE _0x200005B
                 _0x200005A:
000561 930a      	ST   -Y,R16
000562 89a8      	LDD  R26,Y+16
000563 de2d      	RCALL _pcd8544_gotoxy
000564 c004      	RJMP _0x2000050
                 _0x200005B:
000565 30e6      	CPI  R30,LOW(0x6)
000566 f411      	BRNE _0x2000050
000567 940e 0a93 	CALL SUBOPT_0xA
                 _0x2000050:
                 _0x200005D:
000569 931f      	PUSH R17
00056a 5f1f      	SUBI R17,-1
00056b 85ee      	LDD  R30,Y+14
00056c 91af      	POP  R26
00056d 17ae      	CP   R26,R30
00056e f5a0      	BRSH _0x200005F
00056f 85a9      	LDD  R26,Y+9
000570 30a6      	CPI  R26,LOW(0x6)
000571 f451      	BRNE _0x2000060
000572 940e 0a97 	CALL SUBOPT_0xB
000574 93fa      	ST   -Y,R31
000575 93ea      	ST   -Y,R30
000576 940e 0a6c 	CALL SUBOPT_0x5
000578 81a0      	LD   R26,Z
000579 940e 0a12 	CALL _glcd_writemem
00057b c026      	RJMP _0x2000061
                 _0x2000060:
00057c 85e9      	LDD  R30,Y+9
00057d 30e9      	CPI  R30,LOW(0x9)
00057e f411      	BRNE _0x2000065
00057f e050      	LDI  R21,LOW(0)
000580 c00e      	RJMP _0x2000066
                 _0x2000065:
000581 30ea      	CPI  R30,LOW(0xA)
000582 f411      	BRNE _0x2000064
000583 ef5f      	LDI  R21,LOW(255)
000584 c00a      	RJMP _0x2000066
                 _0x2000064:
000585 940e 0a97 	CALL SUBOPT_0xB
000587 940e 0aa0 	CALL SUBOPT_0xC
000589 2f5e      	MOV  R21,R30
00058a 85e9      	LDD  R30,Y+9
00058b 30e7      	CPI  R30,LOW(0x7)
00058c f011      	BREQ _0x200006D
00058d 30e8      	CPI  R30,LOW(0x8)
00058e f421      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
00058f 940e 0aa6 	CALL SUBOPT_0xD
000591 2f5e      	MOV  R21,R30
000592 c006      	RJMP _0x200006F
                 _0x200006E:
000593 30e3      	CPI  R30,LOW(0x3)
000594 f411      	BRNE _0x2000071
000595 9550      	COM  R21
000596 c002      	RJMP _0x2000072
                 _0x2000071:
000597 30e0      	CPI  R30,0
000598 f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
000599 2fa5      	MOV  R26,R21
00059a ddd6      	RCALL _pcd8544_wrdata_G100
00059b c006      	RJMP _0x200006B
                 _0x2000074:
00059c 940e 0aaa 	CALL SUBOPT_0xE
00059e efef      	LDI  R30,LOW(255)
00059f 93ea      	ST   -Y,R30
0005a0 85ad      	LDD  R26,Y+13
0005a1 ded4      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
0005a2 cfc6      	RJMP _0x200005D
                 _0x200005F:
0005a3 85ef      	LDD  R30,Y+15
0005a4 5fe8      	SUBI R30,-LOW(8)
0005a5 87ef      	STD  Y+15,R30
0005a6 85ed      	LDD  R30,Y+13
0005a7 50e8      	SUBI R30,LOW(8)
0005a8 87ed      	STD  Y+13,R30
0005a9 c0d9      	RJMP _0x2000075
                 _0x200004D:
0005aa 855d      	LDD  R21,Y+13
0005ab e020      	LDI  R18,LOW(0)
0005ac e0e0      	LDI  R30,LOW(0)
0005ad 87ed      	STD  Y+13,R30
0005ae c07e      	RJMP _0x2000076
                 _0x200004C:
0005af 2fe3      	MOV  R30,R19
0005b0 85ad      	LDD  R26,Y+13
0005b1 0fae      	ADD  R26,R30
0005b2 30a9      	CPI  R26,LOW(0x9)
0005b3 f420      	BRSH _0x2000077
0005b4 852d      	LDD  R18,Y+13
0005b5 e0e0      	LDI  R30,LOW(0)
0005b6 87ed      	STD  Y+13,R30
0005b7 c003      	RJMP _0x2000078
                 _0x2000077:
0005b8 e0e8      	LDI  R30,LOW(8)
0005b9 1be3      	SUB  R30,R19
0005ba 2f2e      	MOV  R18,R30
                 _0x2000078:
0005bb 933a      	ST   -Y,R19
0005bc 2fa2      	MOV  R26,R18
0005bd 940e 09c0 	CALL _glcd_getmask
0005bf 2f4e      	MOV  R20,R30
0005c0 85e9      	LDD  R30,Y+9
0005c1 30e6      	CPI  R30,LOW(0x6)
0005c2 f511      	BRNE _0x200007C
0005c3 940e 0a93 	CALL SUBOPT_0xA
                 _0x200007D:
0005c5 931f      	PUSH R17
0005c6 5f1f      	SUBI R17,-1
0005c7 85ee      	LDD  R30,Y+14
0005c8 91af      	POP  R26
0005c9 17ae      	CP   R26,R30
0005ca f4c8      	BRSH _0x200007F
0005cb 940e 0a6c 	CALL SUBOPT_0x5
0005cd 81e0      	LD   R30,Z
0005ce 23e4      	AND  R30,R20
0005cf 2fae      	MOV  R26,R30
0005d0 2fe3      	MOV  R30,R19
0005d1 940e 0b39 	CALL __LSRB12
0005d3 940e 0ab0 	CALL SUBOPT_0xF
0005d5 2fe3      	MOV  R30,R19
0005d6 2fa4      	MOV  R26,R20
0005d7 940e 0b39 	CALL __LSRB12
0005d9 95e0      	COM  R30
0005da 21e1      	AND  R30,R1
0005db 2b5e      	OR   R21,R30
0005dc 940e 0a97 	CALL SUBOPT_0xB
0005de 93fa      	ST   -Y,R31
0005df 93ea      	ST   -Y,R30
0005e0 2fa5      	MOV  R26,R21
0005e1 940e 0a12 	CALL _glcd_writemem
0005e3 cfe1      	RJMP _0x200007D
                 _0x200007F:
0005e4 c02c      	RJMP _0x200007B
                 _0x200007C:
0005e5 30e9      	CPI  R30,LOW(0x9)
0005e6 f411      	BRNE _0x2000080
0005e7 e050      	LDI  R21,LOW(0)
0005e8 c003      	RJMP _0x2000081
                 _0x2000080:
0005e9 30ea      	CPI  R30,LOW(0xA)
0005ea f4a9      	BRNE _0x2000087
0005eb ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
0005ec 940e 0aa6 	CALL SUBOPT_0xD
0005ee 2fae      	MOV  R26,R30
0005ef 2fe3      	MOV  R30,R19
0005f0 940e 0b31 	CALL __LSLB12
0005f2 2f5e      	MOV  R21,R30
                 _0x2000084:
0005f3 931f      	PUSH R17
0005f4 5f1f      	SUBI R17,-1
0005f5 85ee      	LDD  R30,Y+14
0005f6 91af      	POP  R26
0005f7 17ae      	CP   R26,R30
0005f8 f430      	BRSH _0x2000086
0005f9 940e 0aaa 	CALL SUBOPT_0xE
0005fb 934a      	ST   -Y,R20
0005fc e0a0      	LDI  R26,LOW(0)
0005fd de78      	RCALL _pcd8544_wrmasked_G100
0005fe cff4      	RJMP _0x2000084
                 _0x2000086:
0005ff c011      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
000600 931f      	PUSH R17
000601 5f1f      	SUBI R17,-1
000602 85ee      	LDD  R30,Y+14
000603 91af      	POP  R26
000604 17ae      	CP   R26,R30
000605 f458      	BRSH _0x200008A
000606 940e 0abb 	CALL SUBOPT_0x10
000608 2fae      	MOV  R26,R30
000609 2fe3      	MOV  R30,R19
00060a 940e 0b31 	CALL __LSLB12
00060c 93ea      	ST   -Y,R30
00060d 934a      	ST   -Y,R20
00060e 85ad      	LDD  R26,Y+13
00060f de66      	RCALL _pcd8544_wrmasked_G100
000610 cfef      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
000611 85ed      	LDD  R30,Y+13
000612 30e0      	CPI  R30,0
000613 f409      	BRNE _0x200008B
000614 c077      	RJMP _0x200004B
                 _0x200008B:
000615 85ad      	LDD  R26,Y+13
000616 30a8      	CPI  R26,LOW(0x8)
000617 f428      	BRSH _0x200008C
000618 85ed      	LDD  R30,Y+13
000619 1be2      	SUB  R30,R18
00061a 2f5e      	MOV  R21,R30
00061b e0e0      	LDI  R30,LOW(0)
00061c c003      	RJMP _0x20000A2
                 _0x200008C:
00061d 2f53      	MOV  R21,R19
00061e 85ed      	LDD  R30,Y+13
00061f 50e8      	SUBI R30,LOW(8)
                 _0x20000A2:
000620 87ed      	STD  Y+13,R30
000621 e010      	LDI  R17,LOW(0)
000622 85ef      	LDD  R30,Y+15
000623 5fe8      	SUBI R30,-LOW(8)
000624 87ef      	STD  Y+15,R30
000625 e0e8      	LDI  R30,LOW(8)
000626 1be3      	SUB  R30,R19
000627 2f2e      	MOV  R18,R30
000628 8908      	LDD  R16,Y+16
000629 85ea      	LDD  R30,Y+10
00062a 85fb      	LDD  R31,Y+10+1
00062b 83ee      	STD  Y+6,R30
00062c 83ff      	STD  Y+6+1,R31
                 _0x2000076:
00062d 2fe5      	MOV  R30,R21
00062e e0f0      	LDI  R31,0
00062f 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000630 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000631 9144      	LPM  R20,Z
000632 85e9      	LDD  R30,Y+9
000633 30e6      	CPI  R30,LOW(0x6)
000634 f511      	BRNE _0x2000091
000635 940e 0a93 	CALL SUBOPT_0xA
                 _0x2000092:
000637 931f      	PUSH R17
000638 5f1f      	SUBI R17,-1
000639 85ee      	LDD  R30,Y+14
00063a 91af      	POP  R26
00063b 17ae      	CP   R26,R30
00063c f4c8      	BRSH _0x2000094
00063d 940e 0a6c 	CALL SUBOPT_0x5
00063f 81e0      	LD   R30,Z
000640 23e4      	AND  R30,R20
000641 2fae      	MOV  R26,R30
000642 2fe2      	MOV  R30,R18
000643 940e 0b31 	CALL __LSLB12
000645 940e 0ab0 	CALL SUBOPT_0xF
000647 2fe2      	MOV  R30,R18
000648 2fa4      	MOV  R26,R20
000649 940e 0b31 	CALL __LSLB12
00064b 95e0      	COM  R30
00064c 21e1      	AND  R30,R1
00064d 2b5e      	OR   R21,R30
00064e 940e 0a97 	CALL SUBOPT_0xB
000650 93fa      	ST   -Y,R31
000651 93ea      	ST   -Y,R30
000652 2fa5      	MOV  R26,R21
000653 940e 0a12 	CALL _glcd_writemem
000655 cfe1      	RJMP _0x2000092
                 _0x2000094:
000656 c02c      	RJMP _0x2000090
                 _0x2000091:
000657 30e9      	CPI  R30,LOW(0x9)
000658 f411      	BRNE _0x2000095
000659 e050      	LDI  R21,LOW(0)
00065a c003      	RJMP _0x2000096
                 _0x2000095:
00065b 30ea      	CPI  R30,LOW(0xA)
00065c f4a9      	BRNE _0x200009C
00065d ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
00065e 940e 0aa6 	CALL SUBOPT_0xD
000660 2fae      	MOV  R26,R30
000661 2fe2      	MOV  R30,R18
000662 940e 0b39 	CALL __LSRB12
000664 2f5e      	MOV  R21,R30
                 _0x2000099:
000665 931f      	PUSH R17
000666 5f1f      	SUBI R17,-1
000667 85ee      	LDD  R30,Y+14
000668 91af      	POP  R26
000669 17ae      	CP   R26,R30
00066a f430      	BRSH _0x200009B
00066b 940e 0aaa 	CALL SUBOPT_0xE
00066d 934a      	ST   -Y,R20
00066e e0a0      	LDI  R26,LOW(0)
00066f de06      	RCALL _pcd8544_wrmasked_G100
000670 cff4      	RJMP _0x2000099
                 _0x200009B:
000671 c011      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
000672 931f      	PUSH R17
000673 5f1f      	SUBI R17,-1
000674 85ee      	LDD  R30,Y+14
000675 91af      	POP  R26
000676 17ae      	CP   R26,R30
000677 f458      	BRSH _0x200009F
000678 940e 0abb 	CALL SUBOPT_0x10
00067a 2fae      	MOV  R26,R30
00067b 2fe2      	MOV  R30,R18
00067c 940e 0b39 	CALL __LSRB12
00067e 93ea      	ST   -Y,R30
00067f 934a      	ST   -Y,R20
000680 85ad      	LDD  R26,Y+13
000681 ddf4      	RCALL _pcd8544_wrmasked_G100
000682 cfef      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
000683 85e8      	LDD  R30,Y+8
000684 85aa      	LDD  R26,Y+10
000685 85bb      	LDD  R27,Y+10+1
000686 e0f0      	LDI  R31,0
000687 0fea      	ADD  R30,R26
000688 1ffb      	ADC  R31,R27
000689 87ea      	STD  Y+10,R30
00068a 87fb      	STD  Y+10+1,R31
00068b ceb3      	RJMP _0x2000049
                 _0x200004B:
                 _0x2140008:
00068c 940e 0ba4 	CALL __LOADLOCR6
00068e 9661      	ADIW R28,17
00068f 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000690 940e 0ac8 	CALL SUBOPT_0x11
000692 f024      	BRLT _0x2020003
000693 e0e0      	LDI  R30,LOW(0)
000694 e0f0      	LDI  R31,HIGH(0)
000695 940c 09c9 	JMP  _0x2140002
                 _0x2020003:
000697 81a8      	LD   R26,Y
000698 81b9      	LDD  R27,Y+1
000699 35a4      	CPI  R26,LOW(0x54)
00069a e0e0      	LDI  R30,HIGH(0x54)
00069b 07be      	CPC  R27,R30
00069c f024      	BRLT _0x2020004
00069d e5e3      	LDI  R30,LOW(83)
00069e e0f0      	LDI  R31,HIGH(83)
00069f 940c 09c9 	JMP  _0x2140002
                 _0x2020004:
0006a1 81e8      	LD   R30,Y
0006a2 81f9      	LDD  R31,Y+1
0006a3 940c 09c9 	JMP  _0x2140002
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
0006a5 940e 0ac8 	CALL SUBOPT_0x11
0006a7 f024      	BRLT _0x2020005
0006a8 e0e0      	LDI  R30,LOW(0)
0006a9 e0f0      	LDI  R31,HIGH(0)
0006aa 940c 09c9 	JMP  _0x2140002
                 _0x2020005:
0006ac 81a8      	LD   R26,Y
0006ad 81b9      	LDD  R27,Y+1
0006ae 97d0      	SBIW R26,48
0006af f024      	BRLT _0x2020006
0006b0 e2ef      	LDI  R30,LOW(47)
0006b1 e0f0      	LDI  R31,HIGH(47)
0006b2 940c 09c9 	JMP  _0x2140002
                 _0x2020006:
0006b4 81e8      	LD   R30,Y
0006b5 81f9      	LDD  R31,Y+1
0006b6 940c 09c9 	JMP  _0x2140002
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
0006b8 93ba      	ST   -Y,R27
0006b9 93aa      	ST   -Y,R26
0006ba 9723      	SBIW R28,3
0006bb 940e 0acf 	CALL SUBOPT_0x12
0006bd 018f      	MOVW R16,R30
0006be 2e00      	MOV  R0,R16
0006bf 2a01      	OR   R0,R17
0006c0 f419      	BRNE _0x202000B
0006c1 e0e0      	LDI  R30,LOW(0)
0006c2 e0f0      	LDI  R31,HIGH(0)
0006c3 c05f      	RJMP _0x2140007
                 _0x202000B:
0006c4 940e 0ad6 	CALL SUBOPT_0x13
0006c6 820f      	STD  Y+7,R0
0006c7 940e 0ad6 	CALL SUBOPT_0x13
0006c9 820e      	STD  Y+6,R0
0006ca 940e 0ad6 	CALL SUBOPT_0x13
0006cc 8608      	STD  Y+8,R0
0006cd 85eb      	LDD  R30,Y+11
0006ce 85a8      	LDD  R26,Y+8
0006cf 17ea      	CP   R30,R26
0006d0 f418      	BRSH _0x202000C
0006d1 e0e0      	LDI  R30,LOW(0)
0006d2 e0f0      	LDI  R31,HIGH(0)
0006d3 c04f      	RJMP _0x2140007
                 _0x202000C:
0006d4 01f8      	MOVW R30,R16
                +
0006d5 5f0f     +SUBI R16 , LOW ( - 1 )
0006d6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0006d7 9154      	LPM  R21,Z
0006d8 85a8      	LDD  R26,Y+8
0006d9 27bb      	CLR  R27
0006da 27ee      	CLR  R30
0006db 0fa5      	ADD  R26,R21
0006dc 1fbe      	ADC  R27,R30
0006dd 85eb      	LDD  R30,Y+11
0006de e0f0      	LDI  R31,0
0006df 17ea      	CP   R30,R26
0006e0 07fb      	CPC  R31,R27
0006e1 f018      	BRLO _0x202000D
0006e2 e0e0      	LDI  R30,LOW(0)
0006e3 e0f0      	LDI  R31,HIGH(0)
0006e4 c03e      	RJMP _0x2140007
                 _0x202000D:
0006e5 81ee      	LDD  R30,Y+6
0006e6 95e6      	LSR  R30
0006e7 95e6      	LSR  R30
0006e8 95e6      	LSR  R30
0006e9 2f4e      	MOV  R20,R30
0006ea 81ee      	LDD  R30,Y+6
0006eb 70e7      	ANDI R30,LOW(0x7)
0006ec f009      	BREQ _0x202000E
0006ed 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
0006ee 81ef      	LDD  R30,Y+7
0006ef 30e0      	CPI  R30,0
0006f0 f0a1      	BREQ _0x202000F
0006f1 85a9      	LDD  R26,Y+9
0006f2 85ba      	LDD  R27,Y+9+1
0006f3 93ec      	ST   X,R30
0006f4 85a8      	LDD  R26,Y+8
0006f5 85eb      	LDD  R30,Y+11
0006f6 1bea      	SUB  R30,R26
0006f7 e0f0      	LDI  R31,0
0006f8 01df      	MOVW R26,R30
0006f9 81ef      	LDD  R30,Y+7
0006fa e0f0      	LDI  R31,0
0006fb 940e 0b46 	CALL __MULW12U
0006fd 01df      	MOVW R26,R30
0006fe 2fe4      	MOV  R30,R20
0006ff e0f0      	LDI  R31,0
000700 940e 0b46 	CALL __MULW12U
000702 0fe0      	ADD  R30,R16
000703 1ff1      	ADC  R31,R17
000704 c01e      	RJMP _0x2140007
                 _0x202000F:
000705 0198      	MOVW R18,R16
000706 2fe5      	MOV  R30,R21
000707 e0f0      	LDI  R31,0
                +
000708 0f0e     +ADD R16 , R30
000709 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
00070a 85a8      	LDD  R26,Y+8
00070b 5faf      	SUBI R26,-LOW(1)
00070c 87a8      	STD  Y+8,R26
00070d 50a1      	SUBI R26,LOW(1)
00070e 85eb      	LDD  R30,Y+11
00070f 17ae      	CP   R26,R30
000710 f460      	BRSH _0x2020012
000711 01f9      	MOVW R30,R18
                +
000712 5f2f     +SUBI R18 , LOW ( - 1 )
000713 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000714 91a4      	LPM  R26,Z
000715 e0b0      	LDI  R27,0
000716 2fe4      	MOV  R30,R20
000717 e0f0      	LDI  R31,0
000718 940e 0b46 	CALL __MULW12U
                +
00071a 0f0e     +ADD R16 , R30
00071b 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00071c cfed      	RJMP _0x2020010
                 _0x2020012:
00071d 01f9      	MOVW R30,R18
00071e 91e4      	LPM  R30,Z
00071f 85a9      	LDD  R26,Y+9
000720 85ba      	LDD  R27,Y+9+1
000721 93ec      	ST   X,R30
000722 01f8      	MOVW R30,R16
                 _0x2140007:
000723 940e 0ba4 	CALL __LOADLOCR6
000725 962c      	ADIW R28,12
000726 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
000727 e0e0      	LDI  R30,LOW(0)
                +
000728 93e0 0546+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
00072a 91a0 0547+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00072c 27bb      	CLR  R27
00072d 940e 0adb 	CALL SUBOPT_0x14
00072f e0f0      	LDI  R31,0
000730 0fae      	ADD  R26,R30
000731 1fbf      	ADC  R27,R31
                +
000732 91e0 054b+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000734 e0f0      	LDI  R31,0
000735 0fae      	ADD  R26,R30
000736 1fbf      	ADC  R27,R31
000737 df6d      	RCALL _glcd_clipy
                +
000738 93e0 0547+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00073a 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
00073b 93aa      	ST   -Y,R26
00073c 9721      	SBIW R28,1
00073d 940e 0acf 	CALL SUBOPT_0x12
00073f 9730      	SBIW R30,0
000740 f409      	BRNE PC+2
000741 c055      	RJMP _0x202001F
000742 81af      	LDD  R26,Y+7
000743 30aa      	CPI  R26,LOW(0xA)
000744 f409      	BRNE _0x2020020
000745 c04f      	RJMP _0x2020021
                 _0x2020020:
000746 81ef      	LDD  R30,Y+7
000747 93ea      	ST   -Y,R30
000748 01de      	MOVW R26,R28
000749 9617      	ADIW R26,7
00074a df6d      	RCALL _glcd_getcharw_G101
00074b 01af      	MOVW R20,R30
00074c 9730      	SBIW R30,0
00074d f409      	BRNE _0x2020022
00074e c04a      	RJMP _0x2140006
                 _0x2020022:
                +
00074f 91e0 054a+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000751 81ae      	LDD  R26,Y+6
000752 0fea      	ADD  R30,R26
000753 2f3e      	MOV  R19,R30
                +
000754 91a0 0546+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000756 27bb      	CLR  R27
000757 e0f0      	LDI  R31,0
000758 0fea      	ADD  R30,R26
000759 1ffb      	ADC  R31,R27
00075a 018f      	MOVW R16,R30
                +
00075b 3505     +CPI R16 , LOW ( 85 )
00075c e0e0     +LDI R30 , HIGH ( 85 )
00075d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
00075e f018      	BRLO _0x2020023
00075f 2f03      	MOV  R16,R19
000760 2711      	CLR  R17
000761 dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
000762 91e0 0546+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000764 93ea      	ST   -Y,R30
                +
000765 91e0 0547+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000767 93ea      	ST   -Y,R30
000768 85e8      	LDD  R30,Y+8
000769 93ea      	ST   -Y,R30
00076a 940e 0adb 	CALL SUBOPT_0x14
00076c 93ea      	ST   -Y,R30
00076d e0e1      	LDI  R30,LOW(1)
00076e 93ea      	ST   -Y,R30
00076f 935a      	ST   -Y,R21
000770 934a      	ST   -Y,R20
000771 e0a7      	LDI  R26,LOW(7)
000772 dd3c      	RCALL _glcd_block
                +
000773 91e0 0546+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000775 81ae      	LDD  R26,Y+6
000776 0fea      	ADD  R30,R26
000777 93ea      	ST   -Y,R30
                +
000778 91e0 0547+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
00077a 93ea      	ST   -Y,R30
                +
00077b 91e0 054a+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00077d 93ea      	ST   -Y,R30
00077e 940e 0adb 	CALL SUBOPT_0x14
000780 940e 0ae2 	CALL SUBOPT_0x15
                +
000782 91e0 0546+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000784 93ea      	ST   -Y,R30
                +
000785 91a0 0547+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000787 940e 0adb 	CALL SUBOPT_0x14
000789 0fea      	ADD  R30,R26
00078a 93ea      	ST   -Y,R30
00078b 933a      	ST   -Y,R19
                +
00078c 91e0 054b+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
00078e 940e 0ae2 	CALL SUBOPT_0x15
000790 e5e4      	LDI  R30,LOW(84)
000791 e0f0      	LDI  R31,HIGH(84)
000792 17e0      	CP   R30,R16
000793 07f1      	CPC  R31,R17
000794 f411      	BRNE _0x2020024
                 _0x2020021:
000795 df91      	RCALL _glcd_new_line_G101
000796 c002      	RJMP _0x2140006
                 _0x2020024:
                 _0x202001F:
                +
000797 9300 0546+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2140006:
000799 940e 0ba4 	CALL __LOADLOCR6
00079b 9628      	ADIW R28,8
00079c 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
00079d 93ba      	ST   -Y,R27
00079e 93aa      	ST   -Y,R26
00079f 931a      	ST   -Y,R17
0007a0 81ec      	LDD  R30,Y+4
0007a1 93ea      	ST   -Y,R30
0007a2 81ac      	LDD  R26,Y+4
0007a3 d00e      	RCALL _glcd_moveto
                 _0x2020025:
0007a4 81a9      	LDD  R26,Y+1
0007a5 81ba      	LDD  R27,Y+1+1
0007a6 91ed      	LD   R30,X+
0007a7 83a9      	STD  Y+1,R26
0007a8 83ba      	STD  Y+1+1,R27
0007a9 2f1e      	MOV  R17,R30
0007aa 30e0      	CPI  R30,0
0007ab f019      	BREQ _0x2020027
0007ac 2fa1      	MOV  R26,R17
0007ad df8d      	RCALL _glcd_putchar
0007ae cff5      	RJMP _0x2020025
                 _0x2020027:
0007af 8118      	LDD  R17,Y+0
0007b0 940c 09a5 	JMP  _0x2140003
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
0007b2 93aa      	ST   -Y,R26
0007b3 81a9      	LDD  R26,Y+1
0007b4 27bb      	CLR  R27
0007b5 deda      	RCALL _glcd_clipx
                +
0007b6 93e0 0546+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
0007b8 81a8      	LD   R26,Y
0007b9 27bb      	CLR  R27
0007ba deea      	RCALL _glcd_clipy
                +
0007bb 93e0 0547+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0007bd 940c 09c9 	JMP  _0x2140002
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G102:
                 ; .FSTART _put_buff_G102
0007bf 93ba      	ST   -Y,R27
0007c0 93aa      	ST   -Y,R26
0007c1 931a      	ST   -Y,R17
0007c2 930a      	ST   -Y,R16
0007c3 81aa      	LDD  R26,Y+2
0007c4 81bb      	LDD  R27,Y+2+1
0007c5 9612      	ADIW R26,2
0007c6 940e 0b6f 	CALL __GETW1P
0007c8 9730      	SBIW R30,0
0007c9 f159      	BREQ _0x2040010
0007ca 81aa      	LDD  R26,Y+2
0007cb 81bb      	LDD  R27,Y+2+1
0007cc 9614      	ADIW R26,4
0007cd 940e 0b6f 	CALL __GETW1P
0007cf 018f      	MOVW R16,R30
0007d0 9730      	SBIW R30,0
0007d1 f061      	BREQ _0x2040012
                +
0007d2 3002     +CPI R16 , LOW ( 2 )
0007d3 e0e0     +LDI R30 , HIGH ( 2 )
0007d4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0007d5 f098      	BRLO _0x2040013
0007d6 01f8      	MOVW R30,R16
0007d7 9731      	SBIW R30,1
0007d8 018f      	MOVW R16,R30
                +
0007d9 81aa     +LDD R26 , Y + 2
0007da 81bb     +LDD R27 , Y + 2 + 1
0007db 9614     +ADIW R26 , 4
0007dc 93ed     +ST X + , R30
0007dd 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2040012:
0007de 81aa      	LDD  R26,Y+2
0007df 81bb      	LDD  R27,Y+2+1
0007e0 9612      	ADIW R26,2
0007e1 91ed      	LD   R30,X+
0007e2 91fd      	LD   R31,X+
0007e3 9631      	ADIW R30,1
0007e4 93fe      	ST   -X,R31
0007e5 93ee      	ST   -X,R30
0007e6 9731      	SBIW R30,1
0007e7 81ac      	LDD  R26,Y+4
0007e8 83a0      	STD  Z+0,R26
                 _0x2040013:
0007e9 81aa      	LDD  R26,Y+2
0007ea 81bb      	LDD  R27,Y+2+1
0007eb 940e 0b6f 	CALL __GETW1P
0007ed 23ff      	TST  R31
0007ee f02a      	BRMI _0x2040014
0007ef 91ed      	LD   R30,X+
0007f0 91fd      	LD   R31,X+
0007f1 9631      	ADIW R30,1
0007f2 93fe      	ST   -X,R31
0007f3 93ee      	ST   -X,R30
                 _0x2040014:
0007f4 c006      	RJMP _0x2040015
                 _0x2040010:
0007f5 81aa      	LDD  R26,Y+2
0007f6 81bb      	LDD  R27,Y+2+1
0007f7 efef      	LDI  R30,LOW(65535)
0007f8 efff      	LDI  R31,HIGH(65535)
0007f9 93ed      	ST   X+,R30
0007fa 93fc      	ST   X,R31
                 _0x2040015:
0007fb 8119      	LDD  R17,Y+1
0007fc 8108      	LDD  R16,Y+0
0007fd c1a7      	RJMP _0x2140003
                 ; .FEND
                 __print_G102:
                 ; .FSTART __print_G102
0007fe 93ba      	ST   -Y,R27
0007ff 93aa      	ST   -Y,R26
000800 9726      	SBIW R28,6
000801 940e 0b9d 	CALL __SAVELOCR6
000803 e010      	LDI  R17,0
000804 85ac      	LDD  R26,Y+12
000805 85bd      	LDD  R27,Y+12+1
000806 e0e0      	LDI  R30,LOW(0)
000807 e0f0      	LDI  R31,HIGH(0)
000808 93ed      	ST   X+,R30
000809 93fc      	ST   X,R31
                 _0x2040016:
00080a 89ea      	LDD  R30,Y+18
00080b 89fb      	LDD  R31,Y+18+1
00080c 9631      	ADIW R30,1
00080d 8bea      	STD  Y+18,R30
00080e 8bfb      	STD  Y+18+1,R31
00080f 9731      	SBIW R30,1
000810 91e4      	LPM  R30,Z
000811 2f2e      	MOV  R18,R30
000812 30e0      	CPI  R30,0
000813 f409      	BRNE PC+2
000814 c115      	RJMP _0x2040018
000815 2fe1      	MOV  R30,R17
000816 30e0      	CPI  R30,0
000817 f439      	BRNE _0x204001C
000818 3225      	CPI  R18,37
000819 f411      	BRNE _0x204001D
00081a e011      	LDI  R17,LOW(1)
00081b c002      	RJMP _0x204001E
                 _0x204001D:
00081c 940e 0aec 	CALL SUBOPT_0x16
                 _0x204001E:
00081e c10a      	RJMP _0x204001B
                 _0x204001C:
00081f 30e1      	CPI  R30,LOW(0x1)
000820 f4a9      	BRNE _0x204001F
000821 3225      	CPI  R18,37
000822 f419      	BRNE _0x2040020
000823 940e 0aec 	CALL SUBOPT_0x16
000825 c102      	RJMP _0x20400CC
                 _0x2040020:
000826 e012      	LDI  R17,LOW(2)
000827 e040      	LDI  R20,LOW(0)
000828 e000      	LDI  R16,LOW(0)
000829 322d      	CPI  R18,45
00082a f411      	BRNE _0x2040021
00082b e001      	LDI  R16,LOW(1)
00082c c0fc      	RJMP _0x204001B
                 _0x2040021:
00082d 322b      	CPI  R18,43
00082e f411      	BRNE _0x2040022
00082f e24b      	LDI  R20,LOW(43)
000830 c0f8      	RJMP _0x204001B
                 _0x2040022:
000831 3220      	CPI  R18,32
000832 f411      	BRNE _0x2040023
000833 e240      	LDI  R20,LOW(32)
000834 c0f4      	RJMP _0x204001B
                 _0x2040023:
000835 c002      	RJMP _0x2040024
                 _0x204001F:
000836 30e2      	CPI  R30,LOW(0x2)
000837 f439      	BRNE _0x2040025
                 _0x2040024:
000838 e050      	LDI  R21,LOW(0)
000839 e013      	LDI  R17,LOW(3)
00083a 3320      	CPI  R18,48
00083b f411      	BRNE _0x2040026
00083c 6800      	ORI  R16,LOW(128)
00083d c0eb      	RJMP _0x204001B
                 _0x2040026:
00083e c003      	RJMP _0x2040027
                 _0x2040025:
00083f 30e3      	CPI  R30,LOW(0x3)
000840 f009      	BREQ PC+2
000841 c0e7      	RJMP _0x204001B
                 _0x2040027:
000842 3320      	CPI  R18,48
000843 f010      	BRLO _0x204002A
000844 332a      	CPI  R18,58
000845 f008      	BRLO _0x204002B
                 _0x204002A:
000846 c007      	RJMP _0x2040029
                 _0x204002B:
000847 e0aa      	LDI  R26,LOW(10)
000848 9f5a      	MUL  R21,R26
000849 2d50      	MOV  R21,R0
00084a 2fe2      	MOV  R30,R18
00084b 53e0      	SUBI R30,LOW(48)
00084c 0f5e      	ADD  R21,R30
00084d c0db      	RJMP _0x204001B
                 _0x2040029:
00084e 2fe2      	MOV  R30,R18
00084f 36e3      	CPI  R30,LOW(0x63)
000850 f449      	BRNE _0x204002F
000851 940e 0af3 	CALL SUBOPT_0x17
000853 89e8      	LDD  R30,Y+16
000854 89f9      	LDD  R31,Y+16+1
000855 81a4      	LDD  R26,Z+4
000856 93aa      	ST   -Y,R26
000857 940e 0af9 	CALL SUBOPT_0x18
000859 c0ce      	RJMP _0x2040030
                 _0x204002F:
00085a 37e3      	CPI  R30,LOW(0x73)
00085b f441      	BRNE _0x2040032
00085c 940e 0af3 	CALL SUBOPT_0x17
00085e 940e 0aff 	CALL SUBOPT_0x19
000860 940e 09a7 	CALL _strlen
000862 2f1e      	MOV  R17,R30
000863 c00a      	RJMP _0x2040033
                 _0x2040032:
000864 37e0      	CPI  R30,LOW(0x70)
000865 f461      	BRNE _0x2040035
000866 940e 0af3 	CALL SUBOPT_0x17
000868 940e 0aff 	CALL SUBOPT_0x19
00086a 940e 09b3 	CALL _strlenf
00086c 2f1e      	MOV  R17,R30
00086d 6008      	ORI  R16,LOW(8)
                 _0x2040033:
00086e 6002      	ORI  R16,LOW(2)
00086f 770f      	ANDI R16,LOW(127)
000870 e030      	LDI  R19,LOW(0)
000871 c034      	RJMP _0x2040036
                 _0x2040035:
000872 36e4      	CPI  R30,LOW(0x64)
000873 f011      	BREQ _0x2040039
000874 36e9      	CPI  R30,LOW(0x69)
000875 f411      	BRNE _0x204003A
                 _0x2040039:
000876 6004      	ORI  R16,LOW(4)
000877 c002      	RJMP _0x204003B
                 _0x204003A:
000878 37e5      	CPI  R30,LOW(0x75)
000879 f431      	BRNE _0x204003C
                 _0x204003B:
00087a e7ea      	LDI  R30,LOW(_tbl10_G102*2)
00087b e0f2      	LDI  R31,HIGH(_tbl10_G102*2)
00087c 83ee      	STD  Y+6,R30
00087d 83ff      	STD  Y+6+1,R31
00087e e015      	LDI  R17,LOW(5)
00087f c00c      	RJMP _0x204003D
                 _0x204003C:
000880 35e8      	CPI  R30,LOW(0x58)
000881 f411      	BRNE _0x204003F
000882 6008      	ORI  R16,LOW(8)
000883 c003      	RJMP _0x2040040
                 _0x204003F:
000884 37e8      	CPI  R30,LOW(0x78)
000885 f009      	BREQ PC+2
000886 c0a1      	RJMP _0x2040071
                 _0x2040040:
000887 e8e4      	LDI  R30,LOW(_tbl16_G102*2)
000888 e0f2      	LDI  R31,HIGH(_tbl16_G102*2)
000889 83ee      	STD  Y+6,R30
00088a 83ff      	STD  Y+6+1,R31
00088b e014      	LDI  R17,LOW(4)
                 _0x204003D:
00088c ff02      	SBRS R16,2
00088d c014      	RJMP _0x2040042
00088e 940e 0af3 	CALL SUBOPT_0x17
000890 940e 0b09 	CALL SUBOPT_0x1A
000892 85ab      	LDD  R26,Y+11
000893 23aa      	TST  R26
000894 f43a      	BRPL _0x2040043
000895 85ea      	LDD  R30,Y+10
000896 85fb      	LDD  R31,Y+10+1
000897 940e 0b2d 	CALL __ANEGW1
000899 87ea      	STD  Y+10,R30
00089a 87fb      	STD  Y+10+1,R31
00089b e24d      	LDI  R20,LOW(45)
                 _0x2040043:
00089c 3040      	CPI  R20,0
00089d f011      	BREQ _0x2040044
00089e 5f1f      	SUBI R17,-LOW(1)
00089f c001      	RJMP _0x2040045
                 _0x2040044:
0008a0 7f0b      	ANDI R16,LOW(251)
                 _0x2040045:
0008a1 c004      	RJMP _0x2040046
                 _0x2040042:
0008a2 940e 0af3 	CALL SUBOPT_0x17
0008a4 940e 0b09 	CALL SUBOPT_0x1A
                 _0x2040046:
                 _0x2040036:
0008a6 fd00      	SBRC R16,0
0008a7 c011      	RJMP _0x2040047
                 _0x2040048:
0008a8 1715      	CP   R17,R21
0008a9 f478      	BRSH _0x204004A
0008aa ff07      	SBRS R16,7
0008ab c008      	RJMP _0x204004B
0008ac ff02      	SBRS R16,2
0008ad c004      	RJMP _0x204004C
0008ae 7f0b      	ANDI R16,LOW(251)
0008af 2f24      	MOV  R18,R20
0008b0 5011      	SUBI R17,LOW(1)
0008b1 c001      	RJMP _0x204004D
                 _0x204004C:
0008b2 e320      	LDI  R18,LOW(48)
                 _0x204004D:
0008b3 c001      	RJMP _0x204004E
                 _0x204004B:
0008b4 e220      	LDI  R18,LOW(32)
                 _0x204004E:
0008b5 940e 0aec 	CALL SUBOPT_0x16
0008b7 5051      	SUBI R21,LOW(1)
0008b8 cfef      	RJMP _0x2040048
                 _0x204004A:
                 _0x2040047:
0008b9 2f31      	MOV  R19,R17
0008ba ff01      	SBRS R16,1
0008bb c017      	RJMP _0x204004F
                 _0x2040050:
0008bc 3030      	CPI  R19,0
0008bd f0a1      	BREQ _0x2040052
0008be ff03      	SBRS R16,3
0008bf c006      	RJMP _0x2040053
0008c0 81ee      	LDD  R30,Y+6
0008c1 81ff      	LDD  R31,Y+6+1
0008c2 9125      	LPM  R18,Z+
0008c3 83ee      	STD  Y+6,R30
0008c4 83ff      	STD  Y+6+1,R31
0008c5 c005      	RJMP _0x2040054
                 _0x2040053:
0008c6 81ae      	LDD  R26,Y+6
0008c7 81bf      	LDD  R27,Y+6+1
0008c8 912d      	LD   R18,X+
0008c9 83ae      	STD  Y+6,R26
0008ca 83bf      	STD  Y+6+1,R27
                 _0x2040054:
0008cb 940e 0aec 	CALL SUBOPT_0x16
0008cd 3050      	CPI  R21,0
0008ce f009      	BREQ _0x2040055
0008cf 5051      	SUBI R21,LOW(1)
                 _0x2040055:
0008d0 5031      	SUBI R19,LOW(1)
0008d1 cfea      	RJMP _0x2040050
                 _0x2040052:
0008d2 c04b      	RJMP _0x2040056
                 _0x204004F:
                 _0x2040058:
0008d3 e320      	LDI  R18,LOW(48)
0008d4 81ee      	LDD  R30,Y+6
0008d5 81ff      	LDD  R31,Y+6+1
0008d6 940e 0b73 	CALL __GETW1PF
0008d8 87e8      	STD  Y+8,R30
0008d9 87f9      	STD  Y+8+1,R31
0008da 81ee      	LDD  R30,Y+6
0008db 81ff      	LDD  R31,Y+6+1
0008dc 9632      	ADIW R30,2
0008dd 83ee      	STD  Y+6,R30
0008de 83ff      	STD  Y+6+1,R31
                 _0x204005A:
0008df 85e8      	LDD  R30,Y+8
0008e0 85f9      	LDD  R31,Y+8+1
0008e1 85aa      	LDD  R26,Y+10
0008e2 85bb      	LDD  R27,Y+10+1
0008e3 17ae      	CP   R26,R30
0008e4 07bf      	CPC  R27,R31
0008e5 f050      	BRLO _0x204005C
0008e6 5f2f      	SUBI R18,-LOW(1)
0008e7 85a8      	LDD  R26,Y+8
0008e8 85b9      	LDD  R27,Y+8+1
0008e9 85ea      	LDD  R30,Y+10
0008ea 85fb      	LDD  R31,Y+10+1
0008eb 1bea      	SUB  R30,R26
0008ec 0bfb      	SBC  R31,R27
0008ed 87ea      	STD  Y+10,R30
0008ee 87fb      	STD  Y+10+1,R31
0008ef cfef      	RJMP _0x204005A
                 _0x204005C:
0008f0 332a      	CPI  R18,58
0008f1 f028      	BRLO _0x204005D
0008f2 ff03      	SBRS R16,3
0008f3 c002      	RJMP _0x204005E
0008f4 5f29      	SUBI R18,-LOW(7)
0008f5 c001      	RJMP _0x204005F
                 _0x204005E:
0008f6 5d29      	SUBI R18,-LOW(39)
                 _0x204005F:
                 _0x204005D:
0008f7 fd04      	SBRC R16,4
0008f8 c01a      	RJMP _0x2040061
0008f9 3321      	CPI  R18,49
0008fa f420      	BRSH _0x2040063
0008fb 85a8      	LDD  R26,Y+8
0008fc 85b9      	LDD  R27,Y+8+1
0008fd 9711      	SBIW R26,1
0008fe f409      	BRNE _0x2040062
                 _0x2040063:
0008ff c009      	RJMP _0x20400CD
                 _0x2040062:
000900 1753      	CP   R21,R19
000901 f010      	BRLO _0x2040067
000902 ff00      	SBRS R16,0
000903 c001      	RJMP _0x2040068
                 _0x2040067:
000904 c013      	RJMP _0x2040066
                 _0x2040068:
000905 e220      	LDI  R18,LOW(32)
000906 ff07      	SBRS R16,7
000907 c00b      	RJMP _0x2040069
000908 e320      	LDI  R18,LOW(48)
                 _0x20400CD:
000909 6100      	ORI  R16,LOW(16)
00090a ff02      	SBRS R16,2
00090b c007      	RJMP _0x204006A
00090c 7f0b      	ANDI R16,LOW(251)
00090d 934a      	ST   -Y,R20
00090e 940e 0af9 	CALL SUBOPT_0x18
000910 3050      	CPI  R21,0
000911 f009      	BREQ _0x204006B
000912 5051      	SUBI R21,LOW(1)
                 _0x204006B:
                 _0x204006A:
                 _0x2040069:
                 _0x2040061:
000913 940e 0aec 	CALL SUBOPT_0x16
000915 3050      	CPI  R21,0
000916 f009      	BREQ _0x204006C
000917 5051      	SUBI R21,LOW(1)
                 _0x204006C:
                 _0x2040066:
000918 5031      	SUBI R19,LOW(1)
000919 85a8      	LDD  R26,Y+8
00091a 85b9      	LDD  R27,Y+8+1
00091b 9712      	SBIW R26,2
00091c f008      	BRLO _0x2040059
00091d cfb5      	RJMP _0x2040058
                 _0x2040059:
                 _0x2040056:
00091e ff00      	SBRS R16,0
00091f c008      	RJMP _0x204006D
                 _0x204006E:
000920 3050      	CPI  R21,0
000921 f031      	BREQ _0x2040070
000922 5051      	SUBI R21,LOW(1)
000923 e2e0      	LDI  R30,LOW(32)
000924 93ea      	ST   -Y,R30
000925 940e 0af9 	CALL SUBOPT_0x18
000927 cff8      	RJMP _0x204006E
                 _0x2040070:
                 _0x204006D:
                 _0x2040071:
                 _0x2040030:
                 _0x20400CC:
000928 e010      	LDI  R17,LOW(0)
                 _0x204001B:
000929 cee0      	RJMP _0x2040016
                 _0x2040018:
00092a 85ac      	LDD  R26,Y+12
00092b 85bd      	LDD  R27,Y+12+1
00092c 940e 0b6f 	CALL __GETW1P
00092e 940e 0ba4 	CALL __LOADLOCR6
000930 9664      	ADIW R28,20
000931 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000932 92ff      	PUSH R15
000933 2ef8      	MOV  R15,R24
000934 9726      	SBIW R28,6
000935 940e 0b9f 	CALL __SAVELOCR4
000937 940e 0b11 	CALL SUBOPT_0x1B
000939 9730      	SBIW R30,0
00093a f419      	BRNE _0x2040072
00093b efef      	LDI  R30,LOW(65535)
00093c efff      	LDI  R31,HIGH(65535)
00093d c023      	RJMP _0x2140005
                 _0x2040072:
00093e 01de      	MOVW R26,R28
00093f 9616      	ADIW R26,6
000940 940e 0b29 	CALL __ADDW2R15
000942 018d      	MOVW R16,R26
000943 940e 0b11 	CALL SUBOPT_0x1B
000945 83ee      	STD  Y+6,R30
000946 83ff      	STD  Y+6+1,R31
000947 e0e0      	LDI  R30,LOW(0)
000948 87e8      	STD  Y+8,R30
000949 87e9      	STD  Y+8+1,R30
00094a 01de      	MOVW R26,R28
00094b 961a      	ADIW R26,10
00094c 940e 0b29 	CALL __ADDW2R15
00094e 940e 0b6f 	CALL __GETW1P
000950 93fa      	ST   -Y,R31
000951 93ea      	ST   -Y,R30
000952 931a      	ST   -Y,R17
000953 930a      	ST   -Y,R16
000954 ebef      	LDI  R30,LOW(_put_buff_G102)
000955 e0f7      	LDI  R31,HIGH(_put_buff_G102)
000956 93fa      	ST   -Y,R31
000957 93ea      	ST   -Y,R30
000958 01de      	MOVW R26,R28
000959 961a      	ADIW R26,10
00095a dea3      	RCALL __print_G102
00095b 019f      	MOVW R18,R30
00095c 81ae      	LDD  R26,Y+6
00095d 81bf      	LDD  R27,Y+6+1
00095e e0e0      	LDI  R30,LOW(0)
00095f 93ec      	ST   X,R30
000960 01f9      	MOVW R30,R18
                 _0x2140005:
000961 940e 0ba6 	CALL __LOADLOCR4
000963 962a      	ADIW R28,10
000964 90ff      	POP  R15
000965 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _eeprom_read_block:
                 ; .FSTART _eeprom_read_block
000966 940e 0a77 	CALL SUBOPT_0x6
                +
000968 8508     +LDD R16 , Y + 8
000969 8519     +LDD R17 , Y + 8 + 1
                 	__GETWRS 16,17,8
                +
00096a 812e     +LDD R18 , Y + 6
00096b 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x2080003:
00096c 940e 0b18 	CALL SUBOPT_0x1C
00096e f069      	BREQ _0x2080005
00096f 931f      	PUSH R17
000970 930f      	PUSH R16
                +
000971 5f0f     +SUBI R16 , LOW ( - 1 )
000972 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000973 01d9      	MOVW R26,R18
                +
000974 5f2f     +SUBI R18 , LOW ( - 1 )
000975 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000976 940e 0b7c 	CALL __EEPROMRDB
000978 91af      	POP  R26
000979 91bf      	POP  R27
00097a 93ec      	ST   X,R30
00097b cff0      	RJMP _0x2080003
                 _0x2080005:
00097c c016      	RJMP _0x2140004
                 ; .FEND
                 _eeprom_write_block:
                 ; .FSTART _eeprom_write_block
00097d 940e 0a77 	CALL SUBOPT_0x6
                +
00097f 810e     +LDD R16 , Y + 6
000980 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                +
000981 8528     +LDD R18 , Y + 8
000982 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                 _0x2080006:
000983 940e 0b18 	CALL SUBOPT_0x1C
000985 f069      	BREQ _0x2080008
000986 931f      	PUSH R17
000987 930f      	PUSH R16
                +
000988 5f0f     +SUBI R16 , LOW ( - 1 )
000989 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00098a 01d9      	MOVW R26,R18
                +
00098b 5f2f     +SUBI R18 , LOW ( - 1 )
00098c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00098d 91ec      	LD   R30,X
00098e 91af      	POP  R26
00098f 91bf      	POP  R27
000990 940e 0b88 	CALL __EEPROMWRB
000992 cff0      	RJMP _0x2080006
                 _0x2080008:
                 _0x2140004:
000993 940e 0ba6 	CALL __LOADLOCR4
000995 962a      	ADIW R28,10
000996 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000997 93ba      	ST   -Y,R27
000998 93aa      	ST   -Y,R26
000999 81b9          ldd  r27,y+1
00099a 81a8          ld   r26,y
00099b 9610          adiw r26,0
00099c f031          breq memset1
00099d 81fc          ldd  r31,y+4
00099e 81eb          ldd  r30,y+3
00099f 816a          ldd  r22,y+2
                 memset0:
0009a0 9361          st   z+,r22
0009a1 9711          sbiw r26,1
0009a2 f7e9          brne memset0
                 memset1:
0009a3 81eb          ldd  r30,y+3
0009a4 81fc          ldd  r31,y+4
                 _0x2140003:
0009a5 9625      	ADIW R28,5
0009a6 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0009a7 93ba      	ST   -Y,R27
0009a8 93aa      	ST   -Y,R26
0009a9 91a9          ld   r26,y+
0009aa 91b9          ld   r27,y+
0009ab 27ee          clr  r30
0009ac 27ff          clr  r31
                 strlen0:
0009ad 916d          ld   r22,x+
0009ae 2366          tst  r22
0009af f011          breq strlen1
0009b0 9631          adiw r30,1
0009b1 cffb          rjmp strlen0
                 strlen1:
0009b2 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0009b3 93ba      	ST   -Y,R27
0009b4 93aa      	ST   -Y,R26
0009b5 27aa          clr  r26
0009b6 27bb          clr  r27
0009b7 91e9          ld   r30,y+
0009b8 91f9          ld   r31,y+
                 strlenf0:
0009b9 9005      	lpm  r0,z+
0009ba 2000          tst  r0
0009bb f011          breq strlenf1
0009bc 9611          adiw r26,1
0009bd cffb          rjmp strlenf0
                 strlenf1:
0009be 01fd          movw r30,r26
0009bf 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
0009c0 93aa      	ST   -Y,R26
0009c1 81e8      	LD   R30,Y
0009c2 e0f0      	LDI  R31,0
0009c3 59e0      	SUBI R30,LOW(-__glcd_mask*2)
0009c4 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0009c5 91a4      	LPM  R26,Z
0009c6 81e9      	LDD  R30,Y+1
0009c7 940e 0b31 	CALL __LSLB12
                 _0x2140002:
0009c9 9622      	ADIW R28,2
0009ca 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
0009cb 93aa      	ST   -Y,R26
0009cc 931a      	ST   -Y,R17
0009cd 81e9      	LDD  R30,Y+1
0009ce 30e7      	CPI  R30,LOW(0x7)
0009cf f011      	BREQ _0x20C0007
0009d0 30ea      	CPI  R30,LOW(0xA)
0009d1 f419      	BRNE _0x20C0008
                 _0x20C0007:
0009d2 9110 0544 	LDS  R17,_glcd_state
0009d4 c009      	RJMP _0x20C0009
                 _0x20C0008:
0009d5 30e9      	CPI  R30,LOW(0x9)
0009d6 f419      	BRNE _0x20C000B
                +
0009d7 9110 0545+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
0009d9 c004      	RJMP _0x20C0009
                 _0x20C000B:
0009da 30e8      	CPI  R30,LOW(0x8)
0009db f4a1      	BRNE _0x20C0005
                +
0009dc 9110 0554+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20C0009:
                +
0009de 91e0 0545+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0009e0 30e0      	CPI  R30,0
0009e1 f049      	BREQ _0x20C000E
0009e2 3010      	CPI  R17,0
0009e3 f019      	BREQ _0x20C000F
0009e4 efef      	LDI  R30,LOW(255)
0009e5 8118      	LDD  R17,Y+0
0009e6 c029      	RJMP _0x2140001
                 _0x20C000F:
0009e7 81ea      	LDD  R30,Y+2
0009e8 95e0      	COM  R30
0009e9 8118      	LDD  R17,Y+0
0009ea c025      	RJMP _0x2140001
                 _0x20C000E:
0009eb 3010      	CPI  R17,0
0009ec f419      	BRNE _0x20C0011
0009ed e0e0      	LDI  R30,LOW(0)
0009ee 8118      	LDD  R17,Y+0
0009ef c020      	RJMP _0x2140001
                 _0x20C0011:
                 _0x20C0005:
0009f0 81ea      	LDD  R30,Y+2
0009f1 8118      	LDD  R17,Y+0
0009f2 c01d      	RJMP _0x2140001
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
0009f3 93ba      	ST   -Y,R27
0009f4 93aa      	ST   -Y,R26
0009f5 81ea      	LDD  R30,Y+2
0009f6 30e1      	CPI  R30,LOW(0x1)
0009f7 f421      	BRNE _0x20C0015
0009f8 81e8      	LD   R30,Y
0009f9 81f9      	LDD  R31,Y+1
0009fa 91e4      	LPM  R30,Z
0009fb c014      	RJMP _0x2140001
                 _0x20C0015:
0009fc 30e2      	CPI  R30,LOW(0x2)
0009fd f429      	BRNE _0x20C0016
0009fe 81a8      	LD   R26,Y
0009ff 81b9      	LDD  R27,Y+1
000a00 940e 0b7c 	CALL __EEPROMRDB
000a02 c00d      	RJMP _0x2140001
                 _0x20C0016:
000a03 30e3      	CPI  R30,LOW(0x3)
000a04 f441      	BRNE _0x20C0018
000a05 81a8      	LD   R26,Y
000a06 81b9      	LDD  R27,Y+1
                +
000a07 91e0 055d+LDS R30 , _glcd_state + ( 25 )
000a09 91f0 055e+LDS R31 , _glcd_state + ( 25 ) + 1
000a0b 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000a0c c003      	RJMP _0x2140001
                 _0x20C0018:
000a0d 81a8      	LD   R26,Y
000a0e 81b9      	LDD  R27,Y+1
000a0f 91ec      	LD   R30,X
                 _0x2140001:
000a10 9623      	ADIW R28,3
000a11 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000a12 93aa      	ST   -Y,R26
000a13 81eb      	LDD  R30,Y+3
000a14 30e0      	CPI  R30,0
000a15 f429      	BRNE _0x20C001C
000a16 81e8      	LD   R30,Y
000a17 81a9      	LDD  R26,Y+1
000a18 81ba      	LDD  R27,Y+1+1
000a19 93ec      	ST   X,R30
000a1a c014      	RJMP _0x20C001B
                 _0x20C001C:
000a1b 30e2      	CPI  R30,LOW(0x2)
000a1c f431      	BRNE _0x20C001D
000a1d 81e8      	LD   R30,Y
000a1e 81a9      	LDD  R26,Y+1
000a1f 81ba      	LDD  R27,Y+1+1
000a20 940e 0b88 	CALL __EEPROMWRB
000a22 c00c      	RJMP _0x20C001B
                 _0x20C001D:
000a23 30e3      	CPI  R30,LOW(0x3)
000a24 f451      	BRNE _0x20C001B
000a25 81e9      	LDD  R30,Y+1
000a26 81fa      	LDD  R31,Y+1+1
000a27 93fa      	ST   -Y,R31
000a28 93ea      	ST   -Y,R30
000a29 81aa      	LDD  R26,Y+2
                +
000a2a 91e0 055f+LDS R30 , _glcd_state + ( 27 )
000a2c 91f0 0560+LDS R31 , _glcd_state + ( 27 ) + 1
000a2e 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20C001B:
000a2f 9624      	ADIW R28,4
000a30 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000544           	.BYTE 0x1D
                 _keypad:
000561           	.BYTE 0x12
                 _input_password:
000573           	.BYTE 0x4
                 _correct_password:
000577           	.BYTE 0x4
                 _lock_triggered:
00057b           	.BYTE 0x2
                 _dem_S0000000000:
00057d           	.BYTE 0x2
                 _gfx_addr_G100:
00057f           	.BYTE 0x2
                 _gfx_buffer_G100:
000581           	.BYTE 0x1F8
                 __seed_G109:
000779           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000a31 91a0 057d 	LDS  R26,_dem_S0000000000
000a33 91b0 057e 	LDS  R27,_dem_S0000000000+1
000a35 ede0      	LDI  R30,LOW(2000)
000a36 e0f7      	LDI  R31,HIGH(2000)
000a37 940e 0b61 	CALL __MODW21
000a39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x1:
000a3a 93ec      	ST   X,R30
000a3b e7a3      	LDI  R26,LOW(_input_password)
000a3c e0b5      	LDI  R27,HIGH(_input_password)
000a3d 0fa4      	ADD  R26,R20
000a3e 1fb5      	ADC  R27,R21
000a3f 91ec      	LD   R30,X
000a40 83ee      	STD  Y+6,R30
000a41 e0e0      	LDI  R30,LOW(0)
000a42 83ef      	STD  Y+7,R30
000a43 e0aa      	LDI  R26,LOW(10)
000a44 024a      	MULS R20,R26
000a45 920a      	ST   -Y,R0
000a46 e1e4      	LDI  R30,LOW(20)
000a47 93ea      	ST   -Y,R30
000a48 01de      	MOVW R26,R28
000a49 9618      	ADIW R26,8
000a4a 940e 079d 	CALL _glcd_outtextxy
000a4c e2ac      	LDI  R26,LOW(300)
000a4d e0b1      	LDI  R27,HIGH(300)
000a4e 940e 0b1f 	CALL _delay_ms
000a50 e0aa      	LDI  R26,LOW(10)
000a51 024a      	MULS R20,R26
000a52 920a      	ST   -Y,R0
000a53 e1e4      	LDI  R30,LOW(20)
000a54 93ea      	ST   -Y,R30
000a55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000a56 940e 079d 	CALL _glcd_outtextxy
000a58 efa4      	LDI  R26,LOW(500)
000a59 e0b1      	LDI  R27,HIGH(500)
000a5a 940e 0b1f 	CALL _delay_ms
                +
000a5c 5f4f     +SUBI R20 , LOW ( - 1 )
000a5d 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
000a5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000a5f 940e 079d 	CALL _glcd_outtextxy
000a61 eda0      	LDI  R26,LOW(2000)
000a62 e0b7      	LDI  R27,HIGH(2000)
000a63 940c 0b1f 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000a65 e0e0      	LDI  R30,LOW(0)
000a66 e0f0      	LDI  R31,HIGH(0)
000a67 93fa      	ST   -Y,R31
000a68 93ea      	ST   -Y,R30
000a69 e0a4      	LDI  R26,LOW(4)
000a6a e0b0      	LDI  R27,0
000a6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5:
000a6c e7af      	LDI  R26,LOW(_gfx_addr_G100)
000a6d e0b5      	LDI  R27,HIGH(_gfx_addr_G100)
000a6e 91ed      	LD   R30,X+
000a6f 91fd      	LD   R31,X+
000a70 9631      	ADIW R30,1
000a71 93fe      	ST   -X,R31
000a72 93ee      	ST   -X,R30
000a73 9731      	SBIW R30,1
000a74 57ef      	SUBI R30,LOW(-_gfx_buffer_G100)
000a75 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
000a76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000a77 93ba      	ST   -Y,R27
000a78 93aa      	ST   -Y,R26
000a79 940e 0b9f 	CALL __SAVELOCR4
000a7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000a7c 93e0 0064 	STS  100,R30
000a7e 91e0 0065 	LDS  R30,101
000a80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000a81 0fea      	ADD  R30,R26
000a82 1ffb      	ADC  R31,R27
000a83 83ee      	STD  Y+6,R30
000a84 83ff      	STD  Y+6+1,R31
000a85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x9:
000a86 85ec      	LDD  R30,Y+12
000a87 93ea      	ST   -Y,R30
000a88 81ef      	LDD  R30,Y+7
000a89 85f8      	LDD  R31,Y+7+1
000a8a 9631      	ADIW R30,1
000a8b 83ef      	STD  Y+7,R30
000a8c 87f8      	STD  Y+7+1,R31
000a8d 9731      	SBIW R30,1
000a8e 93fa      	ST   -Y,R31
000a8f 93ea      	ST   -Y,R30
000a90 e0a0      	LDI  R26,LOW(0)
000a91 940c 0a12 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000a93 930a      	ST   -Y,R16
000a94 89a8      	LDD  R26,Y+16
000a95 940c 037a 	JMP  _pcd8544_setaddr_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xB:
000a97 85ec      	LDD  R30,Y+12
000a98 93ea      	ST   -Y,R30
000a99 81ef      	LDD  R30,Y+7
000a9a 85f8      	LDD  R31,Y+7+1
000a9b 9631      	ADIW R30,1
000a9c 83ef      	STD  Y+7,R30
000a9d 87f8      	STD  Y+7+1,R31
000a9e 9731      	SBIW R30,1
000a9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
000aa0 2766      	CLR  R22
000aa1 2777      	CLR  R23
000aa2 01df      	MOVW R26,R30
000aa3 01cb      	MOVW R24,R22
000aa4 940c 09f3 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000aa6 935a      	ST   -Y,R21
000aa7 85aa      	LDD  R26,Y+10
000aa8 940c 09cb 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
000aaa 930a      	ST   -Y,R16
000aab 9503      	INC  R16
000aac 89e8      	LDD  R30,Y+16
000aad 93ea      	ST   -Y,R30
000aae 935a      	ST   -Y,R21
000aaf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
000ab0 2f5e      	MOV  R21,R30
000ab1 85ec      	LDD  R30,Y+12
000ab2 93ea      	ST   -Y,R30
000ab3 81af      	LDD  R26,Y+7
000ab4 85b8      	LDD  R27,Y+7+1
000ab5 2788      	CLR  R24
000ab6 2799      	CLR  R25
000ab7 940e 09f3 	CALL _glcd_readmem
000ab9 2e1e      	MOV  R1,R30
000aba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
000abb 930a      	ST   -Y,R16
000abc 9503      	INC  R16
000abd 89e8      	LDD  R30,Y+16
000abe 93ea      	ST   -Y,R30
000abf 85ee      	LDD  R30,Y+14
000ac0 93ea      	ST   -Y,R30
000ac1 85e9      	LDD  R30,Y+9
000ac2 85fa      	LDD  R31,Y+9+1
000ac3 9631      	ADIW R30,1
000ac4 87e9      	STD  Y+9,R30
000ac5 87fa      	STD  Y+9+1,R31
000ac6 9731      	SBIW R30,1
000ac7 cfd8      	RJMP SUBOPT_0xC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000ac8 93ba      	ST   -Y,R27
000ac9 93aa      	ST   -Y,R26
000aca 81a8      	LD   R26,Y
000acb 81b9      	LDD  R27,Y+1
000acc 940e 0b99 	CALL __CPW02
000ace 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000acf 940e 0b9d 	CALL __SAVELOCR6
                +
000ad1 91e0 0548+LDS R30 , _glcd_state + ( 4 )
000ad3 91f0 0549+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000ad5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
000ad6 01f8      	MOVW R30,R16
                +
000ad7 5f0f     +SUBI R16 , LOW ( - 1 )
000ad8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000ad9 9004      	LPM  R0,Z
000ada 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14:
                +
000adb 91e0 0548+LDS R30 , _glcd_state + ( 4 )
000add 91f0 0549+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000adf 9631      	ADIW R30,1
000ae0 91e4      	LPM  R30,Z
000ae1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x15:
000ae2 93ea      	ST   -Y,R30
000ae3 e0e0      	LDI  R30,LOW(0)
000ae4 93ea      	ST   -Y,R30
000ae5 e0e0      	LDI  R30,LOW(0)
000ae6 e0f0      	LDI  R31,HIGH(0)
000ae7 93fa      	ST   -Y,R31
000ae8 93ea      	ST   -Y,R30
000ae9 e0a9      	LDI  R26,LOW(9)
000aea 940c 04af 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x16:
000aec 932a      	ST   -Y,R18
000aed 85ad      	LDD  R26,Y+13
000aee 85be      	LDD  R27,Y+13+1
000aef 85ef      	LDD  R30,Y+15
000af0 89f8      	LDD  R31,Y+15+1
000af1 9509      	ICALL
000af2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x17:
000af3 89e8      	LDD  R30,Y+16
000af4 89f9      	LDD  R31,Y+16+1
000af5 9734      	SBIW R30,4
000af6 8be8      	STD  Y+16,R30
000af7 8bf9      	STD  Y+16+1,R31
000af8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
000af9 85ad      	LDD  R26,Y+13
000afa 85be      	LDD  R27,Y+13+1
000afb 85ef      	LDD  R30,Y+15
000afc 89f8      	LDD  R31,Y+15+1
000afd 9509      	ICALL
000afe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x19:
000aff 89a8      	LDD  R26,Y+16
000b00 89b9      	LDD  R27,Y+16+1
000b01 9614      	ADIW R26,4
000b02 940e 0b6f 	CALL __GETW1P
000b04 83ee      	STD  Y+6,R30
000b05 83ff      	STD  Y+6+1,R31
000b06 81ae      	LDD  R26,Y+6
000b07 81bf      	LDD  R27,Y+6+1
000b08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1A:
000b09 89a8      	LDD  R26,Y+16
000b0a 89b9      	LDD  R27,Y+16+1
000b0b 9614      	ADIW R26,4
000b0c 940e 0b6f 	CALL __GETW1P
000b0e 87ea      	STD  Y+10,R30
000b0f 87fb      	STD  Y+10+1,R31
000b10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
000b11 01de      	MOVW R26,R28
000b12 961c      	ADIW R26,12
000b13 940e 0b29 	CALL __ADDW2R15
000b15 940e 0b6f 	CALL __GETW1P
000b17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
000b18 81ec      	LDD  R30,Y+4
000b19 81fd      	LDD  R31,Y+4+1
000b1a 9731      	SBIW R30,1
000b1b 83ec      	STD  Y+4,R30
000b1c 83fd      	STD  Y+4+1,R31
000b1d 9631      	ADIW R30,1
000b1e 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000b1f 9610      	adiw r26,0
000b20 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000b21 ed80     +LDI R24 , LOW ( 0x7D0 )
000b22 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000b23 9701     +SBIW R24 , 1
000b24 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000b25 95a8      	wdr
000b26 9711      	sbiw r26,1
000b27 f7c9      	brne __delay_ms0
                 __delay_ms1:
000b28 9508      	ret
                 
                 __ADDW2R15:
000b29 2400      	CLR  R0
000b2a 0daf      	ADD  R26,R15
000b2b 1db0      	ADC  R27,R0
000b2c 9508      	RET
                 
                 __ANEGW1:
000b2d 95f1      	NEG  R31
000b2e 95e1      	NEG  R30
000b2f 40f0      	SBCI R31,0
000b30 9508      	RET
                 
                 __LSLB12:
000b31 23ee      	TST  R30
000b32 2e0e      	MOV  R0,R30
000b33 2fea      	MOV  R30,R26
000b34 f019      	BREQ __LSLB12R
                 __LSLB12L:
000b35 0fee      	LSL  R30
000b36 940a      	DEC  R0
000b37 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000b38 9508      	RET
                 
                 __LSRB12:
000b39 23ee      	TST  R30
000b3a 2e0e      	MOV  R0,R30
000b3b 2fea      	MOV  R30,R26
000b3c f019      	BREQ __LSRB12R
                 __LSRB12L:
000b3d 95e6      	LSR  R30
000b3e 940a      	DEC  R0
000b3f f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000b40 9508      	RET
                 
                 __CWD1:
000b41 2f6f      	MOV  R22,R31
000b42 0f66      	ADD  R22,R22
000b43 0b66      	SBC  R22,R22
000b44 2f76      	MOV  R23,R22
000b45 9508      	RET
                 
                 __MULW12U:
000b46 9ffa      	MUL  R31,R26
000b47 2df0      	MOV  R31,R0
000b48 9feb      	MUL  R30,R27
000b49 0df0      	ADD  R31,R0
000b4a 9fea      	MUL  R30,R26
000b4b 2de0      	MOV  R30,R0
000b4c 0df1      	ADD  R31,R1
000b4d 9508      	RET
                 
                 __DIVW21U:
000b4e 2400      	CLR  R0
000b4f 2411      	CLR  R1
000b50 e190      	LDI  R25,16
                 __DIVW21U1:
000b51 0faa      	LSL  R26
000b52 1fbb      	ROL  R27
000b53 1c00      	ROL  R0
000b54 1c11      	ROL  R1
000b55 1a0e      	SUB  R0,R30
000b56 0a1f      	SBC  R1,R31
000b57 f418      	BRCC __DIVW21U2
000b58 0e0e      	ADD  R0,R30
000b59 1e1f      	ADC  R1,R31
000b5a c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000b5b 60a1      	SBR  R26,1
                 __DIVW21U3:
000b5c 959a      	DEC  R25
000b5d f799      	BRNE __DIVW21U1
000b5e 01fd      	MOVW R30,R26
000b5f 01d0      	MOVW R26,R0
000b60 9508      	RET
                 
                 __MODW21:
000b61 94e8      	CLT
000b62 ffb7      	SBRS R27,7
000b63 c004      	RJMP __MODW211
000b64 95a0      	COM  R26
000b65 95b0      	COM  R27
000b66 9611      	ADIW R26,1
000b67 9468      	SET
                 __MODW211:
000b68 fdf7      	SBRC R31,7
000b69 dfc3      	RCALL __ANEGW1
000b6a dfe3      	RCALL __DIVW21U
000b6b 01fd      	MOVW R30,R26
000b6c f40e      	BRTC __MODW212
000b6d dfbf      	RCALL __ANEGW1
                 __MODW212:
000b6e 9508      	RET
                 
                 __GETW1P:
000b6f 91ed      	LD   R30,X+
000b70 91fc      	LD   R31,X
000b71 9711      	SBIW R26,1
000b72 9508      	RET
                 
                 __GETW1PF:
000b73 9005      	LPM  R0,Z+
000b74 91f4      	LPM  R31,Z
000b75 2de0      	MOV  R30,R0
000b76 9508      	RET
                 
                 __PUTPARD1:
000b77 937a      	ST   -Y,R23
000b78 936a      	ST   -Y,R22
000b79 93fa      	ST   -Y,R31
000b7a 93ea      	ST   -Y,R30
000b7b 9508      	RET
                 
                 __EEPROMRDB:
000b7c 99e1      	SBIC EECR,EEWE
000b7d cffe      	RJMP __EEPROMRDB
000b7e 93ff      	PUSH R31
000b7f b7ff      	IN   R31,SREG
000b80 94f8      	CLI
000b81 bbae      	OUT  EEARL,R26
000b82 bbbf      	OUT  EEARH,R27
000b83 9ae0      	SBI  EECR,EERE
000b84 b3ed      	IN   R30,EEDR
000b85 bfff      	OUT  SREG,R31
000b86 91ff      	POP  R31
000b87 9508      	RET
                 
                 __EEPROMWRB:
000b88 9be1      	SBIS EECR,EEWE
000b89 c002      	RJMP __EEPROMWRB1
000b8a 95a8      	WDR
000b8b cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000b8c b79f      	IN   R25,SREG
000b8d 94f8      	CLI
000b8e bbae      	OUT  EEARL,R26
000b8f bbbf      	OUT  EEARH,R27
000b90 9ae0      	SBI  EECR,EERE
000b91 b38d      	IN   R24,EEDR
000b92 17e8      	CP   R30,R24
000b93 f019      	BREQ __EEPROMWRB0
000b94 bbed      	OUT  EEDR,R30
000b95 9ae2      	SBI  EECR,EEMWE
000b96 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000b97 bf9f      	OUT  SREG,R25
000b98 9508      	RET
                 
                 __CPW02:
000b99 2400      	CLR  R0
000b9a 160a      	CP   R0,R26
000b9b 060b      	CPC  R0,R27
000b9c 9508      	RET
                 
                 __SAVELOCR6:
000b9d 935a      	ST   -Y,R21
                 __SAVELOCR5:
000b9e 934a      	ST   -Y,R20
                 __SAVELOCR4:
000b9f 933a      	ST   -Y,R19
                 __SAVELOCR3:
000ba0 932a      	ST   -Y,R18
                 __SAVELOCR2:
000ba1 931a      	ST   -Y,R17
000ba2 930a      	ST   -Y,R16
000ba3 9508      	RET
                 
                 __LOADLOCR6:
000ba4 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000ba5 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000ba6 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000ba7 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000ba8 8119      	LDD  R17,Y+1
000ba9 8108      	LD   R16,Y
000baa 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  51 r1 :  12 r2 :   0 r3 :   0 r4 :   5 r5 :   1 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  84 r17: 102 r18:  66 r19:  44 r20:  33 r21:  52 r22:  17 r23:   3 
r24:  16 r25:  10 r26: 318 r27: 117 r28:  35 r29:   1 r30: 773 r31: 192 
x  :  41 y  : 530 z  :  31 
Registers used: 24 out of 35 (68.6%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :  26 
adiw  :  50 and   :   8 andi  :  21 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  45 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  12 
brlt  :   7 brmi  :   1 brne  :  83 brpl  :   1 brsh  :  18 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 150 
cbi   :   3 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  28 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   9 
cp    :  28 cpc   :  18 cpi   :  97 cpse  :   0 dec   :   4 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :   5 inc   :   2 jmp   :  51 ld    :  58 ldd   : 271 
ldi   : 251 lds   :  50 lpm   :  30 lsl   :   4 lsr   :  15 mov   :  90 
movw  :  51 mul   :   7 muls  :   2 mulsu :   0 neg   :   2 nop   :   0 
or    :   6 ori   :  24 out   :  22 pop   :  16 push  :  16 rcall :  52 
ret   :  60 reti  :   1 rjmp  : 157 rol   :   4 ror   :   0 sbc   :   4 
sbci  :  18 sbi   :  11 sbic  :   2 sbis  :   4 sbiw  :  40 sbr   :   1 
sbrc  :   3 sbrs  :  11 sec   :   0 seh   :   0 sei   :   1 sen   :   0 
ser   :   0 ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 180 std   :  73 sts   :  50 sub   :   9 subi  :  51 
swap  :   0 tst   :   6 wdr   :   2 
Instructions used: 70 out of 117 (59.8%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001756   5286    688   5974  131072   4.6%
[.dseg] 0x000100 0x00077d      0    637    637    4096  15.6%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 6 warnings
